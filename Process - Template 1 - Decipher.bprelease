<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>Decipher Templates v18</bpr:name>
    <bpr:release-notes />
    <bpr:created>2020-09-04 09:58:36Z</bpr:created>
    <bpr:package-id>2</bpr:package-id>
    <bpr:package-name>Decipher Templates</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="14">
        <process id="1f1e6456-1438-4c8c-8340-fbe9428bcc39" name="Decipher Process Template 1 - Request" xmlns="http://www.blueprism.co.uk/product/process"><process name="Decipher Process Template 1 - Request" version="1.0" bpversion="6.7.0.20116" narrative="A basic Decipher Process Template:&#xD;&#xA;Best Practice Exception Handling&#xD;&#xA;Process broken down into Work Step sub pages&#xD;&#xA;Supported file extns - jpg, jpeg, pdf, bmp, png" byrefcollection="true"><view><camerax>-161</camerax><cameray>120</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="32c440cd-4c60-4551-8f86-f561e6496127" type="Normal" published="False"><name>Start Up </name><view><camerax>0</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c" type="Normal" published="False"><name>Push Documents</name><view><camerax>-264</camerax><cameray>-12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82099a76-bab7-4ef9-be15-064a248c888e" type="Normal" published="False"><name>Populate Response Queue</name><view><camerax>3</camerax><cameray>205</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="64d080fa-eeec-4c20-a4ce-25c22492bfc4" type="Normal" published="False"><name>Close Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3acbdf78-d0b0-481f-ad00-672cdc98e7a3" type="Normal" published="False"><name>Work Step 1</name><view><camerax>0</camerax><cameray>210</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="447c4a01-eca1-4201-ac88-6b2eb4737553" type="Normal" published="False"><name>Mark Item As Completed</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b99a94a6-68dc-4668-81a0-e5be13b8c635" type="Normal" published="False"><name>Mark Item As Exception</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fb79b60d-ac6a-4083-addf-150d9a459fa5" type="Normal" published="False"><name>Reset Global Data</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c" type="Normal" published="False"><name>Notify Termination</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="96492f15-adf2-4cba-a88d-b6187cdc1072" type="Normal" published="False"><name>Send Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="2b89cbae-7c37-4e6e-99b6-fd8498f2779f" name="Stage1" type="ProcessInfo"><display x="-540" y="-255" w="360" h="120" /></stage><stage stageid="c5a629a7-6777-4d29-baf7-ecd1a261fd70" name="Start Up " type="SubSheetInfo"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><narrative>Page to set up and login to decipher server</narrative><display x="-450" y="-120" w="150" h="90" /></stage><stage stageid="1dc5e108-33d2-4902-b3a9-54ff0e95dea6" name="Start" type="Start"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="15" y="-150" /><onsuccess>f796a3df-d5e2-4ce7-a405-e6bb41f71ec9</onsuccess></stage><stage stageid="a40ebcb3-eeb1-4aa1-bfdf-8bc7658dfe72" name="End" type="End"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="15" y="195" /></stage><stage stageid="96730cf3-5ea5-4411-9bd7-9edd842ea5ea" name="Work Step 1" type="SubSheetInfo"><subsheetid>3acbdf78-d0b0-481f-ad00-672cdc98e7a3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3d441a38-04a3-4a03-9da5-4cfa9833e220" name="Start" type="Start"><subsheetid>3acbdf78-d0b0-481f-ad00-672cdc98e7a3</subsheetid><display x="15" y="-105" /><onsuccess>9af8dbce-3271-48a9-af97-df149593a5cc</onsuccess></stage><stage stageid="9af8dbce-3271-48a9-af97-df149593a5cc" name="End" type="End"><subsheetid>3acbdf78-d0b0-481f-ad00-672cdc98e7a3</subsheetid><display x="15" y="90" /></stage><stage stageid="1b14d56c-5797-4923-906b-82af77f84c12" name="Reset Global Data" type="SubSheetInfo"><subsheetid>fb79b60d-ac6a-4083-addf-150d9a459fa5</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0d20eb49-20ec-436d-b0df-2d8c3af3d1b1" name="Start" type="Start"><subsheetid>fb79b60d-ac6a-4083-addf-150d9a459fa5</subsheetid><display x="15" y="-105" /><onsuccess>b55883ae-01e0-411e-b49f-7f63491aeb8b</onsuccess></stage><stage stageid="b55883ae-01e0-411e-b49f-7f63491aeb8b" name="End" type="End"><subsheetid>fb79b60d-ac6a-4083-addf-150d9a459fa5</subsheetid><display x="15" y="90" /></stage><stage stageid="c6a7cf21-5dbb-4f49-b25e-b2375da46195" name="Decipher Server Endpoint" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">localhost</initialvalue><private /><alwaysinit /></stage><stage stageid="846778e7-dd87-4d2a-bb9a-c3b080619cb2" name="Decipher Server Port Number" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="-15" /><datatype>number</datatype><initialvalue>12543</initialvalue><private /><alwaysinit /></stage><stage stageid="cdc8bc36-3b92-4810-9918-054a00b2c4f6" name="Decipher Username" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8771f8e-6f52-4165-b5eb-cc2a54704f8d" name="Decipher Password" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="7823405b-9def-4504-add7-16728c5eabc8" name="Connection Inputs" type="Block"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-510" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d2fadce3-4ba3-4178-8531-8786c55be8fb" name="RabbitMQ Endpoint" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="75" /><datatype>text</datatype><initialvalue xml:space="preserve">localhost</initialvalue><private /><alwaysinit /></stage><stage stageid="ce1ecba3-ce42-40ed-bf73-83e5b5df997d" name="RabbitMQ Port Number" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="75" /><datatype>number</datatype><initialvalue>5672</initialvalue><private /><alwaysinit /></stage><stage stageid="3cc2c871-2733-4ba5-b5cd-5b5b7223640d" name="RabbitMQ Username" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="120" /><datatype>text</datatype><initialvalue xml:space="preserve">guest</initialvalue><private /><alwaysinit /></stage><stage stageid="85e3e039-ebbe-4716-b55f-5a914edc8ce8" name="RabbitMQ Password" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="120" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="f796a3df-d5e2-4ce7-a405-e6bb41f71ec9" name="Set Up Decipher Connection" type="Action"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" /><inputs><input type="text" name="Decipher Server Endpoint" friendlyname="Decipher Server Endpoint" narrative="The Decipher Server Endpoint that this VBO will use for communication" expr="[Decipher Server Endpoint]" /><input type="number" name="Decipher Server Port Number" friendlyname="Decipher Server Port Number" narrative="The Decipher Server Port Number" expr="[Decipher Server Port Number]" /><input type="text" name="Message Queue Hostname" friendlyname="Message Queue Hostname" narrative="The Hostname for the Message Queue" expr="[RabbitMQ Endpoint]" /><input type="number" name="Message Queue Port Number" friendlyname="Message Queue Port Number" narrative="The Port number for the Message Queue" expr="[RabbitMQ Port Number]" /><input type="text" name="Message Queue Username" friendlyname="Message Queue Username" narrative="The Username to be used for authenticating to the Message Queue" expr="[RabbitMQ Username]" /><input type="password" name="Message Queue Password" friendlyname="Message Queue Password" narrative="The Password to be used for authenticating to the Message Queue" expr="[RabbitMQ Password]" /></inputs><onsuccess>b9c34acb-fdfd-46f3-91ed-a9061459310d</onsuccess><resource object="Decipher" action="Set Up" /></stage><stage stageid="0fc4e0bf-066c-4fc1-87d5-ea62b5b5c185" name="Login to Decipher" type="Action"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="15" y="105" /><inputs><input type="text" name="Username" friendlyname="Username" narrative="The Decipher account username" expr="[Decipher Username]" /><input type="password" name="Password" friendlyname="Password" narrative="The Decipher account password" expr="[Decipher Password]" /></inputs><onsuccess>a40ebcb3-eeb1-4aa1-bfdf-8bc7658dfe72</onsuccess><resource object="Decipher" action="Login" /></stage><stage stageid="5a71f92a-7c37-4b32-b0fc-de4c07b7eecd" name="Note4" type="Note"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><narrative>Enterprise License holders should always use Blue Prism Credentials Here - For both Decipher and RabbitMQ</narrative><display x="-225" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>bbb50617-bf8f-4fc1-bbe3-a8239a8fd82c</onsuccess></stage><stage stageid="bbb50617-bf8f-4fc1-bbe3-a8239a8fd82c" name="Generate Credential Name" type="Calculation"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-225" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8c5ad99a-c693-4063-922e-dbd3b6639db0</onsuccess><calculation expression="Replace(GetResourceName(),&quot;_debug&quot;,&quot;&quot;) &amp; &quot; Decipher Name&quot;" stage="Decipher Credential Name" /></stage><stage stageid="8c5ad99a-c693-4063-922e-dbd3b6639db0" name="Get Decipher Credential" type="Action"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Credentials Name" narrative="The name of the credentials to get" expr="[Decipher Credential Name]" /></inputs><outputs><output type="text" name="Username" narrative="The user name" stage="Decipher Credential Username" /><output type="password" name="Password" narrative="The password" stage="Decipher Credential Password" /><output type="date" name="Expiry Date" friendlyname="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" friendlyname="Status" narrative="The status" stage="" /></outputs><onsuccess>0fc4e0bf-066c-4fc1-87d5-ea62b5b5c185</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage><stage stageid="8ff48938-4c69-4eaa-b03d-a29519f4dea9" name="Login Decipher Block" type="Block"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-60" y="45" w="270" h="120" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d0c63f2c-d081-420f-ae1a-f0bf717e4228" name="Set up Decipher Block" type="Block"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-60" y="-120" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="620f523a-342e-4cec-8e79-5dd2169c65a4" name="Resume" type="Resume"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="375" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>73659c8f-777f-45f0-9aac-8946946da53e</onsuccess></stage><stage stageid="73659c8f-777f-45f0-9aac-8946946da53e" name="System Unavailable Exception" type="Exception"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="480" y="-75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Unavailable Exception" detail="&quot;Unable to launch &lt;PUT APPLICATION NAME HERE&gt;&quot;" /></stage><stage stageid="3c158a8b-629a-4498-9c92-6793fb545f0e" name="Recover" type="Recover"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="165" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ea06759f-bb50-4144-8fc8-1cba568a1557</onsuccess></stage><stage stageid="ea06759f-bb50-4144-8fc8-1cba568a1557" name="Exception Data" type="MultipleCalculation"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="285" y="-75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>620f523a-342e-4cec-8e79-5dd2169c65a4</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="18b0f511-dc51-4553-a04b-7b2338c40e8d" name="Count" type="Calculation"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="285" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0a8f994e-6239-4fba-ab44-e03916583cdd</onsuccess><calculation expression="[Retry Count]+1" stage="Retry Count" /></stage><stage stageid="922181c9-5920-4726-bfa0-b234f0214209" name="Retry?" type="Decision"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="285" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Retry Count]&lt;[Retry Limit] AND (Lower(ExceptionType())=&quot;system exception&quot; OR Lower(ExceptionType())=&quot;internal&quot;)" /><ontrue>18b0f511-dc51-4553-a04b-7b2338c40e8d</ontrue><onfalse>cddc2f6b-6d32-48b1-bc95-5df396649a5a</onfalse></stage><stage stageid="cddc2f6b-6d32-48b1-bc95-5df396649a5a" name="Throw" type="Exception"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="495" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="a0864815-9b33-4942-a686-cdea8c7ac145" name="Note4" type="Note"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><narrative>Login System Exceptions will not be retried</narrative><display x="285" y="240" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>922181c9-5920-4726-bfa0-b234f0214209</onsuccess></stage><stage stageid="70007b97-2aa4-4416-a55d-d98dc1a5af35" name="Note4" type="Note"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><narrative>This action should throw a Login System Exception if it thinks the credentials entered were incorrect</narrative><display x="-180" y="240" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>0fc4e0bf-066c-4fc1-87d5-ea62b5b5c185</onsuccess></stage><stage stageid="bf4b69b0-bc92-4338-8bfc-0fc6461d69e1" name="Retry Limit" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="-435" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f65922-9c33-48a3-9e4d-b27c7194b795" name="Retry Count" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="-435" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b339ae9d-c90f-49fa-9337-509f5f10c225" name="Decipher Credential Username" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-615" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a2bab87-8da3-4394-b605-bf4925285b37" name="Decipher Credential Password" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-615" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="7aa19115-c080-416b-8290-8f16a48806cc" name="Decipher Credentials" type="Block"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-705" y="-30" w="180" h="135" /><font family="Tahoma" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="a37e6619-8dfb-4f53-a51d-b6e18f37bcdb" name="Decipher Credential Name" type="Data"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><display x="-615" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48ef29d3-7552-462c-9d01-f186adfa057e" name="Exception Type" type="Data"><subsheetid>fb79b60d-ac6a-4083-addf-150d9a459fa5</subsheetid><display x="360" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="b2a36312-6396-41f0-b205-1dd5efd7ef46" name="Exception Detail" type="Data"><subsheetid>fb79b60d-ac6a-4083-addf-150d9a459fa5</subsheetid><display x="360" y="30" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="b9c34acb-fdfd-46f3-91ed-a9061459310d" name="Anchor1" type="Anchor"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" w="10" h="10" /><onsuccess>0fc4e0bf-066c-4fc1-87d5-ea62b5b5c185</onsuccess></stage><stage stageid="1676ff31-2efa-43e7-b87f-ff38d6a1efe1" name="Note3" type="Note"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><narrative>Navigate back ready for step 1d  -maybe additional steps required</narrative><display x="165" y="15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>b9c34acb-fdfd-46f3-91ed-a9061459310d</onsuccess></stage><stage stageid="c29f9551-b558-4ff9-b851-e8b26757aa61" name="Close Down" type="SubSheetInfo"><subsheetid>64d080fa-eeec-4c20-a4ce-25c22492bfc4</subsheetid><narrative>kept for future use - Decipher logout etc</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c12849be-6986-4f61-894a-bc0bcaf65a46" name="Start" type="Start"><subsheetid>64d080fa-eeec-4c20-a4ce-25c22492bfc4</subsheetid><display x="15" y="-105" /><onsuccess>e1046f0c-125b-47fc-ae79-d42c114d1014</onsuccess></stage><stage stageid="e1046f0c-125b-47fc-ae79-d42c114d1014" name="End" type="End"><subsheetid>64d080fa-eeec-4c20-a4ce-25c22492bfc4</subsheetid><display x="15" y="90" /></stage><stage stageid="602e7488-804b-4f1d-b1d6-4d775d428f7d" name="Recover" type="Recover"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="165" y="135" /><onsuccess>922181c9-5920-4726-bfa0-b234f0214209</onsuccess></stage><stage stageid="0a8f994e-6239-4fba-ab44-e03916583cdd" name="Resume" type="Resume"><subsheetid>32c440cd-4c60-4551-8f86-f561e6496127</subsheetid><loginhibit /><display x="285" y="15" /><onsuccess>1676ff31-2efa-43e7-b87f-ff38d6a1efe1</onsuccess></stage><stage stageid="bb34fe80-058f-424f-b8c2-b40c9b2d7242" name="Push Documents" type="SubSheetInfo"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><narrative>Page to push documents - Either a single folder can be configured, or the file location can be configured as input, choice is left to the user</narrative><display x="-255" y="-90" w="150" h="90" /></stage><stage stageid="ab9b1099-6378-4d05-b8f9-e79945360b7e" name="Start" type="Start"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><display x="90" y="-285" /><onsuccess>db4a89c2-e542-4008-9ac4-ee2bf2e6eafa</onsuccess></stage><stage stageid="8684463b-2ab6-4ebd-a30d-f9b7dfa21a56" name="End" type="End"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><display x="-15" y="255" /></stage><stage stageid="a8815329-3c00-4dca-89a5-7dfc8f952976" name="Create New Batch" type="Action"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-90" /><inputs><input type="text" name="Name" friendlyname="Name" narrative="The batch name" expr="[Batch Name]" /><input type="text" name="Description" friendlyname="Description" narrative="The batch description" expr="[Batch Description]" /><input type="text" name="Batch Type Name" friendlyname="Batch Type Name" narrative="The name of the batch type to use for this batch" expr="[Batch Type Name]" /><input type="text" name="Queue Suffix" friendlyname="Queue Suffix" narrative="The identifier for the queue to notify on batch completion" expr="[Queue Suffix]" /><input type="flag" name="Split Document Into Single Pages" friendlyname="Split Document Into Single Pages" narrative="Flag to enable splitting documents within a batch to single page documents" expr="False" /></inputs><outputs><output type="text" name="Batch ID" friendlyname="Batch ID" narrative="The ID of the created batch" stage="Batch ID" /></outputs><onsuccess>afb700d4-af62-4a44-8867-6968d80fc7f4</onsuccess><resource object="Decipher" action="Create Batch" /></stage><stage stageid="1144fc73-bf64-40ce-891e-7839fb0a07d9" name="Add FIle to Batch" type="Action"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="45" /><inputs><input type="text" name="Batch ID" friendlyname="Batch ID" narrative="The ID of the batch to add the file to" expr="[Batch ID]" /><input type="text" name="File Path" friendlyname="File Path" narrative="The path to the file to add" expr="[Temp Coll.File location]" /></inputs><onsuccess>8849b161-60a3-4739-aa2c-4a697d137002</onsuccess><resource object="Decipher" action="Add File to Batch" /></stage><stage stageid="bf3f4bbe-183f-4b63-beee-328600590b10" name="Submit Batch" type="Action"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="135" /><inputs><input type="text" name="Batch ID" friendlyname="Batch ID" narrative="The batch identifier" expr="[Batch ID]" /></inputs><onsuccess>8684463b-2ab6-4ebd-a30d-f9b7dfa21a56</onsuccess><resource object="Decipher" action="Submit Batch" /></stage><stage stageid="afb700d4-af62-4a44-8867-6968d80fc7f4" name="Image File Loop" type="LoopStart"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-45" /><onsuccess>b13e6287-7d4f-454d-9f93-9a47ae4b970a</onsuccess><groupid>8a777bd1-6d05-43bc-b42f-21540e1c92da</groupid><looptype>ForEach</looptype><loopdata>Temp Coll</loopdata></stage><stage stageid="8849b161-60a3-4739-aa2c-4a697d137002" name="Image File Loop" type="LoopEnd"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="90" y="90" /><onsuccess>bf3f4bbe-183f-4b63-beee-328600590b10</onsuccess><groupid>8a777bd1-6d05-43bc-b42f-21540e1c92da</groupid></stage><stage stageid="21f8d8c9-4078-40d3-8524-cd4b5251c5ea" name="Batch ID" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><display x="-285" y="90" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="32478f86-c0a7-4078-ba5f-1bc52a4780b9" name="Batch Name" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-285" y="0" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ccc33585-2557-44c1-9fc3-f2def821727b" name="Batch Description" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-225" y="0" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="99ce0626-3073-44ea-8311-7ed5e6aef7ce" name="Batch Type Name" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-225" y="45" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="bf1f87e8-95a0-46f5-81b4-cf888adcad19" name="Queue Suffix" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-285" y="45" /><datatype>text</datatype><initialvalue xml:space="preserve">DecipherRabbitMQqueue</initialvalue><private /><alwaysinit /></stage><stage stageid="63c9106b-6e15-4c59-a445-4cd719c78b70" name="Batch Data" type="Block"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-30" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9d12046b-9b5b-428c-a44c-f4051adb7681" name="Decipher Batch Submission Block" type="Block"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><display x="-75" y="-180" w="375" h="390" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="db4a89c2-e542-4008-9ac4-ee2bf2e6eafa" name="Anchor2" type="Anchor"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-210" w="10" h="10" /><onsuccess>c0fbc65e-4ac4-42fb-9690-dcb18d2949be</onsuccess></stage><stage stageid="b10fbcd1-d9d5-4a00-92f6-baecef5354d5" name="Recover" type="Recover"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="210" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0b7d7a58-a882-46b2-8145-7cd184f17723</onsuccess></stage><stage stageid="ea81a2e8-4476-4677-8a22-f020ac5f7f12" name="Resume" type="Resume"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="210" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>53a77129-fce7-4512-9204-ce9365c4339f</onsuccess></stage><stage stageid="5f7052b6-8617-4aca-a7ff-f38b73c801a3" name="Count" type="Calculation"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="345" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ea81a2e8-4476-4677-8a22-f020ac5f7f12</onsuccess><calculation expression="[Retry Count]+1" stage="Retry Count" /></stage><stage stageid="0b7d7a58-a882-46b2-8145-7cd184f17723" name="Retry?" type="Decision"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="345" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Retry Count]&lt;[Retry Limit]" /><ontrue>5f7052b6-8617-4aca-a7ff-f38b73c801a3</ontrue><onfalse>d2e95164-5aa1-43ca-b3ea-ce21aa3a9203</onfalse></stage><stage stageid="d2e95164-5aa1-43ca-b3ea-ce21aa3a9203" name="Throw" type="Exception"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="540" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="53a77129-fce7-4512-9204-ce9365c4339f" name="Note3" type="Note"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><narrative>Navigate back - maybe additional steps required</narrative><display x="210" y="-210" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>db4a89c2-e542-4008-9ac4-ee2bf2e6eafa</onsuccess></stage><stage stageid="afadc388-082e-4a0f-b8db-c528aafbb0b7" name="Retry Limit" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="-435" y="180" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="b8cfd44d-19ca-4dc2-9d49-e6d74768088b" name="Retry Count" type="Data"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit /><display x="-435" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="cc2724a1-06bb-46e7-90bc-b4d86f37b013" name="Push Documents" type="SubSheet"><loginhibit onsuccess="true" /><display x="165" y="255" w="90" h="60" /><onsuccess>5d64e836-ae1e-41fb-8077-ce9ac3f32497</onsuccess><processid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</processid></stage><stage stageid="7c73cee9-171c-4286-83c3-0c7df4051673" name="Start" type="Start"><display x="60" y="-210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>342e8bfd-8efb-4087-bba5-0abce3b6375f</onsuccess></stage><stage stageid="f6be7521-3fb3-4c0a-bb59-cec4555f8c36" name="End" type="End"><display x="420" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae305bdd-855f-49d7-9375-ec59c1df721d" name="Recover" type="Recover"><display x="165" y="405" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0fd73015-3d8f-45a8-b462-2de5a74f0120</onsuccess></stage><stage stageid="057d981b-d02e-43e1-87ce-fe87431d3e0c" name="Resume" type="Resume"><display x="165" y="555" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ed0ce6b2-e759-4fe8-928f-19144c318455</onsuccess></stage><stage stageid="e825edcb-adb4-4918-82b9-03a3a475cd54" name="Got Item?" type="Decision"><display x="165" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Request Item ID]&lt;&gt;&quot;&quot;" /><ontrue>ea2ad5c5-ea1f-4c6e-92d0-53abef97a992</ontrue><onfalse>caabe3f4-5a7f-4277-a537-219fa4739dc6</onfalse></stage><stage stageid="ea2ad5c5-ea1f-4c6e-92d0-53abef97a992" name="Work Step 1" type="SubSheet"><display x="165" y="105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2921a5b-67ac-439f-bb86-cf06296e8be2</onsuccess><processid>3acbdf78-d0b0-481f-ad00-672cdc98e7a3</processid></stage><stage stageid="342e8bfd-8efb-4087-bba5-0abce3b6375f" name="Start Up" type="SubSheet"><display x="60" y="-120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8544449d-0c33-4ac0-a064-b624fe84b218</onsuccess><processid>32c440cd-4c60-4551-8f86-f561e6496127</processid></stage><stage stageid="8ccfdb88-c520-4b9d-aef9-bfa29651d109" name="Close Down" type="SubSheet"><display x="420" y="-150" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f6be7521-3fb3-4c0a-bb59-cec4555f8c36</onsuccess><processid>64d080fa-eeec-4c20-a4ce-25c22492bfc4</processid></stage><stage stageid="6826cd50-585f-4ef9-a298-7b9b3d034660" name="Work" type="Block"><display x="90" y="45" w="135" h="480" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dab1648e-0e89-47ea-86a6-252481cf2ffd" name="anchor8" type="Anchor"><display x="420" y="330" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>56d407ef-1946-407a-83ea-f66608a24ad2</onsuccess></stage><stage stageid="d2921a5b-67ac-439f-bb86-cf06296e8be2" name="Work Step 2" type="SubSheet"><display x="165" y="180" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cc2724a1-06bb-46e7-90bc-b4d86f37b013</onsuccess><processid>3acbdf78-d0b0-481f-ad00-672cdc98e7a3</processid></stage><stage stageid="56d407ef-1946-407a-83ea-f66608a24ad2" name="Reset Global Data" type="SubSheet"><display x="420" y="165" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ad43df26-f571-4447-92d0-126ddd55c0d7</onsuccess><processid>fb79b60d-ac6a-4083-addf-150d9a459fa5</processid></stage><stage stageid="ed0ce6b2-e759-4fe8-928f-19144c318455" name="Mark Item As Exception" type="SubSheet"><display x="315" y="555" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>869337f9-ed13-45bc-a742-6ec9132e4642</onsuccess><processid>b99a94a6-68dc-4668-81a0-e5be13b8c635</processid></stage><stage stageid="761efad7-d224-425b-8f48-6145de605eeb" name="Mark Item As Completed" type="SubSheet"><display x="300" y="330" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dab1648e-0e89-47ea-86a6-252481cf2ffd</onsuccess><processid>447c4a01-eca1-4201-ac88-6b2eb4737553</processid></stage><stage stageid="64a64c96-9c8e-40cb-9160-a8322c3e10f7" name="Stop?" type="Decision"><display x="420" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><decision expression="IsStopRequested() OR [Stop After Items]=0 OR LocalTime()&gt;[Stop After Time]" /><ontrue>8ccfdb88-c520-4b9d-aef9-bfa29651d109</ontrue><onfalse>4c9ebf91-9cd3-49f8-9be0-f40825d256ec</onfalse></stage><stage stageid="0eb14d4a-a7e5-4fcc-8823-274d069cf809" name="Note4" type="Note"><narrative>Add more steps as required</narrative><display x="30" y="180" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>d2921a5b-67ac-439f-bb86-cf06296e8be2</onsuccess></stage><stage stageid="ad43df26-f571-4447-92d0-126ddd55c0d7" name="Count Items" type="Calculation"><display x="420" y="75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64a64c96-9c8e-40cb-9160-a8322c3e10f7</onsuccess><calculation expression="[Stop After Items]-1" stage="Stop After Items" /></stage><stage stageid="8544449d-0c33-4ac0-a064-b624fe84b218" name="Get Next Item" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="60" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Request Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Request Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Request Queue Data" /><output type="text" name="Status" narrative="The status of the item." stage="Request Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Request Item Attempts" /></outputs><onsuccess>e825edcb-adb4-4918-82b9-03a3a475cd54</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="4c9ebf91-9cd3-49f8-9be0-f40825d256ec" name="Get Next Item" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="270" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Request Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Request Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Request Queue Data" /><output type="text" name="Status" narrative="The status of the item." stage="Request Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Request Item Attempts" /></outputs><onsuccess>e825edcb-adb4-4918-82b9-03a3a475cd54</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="869337f9-ed13-45bc-a742-6ec9132e4642" name="anchor14" type="Anchor"><display x="420" y="555" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dab1648e-0e89-47ea-86a6-252481cf2ffd</onsuccess></stage><stage stageid="caabe3f4-5a7f-4277-a537-219fa4739dc6" name="Note9" type="Note"><narrative>No more items available</narrative><display x="165" y="-150" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8ccfdb88-c520-4b9d-aef9-bfa29651d109</onsuccess></stage><stage stageid="95f16ea4-3931-4fb2-ab85-e137daa15011" name="Stop After Time" type="Data"><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-120" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>time</datatype><initialvalue>17:25:00</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="60a30b29-9761-4668-b37b-daf81bd99976" name="Stop After Items" type="Data"><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-120" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>number</datatype><initialvalue>9999999999</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="bef997c3-3901-4128-8860-525c891eaac2" name="Stopping Control Settings" type="Block"><display x="-210" y="30" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="ed67e321-d8a0-4c2f-8c94-d7848cb0bcd4" name="Request Queue Name" type="Data"><narrative>Decipher Request Queue - Each item should contain the file location(s) which needs to go as a single batch and/or any other required information</narrative><display x="-120" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Decipher Request Queue</initialvalue><alwaysinit /></stage><stage stageid="4790dc39-a21a-42be-9fcc-9e75e1fa9535" name="Process Settings" type="Block"><display x="-210" y="-150" w="165" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0fd73015-3d8f-45a8-b462-2de5a74f0120" name="Exception Data" type="MultipleCalculation"><display x="165" y="465" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>057d981b-d02e-43e1-87ce-fe87431d3e0c</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="5268ae39-5f5f-4de5-84d4-554d044de740" name="Mark Item As Completed" type="SubSheetInfo"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><narrative>Marks Decipher Request work queue item as completed</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="88a1e571-ca3b-4d29-8230-ee7a283d45c3" name="Start" type="Start"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>41c6175d-1311-4706-88b0-6aba44237c72</onsuccess></stage><stage stageid="6d662cec-cbdd-4443-9f94-a6148e43304f" name="Mark Completed" type="Action"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Request Item ID]" /></inputs><onsuccess>ac3dc58d-48d4-4201-9b7c-158a5732f209</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="41c6175d-1311-4706-88b0-6aba44237c72" name="Set Status" type="Action"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Request Item ID]" /><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="&quot;Completed&quot;" /></inputs><onsuccess>6d662cec-cbdd-4443-9f94-a6148e43304f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="ac3dc58d-48d4-4201-9b7c-158a5732f209" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><display x="15" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4a1504c8-9847-418b-9891-09950cbadd16</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="4a1504c8-9847-418b-9891-09950cbadd16" name="End3" type="End"><subsheetid>447c4a01-eca1-4201-ac88-6b2eb4737553</subsheetid><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="383f1aae-c83b-43c9-8a1c-dfe9358d4798" name="Mark Item As Exception" type="SubSheetInfo"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Marks the current work queue item as an exception</narrative><display x="-375" y="-135" w="150" h="90" /></stage><stage stageid="017d8946-0cca-42c8-9712-9a3a9532f73f" name="Start" type="Start"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="-210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f8ddffe7-aae7-4cd5-a6bf-6b32e33a9695</onsuccess></stage><stage stageid="e1bbdb7f-732e-4743-becc-aeabb4fca7e5" name="Retry Exception?" type="Decision"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>For system or internal exception, not for push documents page exception whcih has a seperate retry</narrative><display x="15" y="-60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system exception&quot; OR Lower([Exception Type])=&quot;internal&quot;" /><ontrue>ae0ed963-71eb-42d8-b09f-926787d79871</ontrue><onfalse>ed5f5d45-998a-4879-b7d9-9767571373c1</onfalse></stage><stage stageid="259daecc-a661-4e65-a69d-9dbc3f7b60c9" name="Previous Exception?" type="Decision"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="135" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Previous Exception Detail]=[Exception Detail]" /><ontrue>435dcc14-27bc-4ae4-94e0-540c809295fc</ontrue><onfalse>8303c699-044a-4a76-90b8-66ec56d1b43e</onfalse></stage><stage stageid="a50cc4c9-c9ad-4fc2-8b17-283017924f5e" name="Previous Exception Detail" type="Data"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="-225" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="435dcc14-27bc-4ae4-94e0-540c809295fc" name="Count" type="Calculation"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ea81f8b4-3d34-4449-89ab-57d674ff3980</onsuccess><calculation expression="1+ [Consecutive Exception Count]" stage="Consecutive Exception Count" /></stage><stage stageid="e76d7a5a-83ff-4167-8a25-4214a5029002" name="Consecutive Exception Count" type="Data"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="-225" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="ea81f8b4-3d34-4449-89ab-57d674ff3980" name="Limit?" type="Decision"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="285" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Consecutive Exception Count]&gt;=[Consecutive Exception Limit]" /><ontrue>bf2ba03c-120b-4742-8050-bd123ea467eb</ontrue><onfalse>9645257a-c371-4b15-beb1-6092a22db520</onfalse></stage><stage stageid="38b710f6-c34e-437f-83c8-6a06969b1c03" name="TERMINATE" type="Exception"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="480" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="b8aebadd-9662-4db9-bc76-051319213146" name="Consecutive Exception Limit" type="Data"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="-225" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="166f45b4-8853-4944-8e8d-163aad0d4bcf" name="End2" type="End"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="285" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fcd0a43c-ce4d-4448-a763-6ddf8e23ab6d" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="285" y="135" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>166f45b4-8853-4944-8e8d-163aad0d4bcf</onsuccess><steps><calculation expression="[Exception Detail]" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="bf2ba03c-120b-4742-8050-bd123ea467eb" name="Stop the process because consecutive exceptions are occuring" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>The consecutive exception limit has been reached, so throw a new exception to terminate the process.</narrative><display x="15" y="390" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>38b710f6-c34e-437f-83c8-6a06969b1c03</onsuccess></stage><stage stageid="1c593bd8-7150-4296-ad32-879bd7dcb13a" name="New Item ID" type="Data"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="-225" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed5f5d45-998a-4879-b7d9-9767571373c1" name="Tag Item" type="Action"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="105" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;Business Exception&quot;" /></inputs><onsuccess>9f2c0eb6-e100-4c3c-b60f-33d4c43bfd1e</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="cc473b2e-9066-4645-8f19-ce65c44dd8e8" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="450" y="-60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f338f3a6-b511-4d83-ac6c-d54228ed371d</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="8303c699-044a-4a76-90b8-66ec56d1b43e" name="Note5" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><loginhibit /><narrative>This exception is different from the previous one.</narrative><display x="150" y="135" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>fcd0a43c-ce4d-4448-a763-6ddf8e23ab6d</onsuccess></stage><stage stageid="9645257a-c371-4b15-beb1-6092a22db520" name="Note5" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><loginhibit /><narrative>This exception is the same as the previous one but the consecutive exception limit has not yet been reached.</narrative><display x="150" y="285" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>166f45b4-8853-4944-8e8d-163aad0d4bcf</onsuccess></stage><stage stageid="9f2c0eb6-e100-4c3c-b60f-33d4c43bfd1e" name="Note5" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><loginhibit /><narrative>Don't retry this type of exception, just mark the queue item and carry on.</narrative><display x="225" y="-60" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>450bc335-c354-4ce2-8087-c81446da4989</onsuccess></stage><stage stageid="4ee4c69e-0f4d-4b68-83b0-ce3ac823817b" name="Mark Exception" type="Action"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Request Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="True" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>259daecc-a661-4e65-a69d-9dbc3f7b60c9</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="450bc335-c354-4ce2-8087-c81446da4989" name="Mark Exception" type="Action"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="345" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="False" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>cc473b2e-9066-4645-8f19-ce65c44dd8e8</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="f338f3a6-b511-4d83-ac6c-d54228ed371d" name="End1" type="End"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="555" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae0ed963-71eb-42d8-b09f-926787d79871" name="Tag Item" type="Action"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Request Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;System Exception&quot;" /></inputs><onsuccess>4ee4c69e-0f4d-4b68-83b0-ce3ac823817b</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="f8ddffe7-aae7-4cd5-a6bf-6b32e33a9695" name="System Unavailable?" type="Decision"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="15" y="-135" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system unavailable exception&quot; OR Lower([Exception Type])=&quot;login system exception&quot;" /><ontrue>750db561-03a6-4ec0-9391-5bc09553ded2</ontrue><onfalse>e1bbdb7f-732e-4743-becc-aeabb4fca7e5</onfalse></stage><stage stageid="750db561-03a6-4ec0-9391-5bc09553ded2" name="Release Item" type="Action"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="-120" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[Item ID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now()" /></inputs><onsuccess>6ae4f54b-c743-462c-96b5-11c63eee25a2</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="6ae4f54b-c743-462c-96b5-11c63eee25a2" name="TERMINATE" type="Exception"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><display x="-120" y="-60" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="2049c9c6-f4c9-44f4-92a4-d2d54f1fe9e0" name="Note4" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>System not working or can not log in</narrative><display x="-105" y="-195" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>f8ddffe7-aae7-4cd5-a6bf-6b32e33a9695</onsuccess></stage><stage stageid="77867273-22da-4420-a62a-9e6ae568ba4b" name="Note4" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Check for concurrent exceptions, a system change may have occured</narrative><display x="150" y="45" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>259daecc-a661-4e65-a69d-9dbc3f7b60c9</onsuccess></stage><stage stageid="d1ec51a9-462c-49d3-b711-079f067241ca" name="Note4" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>Tag exception category for Blue Prism Performance reports</narrative><display x="150" y="-150" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>ed5f5d45-998a-4879-b7d9-9767571373c1</onsuccess></stage><stage stageid="88b603e2-11f3-4ccb-b8e1-2be7fbf85b72" name="Note4" type="Note"><subsheetid>b99a94a6-68dc-4668-81a0-e5be13b8c635</subsheetid><narrative>The case will only retry if the WQ has been configured to enable retries.</narrative><display x="-90" y="30" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /></stage><stage stageid="2071f61e-9f93-4858-bf24-e17a3d1331bf" name="Queue data" type="Block"><display x="-360" y="240" w="330" h="270" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="128f6554-e659-4ebf-b90b-da3797b87c08" name="Request Queue Data" type="Collection"><narrative>To hold Decipher Push document information. Add or modify fields as required</narrative><display x="-270" y="300" w="150" h="60" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="61314f1d-7357-4314-9ae4-94e0e6eb1951" name="Request Item ID" type="Data"><display x="-270" y="375" w="150" h="60" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="49ff6aa3-1197-4eee-880a-22401950855f" name="Request Item Status" type="Data"><display x="-120" y="300" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9fb8e27-e6ae-443e-aac0-6f9e0dc8c4bc" name="Request Item Attempts" type="Data"><display x="-270" y="465" w="150" h="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b13e6287-7d4f-454d-9f93-9a47ae4b970a" name="Check Valid File Extension" type="Decision"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><narrative>File extension check</narrative><display x="90" y="0" /><decision expression="EndsWith([Temp Coll.File location], &quot;jpg&quot;) OR EndsWith([Temp Coll.File location], &quot;pdf&quot;) OR EndsWith([Temp Coll.File location], &quot;jpeg&quot;) OR EndsWith([Temp Coll.File location], &quot;bmp&quot;) OR EndsWith([Temp Coll.File location], &quot;png&quot;)" /><ontrue>1144fc73-bf64-40ce-891e-7839fb0a07d9</ontrue><onfalse>8849b161-60a3-4739-aa2c-4a697d137002</onfalse></stage><stage stageid="e997feb6-004e-4822-9271-40b14c2e2ffb" name="Populate Response Queue" type="SubSheetInfo"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><narrative>Page to populate Response Queue for tracking documents</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1f99d493-07cb-45f9-a835-a52baf7b0cf1" name="Start" type="Start"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-60" y="45" /><onsuccess>7000f4d4-5b91-412c-ab47-2c447842465b</onsuccess></stage><stage stageid="b5a8ce9f-eac6-40b6-a31a-e0de77093dba" name="End" type="End"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-60" y="315" /></stage><stage stageid="686e82e0-7477-4e2d-914b-71d6a73c4c05" name="Add To Response Queue" type="Action"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="-60" y="195" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Response Queue Name]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Response Queue Data]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Response Item IDs" /></outputs><onsuccess>b5a8ce9f-eac6-40b6-a31a-e0de77093dba</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="a924d1ee-c588-4ec0-9774-ea59b9578a84" name="Response Item IDs" type="Collection"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-390" y="225" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" /></collectioninfo></stage><stage stageid="5d64e836-ae1e-41fb-8077-ce9ac3f32497" name="Populate Response Queue" type="SubSheet"><loginhibit onsuccess="true" /><display x="165" y="330" w="90" h="60" /><onsuccess>761efad7-d224-425b-8f48-6145de605eeb</onsuccess><processid>82099a76-bab7-4ef9-be15-064a248c888e</processid></stage><stage stageid="9a5dcb1c-9ff2-4a96-bdc8-ba0f72c4c263" name="Process Settings" type="Block"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-405" y="15" w="180" h="120" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="60c63e43-be61-474b-b7a9-ca5ac7937c62" name="Response Queue Name" type="Data"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><narrative>Decipher Request Queue - Each item should contain the file location(s) which needs to go as a single batch and/or any other required information</narrative><display x="-315" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Decipher Response Queue</initialvalue><alwaysinit /></stage><stage stageid="c88fb2c5-04d9-49fc-bfbb-bae1ca2175ec" name="Queue data" type="Block"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-480" y="165" w="315" h="120" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6702cb44-43ac-4707-a958-b2c7b0eb794e" name="Response Queue Data" type="Collection"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><narrative>To hold Decipher Response document information (response from Decipher submission). Add or modify fields as required</narrative><display x="-255" y="225" w="150" h="60" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="95e118a9-226f-4b2b-9cf0-8635bc7e9b13" name="Note1" type="Note"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><narrative>Batch name is used as Item Key - Response Queue, can be tracked in Decipher to check status of response.
tags is present can be transferred to the Response Queue item for federated teams response processing.</narrative><display x="150" y="120" w="270" h="120" /><font family="Segoe UI" size="12" style="Bold" color="3366FF" /></stage><stage stageid="1e6fe6b2-d868-48d1-9b74-145cb00ccdc0" name="Note2" type="Note"><narrative>Batch name (assumed to be unique) is used as item key for Request and Response Queue, as input to queue will need to track it using a unique name. But Decipher itself uses Batch id for responses.

In case of a federated approach, federated teams can add data item in the queue collection or tags for controllers - one each for one business, the data item and/or tags can be transferred to the response queue, so that output can be processed by different teams as required.

Collections are defined in the Test Queue populate process to show users which fields are required, but collection can be kept undefined provided the final required fields are available to downstream processes</narrative><display x="-525" y="15" w="570" h="240" /><font family="Segoe UI" size="14" style="Bold" color="3366FF" /></stage><stage stageid="c0fbc65e-4ac4-42fb-9690-dcb18d2949be" name="Copy Batch Details" type="MultipleCalculation"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-150" /><onsuccess>a8815329-3c00-4dca-89a5-7dfc8f952976</onsuccess><steps><calculation expression="[Request Queue Data.Batch Name]" stage="Batch Name" /><calculation expression="[Request Queue Data.Batch Type]" stage="Batch Type Name" /><calculation expression="[Request Queue Data.Batch Description]" stage="Batch Description" /><calculation expression="[Request Queue Data.Input Document Details]" stage="Temp Coll" /></steps></stage><stage stageid="7d415790-4237-442a-9b76-e215cc58b838" name="Note6" type="Note"><loginhibit /><narrative>This process can be implemented as a common solution which keeps running intermittently, or as a process which can be called by another process (not in a loop). Any throttling required in the future for Decipher document pushes can be implemented in this process centrally rather than in multiple places.</narrative><display x="75" y="-300" w="660" h="90" /><font family="Segoe UI" size="15" style="Regular" color="FF0000" /></stage><stage stageid="5ed3ec85-6f76-444a-a1a5-8361d1124e90" name="Note7" type="Note"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><narrative>Queue Suffix can be used for distributed queueing, but 1.This Rabbit MQ queue needs to be present and 2.Response process also needs to pull from the same queue, so both need to be in sync</narrative><display x="-435" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="efa094c0-eef0-43fc-85de-fdce358c8d36" name="Page Data" type="Block"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><loginhibit onsuccess="true" /><display x="-495" y="90" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="241859b1-caaa-449c-ad6b-f366a700b707" name="Temp Coll" type="Collection"><subsheetid>ac78b511-6e3d-4dc0-aa85-e6f9dc8aef6c</subsheetid><display x="-435" y="225" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f7eccb34-3d98-4558-88e9-4bb079646cc3" name="Temp Coll" type="Collection"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><display x="-315" y="105" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7000f4d4-5b91-412c-ab47-2c447842465b" name="Copy Collection" type="Calculation"><subsheetid>82099a76-bab7-4ef9-be15-064a248c888e</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="120" /><onsuccess>686e82e0-7477-4e2d-914b-71d6a73c4c05</onsuccess><calculation expression="[Request Queue Data]" stage="Response Queue Data" /></stage><stage stageid="f24ca3df-6307-459e-b69b-b5f033b22ee9" name="Notify Termination" type="SubSheet"><display x="570" y="15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e86eed15-093c-4d01-a4ed-eefc2d9934ee</onsuccess><processid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</processid></stage><stage stageid="e86eed15-093c-4d01-a4ed-eefc2d9934ee" name="Re-Throw" type="Exception"><display x="570" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="c66fc238-9a41-4f17-9181-6c167db146b5" name="Recover" type="Recover"><display x="570" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f24ca3df-6307-459e-b69b-b5f033b22ee9</onsuccess></stage><stage stageid="51d3859a-6d1d-4dc9-95ff-c5586934cd8c" name="Notify Termination" type="SubSheetInfo"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="28cd8026-4bb3-48be-87b1-9f779ea6c365" name="Start" type="Start"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5ab0e89-b498-426c-a24f-00c7c2191304</onsuccess></stage><stage stageid="dcabbe98-62ce-4eff-b1cf-26245b976140" name="End" type="End"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="90" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a6d60a1-26a5-4b52-a107-6ae28fde0a8c" name="Note2" type="Note"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><narrative>** Edit as required</narrative><display x="240" y="90" w="150" h="30" /><font family="Tahoma" size="12" style="Bold" color="FF00FF" /><onsuccess>8440f981-a6d7-4d60-8305-f1b3dbae4e1e</onsuccess></stage><stage stageid="8a5a2606-9168-463a-a34b-6afb6d42b84d" name="Send Email" type="SubSheet"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="90" y="150" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" friendlyname="To" expr="[Notify Termination To]" /><input type="text" name="CC" friendlyname="CC" expr="[Notify Termination CC]" /><input type="text" name="Subject" friendlyname="Subject" expr="[Notify Termination Subject]" /><input type="text" name="Message" friendlyname="Message" expr="[Notify Termination Message]" /><input type="text" name="Attachments" friendlyname="Attachments" expr="" /></inputs><onsuccess>dcabbe98-62ce-4eff-b1cf-26245b976140</onsuccess><processid>96492f15-adf2-4cba-a88d-b6187cdc1072</processid></stage><stage stageid="e1005394-9968-4657-94bf-df2a6853a8f3" name="Notify Termination To" type="Data"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="-120" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b67b6f7-8e9e-4019-80af-0e7c13641ba2" name="Notify Termination Subject" type="Data"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="-120" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95184989-180f-4050-8a8c-897901c60951" name="Notify Termination Message" type="Data"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="-120" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ffb5ada-57ae-446d-966c-d34db0e9fc57" name="Notify Termination CC" type="Data"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="-120" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d20c3ba-02bd-4c00-abc5-3566e0edb6f6" name="Message" type="Calculation"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8a5a2606-9168-463a-a34b-6afb6d42b84d</onsuccess><calculation expression="&quot;The &quot;&amp;[Process Name]&amp;&quot; process running on &quot;&amp;GetResourceName()&amp;&quot; has terminated. The following exception occurred.&quot;&amp;Chr(10)&#xA;&amp;Chr(10)&amp;&quot;Exception Type: &quot;&amp;ExceptionType()&#xA;&amp;Chr(10)&amp;&quot;Exception Detail: &quot;&amp;ExceptionDetail()" stage="Notify Termination Message" /></stage><stage stageid="8440f981-a6d7-4d60-8305-f1b3dbae4e1e" name="Subject" type="Calculation"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><display x="90" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3d20c3ba-02bd-4c00-abc5-3566e0edb6f6</onsuccess><calculation expression="&quot;Blue Prism Termination - &quot;&amp;[Process Name]" stage="Notify Termination Subject" /></stage><stage stageid="82f83f89-bb6e-43fc-87ce-3bd886db5d1e" name="Note2" type="Note"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><loginhibit /><narrative>** Edit as required</narrative><display x="240" y="135" w="150" h="30" /><font family="Tahoma" size="12" style="Bold" color="FF00FF" /><onsuccess>3d20c3ba-02bd-4c00-abc5-3566e0edb6f6</onsuccess></stage><stage stageid="f5ab0e89-b498-426c-a24f-00c7c2191304" name="Notify?" type="Decision"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><display x="90" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Notify Termination]" /><ontrue>8440f981-a6d7-4d60-8305-f1b3dbae4e1e</ontrue><onfalse>207e28c3-69d6-47a3-b684-b2eb75114d8b</onfalse></stage><stage stageid="49c1a9c9-40aa-48b3-bfd2-c23b7cc16109" name="Notify Termination" type="Data"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><display x="-120" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue></stage><stage stageid="207e28c3-69d6-47a3-b684-b2eb75114d8b" name="End6" type="End"><subsheetid>1ba0e317-6d0f-4a30-90bc-bc4d75bfff0c</subsheetid><display x="195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4b92e119-2993-432c-b1f5-078dd4a1dd26" name="Send Email" type="SubSheetInfo"><subsheetid>96492f15-adf2-4cba-a88d-b6187cdc1072</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d74cfaea-275c-45af-bbff-df6b10a727a8" name="Start" type="Start"><subsheetid>96492f15-adf2-4cba-a88d-b6187cdc1072</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" stage="Email Item Data.To" /><input type="text" name="CC" stage="Email Item Data.CC" /><input type="text" name="Subject" stage="Email Item Data.Subject" /><input type="text" name="Message" stage="Email Item Data.Message" /><input type="text" name="Attachments" stage="Email Item Data.Attachments" /></inputs><onsuccess>7e32a9df-9c20-422f-bc8c-6d7831bc9343</onsuccess></stage><stage stageid="7e32a9df-9c20-422f-bc8c-6d7831bc9343" name="End" type="End"><subsheetid>96492f15-adf2-4cba-a88d-b6187cdc1072</subsheetid><loginhibit /><display x="45" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8ca123d8-436c-4bdd-8638-f1021a5e661c" name="Email Item Data" type="Collection"><subsheetid>96492f15-adf2-4cba-a88d-b6187cdc1072</subsheetid><loginhibit /><narrative>Used to hold email message details</narrative><display x="-105" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="To" type="text" /><field name="CC" type="text" /><field name="Subject" type="text" /><field name="Message" type="text" /><field name="Attachments" type="text" /><field name="Item Key" type="text" /></collectioninfo><initialvalue><row><field name="To" type="text" value="" /><field name="CC" type="text" value="" /><field name="Subject" type="text" value="" /><field name="Message" type="text" value="" /><field name="Attachments" type="text" value="" /><field name="Item Key" type="text" value="" /></row></initialvalue></stage></process></process>
        <process id="eed4c952-74eb-4f1c-aa64-eb7ab0b06082" name="Decipher Process Template 2 - Response" xmlns="http://www.blueprism.co.uk/product/process"><process name="Decipher Process Template 2 - Response" version="1.0" bpversion="6.7.0.20116" narrative="Sample Main page" byrefcollection="true"><view><camerax>0</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ebbf8442-c75c-4771-b7d0-46916daa25f0" type="Normal" published="False"><name>Example Main Page - Poll Decipher for Batch completion</name><view><camerax>3</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="18fec9b5-24ef-4a71-853c-e2b88dbe6d7e" type="Normal" published="False"><name>Start Up</name><view><camerax>0</camerax><cameray>165</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="181229a1-e593-43bc-923c-fb7bc7c74072" type="Normal" published="False"><name>Close Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5ed061eb-86ba-47e5-a30b-9f9f088ef54e" type="Normal" published="False"><name>Get Available Batch data from Decipher</name><view><camerax>154</camerax><cameray>-83</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea1a9b66-8378-4b7f-b17a-72f222c8a257" type="Normal" published="False"><name>Get Decipher Metadata</name><view><camerax>30</camerax><cameray>102</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="01e23a3f-3c92-4a6f-a10d-3438c8a40e72" type="Normal" published="False"><name>Response Queue Batch Data Fetch</name><view><camerax>283</camerax><cameray>369</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c7bb9afd-20a0-46b9-a44c-012005ff8568" type="Normal" published="False"><name>Get Decipher Document Data</name><view><camerax>0</camerax><cameray>138</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="559020ce-dc3e-44cd-8e2d-4c19deba90aa" type="Normal" published="False"><name>Update Item in Response Queue</name><view><camerax>37</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69bae3c4-54a3-48f6-acf7-864f8893645a" type="Normal" published="False"><name>Work Step 1</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="94f41c5c-add7-4852-8d93-7c43a8238f77" type="Normal" published="False"><name>Mark Item as Completed</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d37c7187-cbf7-47da-888c-269f5a3bacd6" type="Normal" published="False"><name>Mark Item as Exception</name><view><camerax>0</camerax><cameray>150</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9ba85-6b97-4167-a5e8-853a39aaee07" type="Normal" published="False"><name>Mark Item as Deferred</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c5ddf6-a2c1-404e-97d9-529da941599f" type="Normal" published="False"><name>Reset Global Data</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60060155-cd10-4b29-8652-4a55ba9f9001" type="Normal" published="False"><name>Notify Termination</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f19a7376-9b66-4352-bd6b-40b3de0d36b7" type="Normal" published="False"><name>Send Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb1a76a7-b3e3-4414-93e2-1674115c985e" type="Normal" published="False"><name>Not Supported - Example Main page - Decipher Response Queue Monitoring</name><view><camerax>-282</camerax><cameray>-412</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="83873613-0b9f-47ed-9722-4e30e6718913" name="Stage1" type="ProcessInfo"><display x="-360" y="-120" w="150" h="90" /></stage><stage stageid="6d373fdf-fb3b-4668-8b80-929407a4c3e1" name="Start" type="Start"><display x="-165" y="-210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3ad6afbe-6a21-4ac3-b049-ec8bfec313d9</onsuccess></stage><stage stageid="1540da17-5e28-4d86-b4d3-ee885ef550e3" name="Note2" type="Note"><narrative>Delete this note.

Copy contents of ONE 'EXAMPLE Main Page' and paste here.

Delete ALL the 'EXAMPLE Main Page' pages.

Make adjustments to this page as required.

Add or remove 'Work Step' pages as required.

Add or remove 'System' pages as required.

Add or remove 'Clean Up' pages as required.</narrative><display x="225" y="0" w="540" h="420" /><font family="Tahoma" size="16" style="Bold" color="000000" /></stage><stage stageid="b6dd5bc7-0294-48e6-84da-23bec93db05d" name="Not Supported - Example Main page - Decipher Response Queue Monitoring" type="SubSheetInfo"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-465" y="-345" w="150" h="90" /></stage><stage stageid="ba897544-e434-446d-9735-25abefb4cccc" name="Reset Global Data" type="SubSheetInfo"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><narrative>When this page runs, all its data items will be reset to their initial values.</narrative><display x="-105" y="-135" w="150" h="90" /></stage><stage stageid="3bccd2bf-b081-405e-b6d3-4c7e46cdcbde" name="Start" type="Start"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ef1ebf96-8fe0-4447-b155-a189d280e921</onsuccess></stage><stage stageid="ef1ebf96-8fe0-4447-b155-a189d280e921" name="End" type="End"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><display x="90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="392bd908-9188-467a-b4cf-190e026731f4" name="Exception Type" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to store the result of the ExceptionType() function for use when not in Recovery Mode.</narrative><display x="-120" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="56ef2abe-2d93-4084-8b15-43fb7d7ba795" name="Exception Detail" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to store the result of the ExceptionDetail() function for use when not in Recovery Mode.</narrative><display x="-120" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="0567558f-3c8f-449c-91aa-aa73c43ba63b" name="Completed Item Status" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to update the Status of a completed item, and also as an indicator that the item can be routed to the 'mark as complete' step.</narrative><display x="-120" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="5023601c-f0f1-4e16-b6b5-e80e2ad016af" name="Completed Item Tag" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to apply a tag to a completed item, and also as an indicator that the item can be routed to the 'mark as complete' step.</narrative><display x="-120" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="e86cf121-31ac-4050-be0c-0798e601fe59" name="Deferred Item Status" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to update the Status of a completed item, and also as an indicator that the item can be routed to the 'defer' step.</narrative><display x="-120" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="5e9f6818-fa28-4f0f-808c-571e8a23a6f4" name="Deferred Item Tag" type="Data"><subsheetid>13c5ddf6-a2c1-404e-97d9-529da941599f</subsheetid><loginhibit /><narrative>Used to apply a tag to a completed item, and also as an indicator that the item can be routed to the 'defer' step.</narrative><display x="-120" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4f7f61b5-51b0-441e-9124-233a747ed3a9" name="Mark Item as Deferred" type="SubSheetInfo"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><narrative>Calculates a deferral date and returns the item to the queue. May also update the item status and apply a tag.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="415dc36d-f885-4d24-8165-d177635dd04e" name="Start" type="Start"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a8f35368-9370-42b0-b343-681b0046ee6e</onsuccess></stage><stage stageid="305559f1-e8cd-4f26-9145-afa0ab6aa13e" name="End" type="End"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="315" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="470af0ce-d901-4884-9cb9-4f2a432d7647" name="Defer Item" type="Action"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="0" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[Item ID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now()+[Defer Period]" /></inputs><onsuccess>414a97e0-6afd-4599-ab64-17ee1a8d13ad</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="414a97e0-6afd-4599-ab64-17ee1a8d13ad" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="240" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF9900" /><onsuccess>305559f1-e8cd-4f26-9145-afa0ab6aa13e</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="1b1a3aa2-1de9-437d-bc74-a4f49b5ac009" name="Defer Period" type="Data"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><narrative>Used to apply a deferral to a queue item</narrative><display x="-210" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:05:00</initialvalue><alwaysinit /></stage><stage stageid="0e616d50-2fe4-4a9a-b698-c9324d3fb7f9" name="Set Status" type="Action"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="135" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="Left([Deferred Item Status], 30)" /></inputs><onsuccess>45de0197-cfa7-43e3-affb-12d6aefe3363</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="a8f35368-9370-42b0-b343-681b0046ee6e" name="Set Item Status?" type="Decision"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="-60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Deferred Item Status]&lt;&gt;&quot;&quot;" /><ontrue>0e616d50-2fe4-4a9a-b698-c9324d3fb7f9</ontrue><onfalse>f2e4d9ba-9341-4ac1-9691-afa07aac04e9</onfalse></stage><stage stageid="45de0197-cfa7-43e3-affb-12d6aefe3363" name="anchor24" type="Anchor"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f2e4d9ba-9341-4ac1-9691-afa07aac04e9</onsuccess></stage><stage stageid="f2e4d9ba-9341-4ac1-9691-afa07aac04e9" name="anchor29" type="Anchor"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6fd71f89-c753-47bb-ac50-b9082531327d</onsuccess></stage><stage stageid="648e8fad-964a-41f7-aebc-3d5833dcf47f" name="Tag Item" type="Action"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><narrative>Adds a tag to a work queue item</narrative><display x="135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="[Deferred Item Tag]" /></inputs><onsuccess>e5be897f-76a9-4f90-8bb8-39fecfa75fbc</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="6fd71f89-c753-47bb-ac50-b9082531327d" name="Tag Item?" type="Decision"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Deferred Item Tag]&lt;&gt;&quot;&quot;" /><ontrue>648e8fad-964a-41f7-aebc-3d5833dcf47f</ontrue><onfalse>b537cca5-85f7-44ff-94cc-7ac041ffbcbb</onfalse></stage><stage stageid="e5be897f-76a9-4f90-8bb8-39fecfa75fbc" name="anchor24" type="Anchor"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="135" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b537cca5-85f7-44ff-94cc-7ac041ffbcbb</onsuccess></stage><stage stageid="b537cca5-85f7-44ff-94cc-7ac041ffbcbb" name="anchor29" type="Anchor"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><display x="0" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>470af0ce-d901-4884-9cb9-4f2a432d7647</onsuccess></stage><stage stageid="ffafc048-6adc-46fc-8297-5aa1668a3666" name="Note2" type="Note"><subsheetid>81b9ba85-6b97-4167-a5e8-853a39aaee07</subsheetid><loginhibit /><narrative>** Set defer period as required</narrative><display x="-210" y="120" w="150" h="30" /><font family="Tahoma" size="12" style="Bold" color="FF00FF" /><onsuccess>470af0ce-d901-4884-9cb9-4f2a432d7647</onsuccess></stage><stage stageid="b00b8f7b-e360-4a31-b715-89ff724e6c23" name="Mark Item as Completed" type="SubSheetInfo"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><display x="-120" y="-75" w="150" h="90" /></stage><stage stageid="bb0fe7bd-53ab-40ac-b4d8-fc4a1efe9857" name="Start" type="Start"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c1b17983-a659-4565-b5e4-983b5c7d612d</onsuccess></stage><stage stageid="c73a4835-6109-469d-913b-b18bede42dfd" name="Mark Completed" type="Action"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /></inputs><onsuccess>241d5f82-33fb-414b-816f-a3d57af40bc5</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="c1b17983-a659-4565-b5e4-983b5c7d612d" name="Set Status" type="Action"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="105" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="&quot;Completed&quot;" /></inputs><onsuccess>c73a4835-6109-469d-913b-b18bede42dfd</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="241d5f82-33fb-414b-816f-a3d57af40bc5" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><display x="105" y="75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>313b6572-86e5-4183-b7e2-db5ae227391a</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="313b6572-86e5-4183-b7e2-db5ae227391a" name="End3" type="End"><subsheetid>94f41c5c-add7-4852-8d93-7c43a8238f77</subsheetid><display x="105" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="201d6fac-9a13-45ca-85ff-632dc1aeb3c9" name="Mark Item as Exception" type="SubSheetInfo"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-300" y="-120" w="150" h="90" /></stage><stage stageid="e1dd8831-caad-489f-bad3-dfc0732a7130" name="Start" type="Start"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>275c53ba-9908-4c0a-a317-1202cbd8fe27</onsuccess></stage><stage stageid="a469048d-01d0-408e-9408-2bf4c7b379d8" name="Retry Exception?" type="Decision"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>For system or internal exception, not for push documents page exception whcih has a seperate retry</narrative><display x="75" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system exception&quot; OR Lower([Exception Type])=&quot;internal&quot;" /><ontrue>3f7fc70d-2531-48bf-9a0e-9a7b23af9c8b</ontrue><onfalse>215ff34e-c461-4302-a602-ec99abacca11</onfalse></stage><stage stageid="be1503f7-b659-477e-9491-0e79b8e3cc31" name="Previous Exception?" type="Decision"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="150" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Previous Exception Detail]=[Exception Detail]" /><ontrue>1bd05f09-688a-4c0b-b1d9-6835df6d350a</ontrue><onfalse>4711049b-a3a2-49f3-90d3-a8553f9cd954</onfalse></stage><stage stageid="3d401bf5-dadd-4aa4-af62-2be9e9d9a440" name="Previous Exception Detail" type="Data"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-165" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1bd05f09-688a-4c0b-b1d9-6835df6d350a" name="Count" type="Calculation"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b12a7e3b-6ec8-4305-be15-113761adb247</onsuccess><calculation expression="1+ [Consecutive Exception Count]" stage="Consecutive Exception Count" /></stage><stage stageid="470c5e77-e40b-4b49-a1df-e05d58b920d6" name="Consecutive Exception Count" type="Data"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-165" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="b12a7e3b-6ec8-4305-be15-113761adb247" name="Limit?" type="Decision"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="300" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Consecutive Exception Count]&gt;=[Consecutive Exception Limit]" /><ontrue>60afaf53-de62-42bd-bbff-e95f88c8c79f</ontrue><onfalse>900f7fa3-2e77-4adb-ba67-89a3ad32c2c6</onfalse></stage><stage stageid="8a71b232-e906-45fd-9a18-d7d16d317915" name="TERMINATE" type="Exception"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="495" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="72e5d6bb-a135-48cd-ad58-451d735809a2" name="Consecutive Exception Limit" type="Data"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-165" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="3c267b8b-6808-4793-bcf8-1897c0fd7b59" name="End2" type="End"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="345" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd7c48d4-dce8-4c26-ae77-e48cf5e6e4bc" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="345" y="150" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3c267b8b-6808-4793-bcf8-1897c0fd7b59</onsuccess><steps><calculation expression="[Exception Detail]" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="60afaf53-de62-42bd-bbff-e95f88c8c79f" name="Stop the process because consecutive exceptions are occuring" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>The consecutive exception limit has been reached, so throw a new exception to terminate the process.</narrative><display x="75" y="405" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>8a71b232-e906-45fd-9a18-d7d16d317915</onsuccess></stage><stage stageid="25b148a6-d1e8-45f1-ba7b-ad34cb81eb40" name="New Item ID" type="Data"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-165" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="215ff34e-c461-4302-a602-ec99abacca11" name="Tag Item" type="Action"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="165" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;Business Exception&quot;" /></inputs><onsuccess>dfaac7a0-be4e-4845-9334-233fbf744ef7</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="cb07a91e-2e18-4729-b647-2979404cdadb" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="510" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6169f58f-858e-4bbd-9ba3-47014d1afdda</onsuccess><steps><calculation expression="&quot;&quot;" stage="Previous Exception Detail" /><calculation expression="0" stage="Consecutive Exception Count" /></steps></stage><stage stageid="4711049b-a3a2-49f3-90d3-a8553f9cd954" name="Note5" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><loginhibit /><narrative>This exception is different from the previous one.</narrative><display x="210" y="150" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>bd7c48d4-dce8-4c26-ae77-e48cf5e6e4bc</onsuccess></stage><stage stageid="900f7fa3-2e77-4adb-ba67-89a3ad32c2c6" name="Note5" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><loginhibit /><narrative>This exception is the same as the previous one but the consecutive exception limit has not yet been reached.</narrative><display x="210" y="300" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>3c267b8b-6808-4793-bcf8-1897c0fd7b59</onsuccess></stage><stage stageid="dfaac7a0-be4e-4845-9334-233fbf744ef7" name="Note5" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><loginhibit /><narrative>Don't retry this type of exception, just mark the queue item and carry on.</narrative><display x="285" y="-45" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>de0e76be-8404-4411-bef4-f0f820924f13</onsuccess></stage><stage stageid="5c4cf836-cd65-43da-b0ed-4bb731865827" name="Mark Exception" type="Action"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="75" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="True" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>be1503f7-b659-477e-9491-0e79b8e3cc31</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="de0e76be-8404-4411-bef4-f0f820924f13" name="Mark Exception" type="Action"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="405" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception Detail]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="False" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="New Item ID" /></outputs><onsuccess>cb07a91e-2e18-4729-b647-2979404cdadb</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="6169f58f-858e-4bbd-9ba3-47014d1afdda" name="End1" type="End"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="615" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f7fc70d-2531-48bf-9a0e-9a7b23af9c8b" name="Tag Item" type="Action"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="75" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;System Exception&quot;" /></inputs><onsuccess>5c4cf836-cd65-43da-b0ed-4bb731865827</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="275c53ba-9908-4c0a-a317-1202cbd8fe27" name="System Unavailable?" type="Decision"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="75" y="-120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([Exception Type])=&quot;system unavailable exception&quot; OR Lower([Exception Type])=&quot;login system exception&quot;" /><ontrue>267f5e6c-bac7-4d1e-afe1-f3c848ab4846</ontrue><onfalse>a469048d-01d0-408e-9408-2bf4c7b379d8</onfalse></stage><stage stageid="267f5e6c-bac7-4d1e-afe1-f3c848ab4846" name="Release Item" type="Action"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="-60" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[Item ID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now()" /></inputs><onsuccess>5505d1a6-0f47-4f16-80b1-0c93f7acac6c</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="5505d1a6-0f47-4f16-80b1-0c93f7acac6c" name="TERMINATE" type="Exception"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><display x="-60" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="" detail="[Consecutive Exception Limit] &amp; &quot; consecutive incidents of &quot; &amp; [Exception Type] &amp; &quot;: &quot; &amp; [Exception Detail]" /></stage><stage stageid="2c8bbdb2-d7e2-4347-a84e-513eb614a259" name="Note4" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>System not working or can not log in</narrative><display x="-45" y="-180" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>275c53ba-9908-4c0a-a317-1202cbd8fe27</onsuccess></stage><stage stageid="edd152e3-eb85-4c13-a270-c5671ad11ebf" name="Note4" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Check for concurrent exceptions, a system change may have occured</narrative><display x="210" y="60" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>be1503f7-b659-477e-9491-0e79b8e3cc31</onsuccess></stage><stage stageid="5db2398a-8355-419a-9910-b1c8e1168ed9" name="Note4" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>Tag exception category for Blue Prism Performance reports</narrative><display x="210" y="-135" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>215ff34e-c461-4302-a602-ec99abacca11</onsuccess></stage><stage stageid="0de9ef69-ebb7-4bf2-9225-74b95abde1ca" name="Note4" type="Note"><subsheetid>d37c7187-cbf7-47da-888c-269f5a3bacd6</subsheetid><narrative>The case will only retry if the WQ has been configured to enable retries.</narrative><display x="-30" y="45" w="120" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /></stage><stage stageid="7e9192d7-602b-4453-b591-178f5a390311" name="Start" type="Start"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-15" y="-465" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>017d91ec-4ce6-4b46-b626-44b3fe6cf982</onsuccess></stage><stage stageid="62d08bcf-956e-4458-8fc2-052077c3d8ff" name="End" type="End"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="-480" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bad1cc3-1ff0-43e8-bb47-cf7e10bcf0d2" name="Recover" type="Recover"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>52c786d5-276c-4328-81f9-10ca27580dcc</onsuccess></stage><stage stageid="15f042a7-40f1-49c1-8bda-1189983efdd4" name="Resume" type="Resume"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1ac29b7f-b894-4be4-bd33-c342c8c96673</onsuccess></stage><stage stageid="e99ba0af-21e3-4020-a0d7-b7fa3d32d0a9" name="Got Item?" type="Decision"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="-255" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID]&lt;&gt;&quot;&quot;" /><ontrue>6f8be997-1ce9-4629-8cf3-723264371fc4</ontrue><onfalse>e4c70410-b703-445e-ae3e-2b2c6c1ec7ee</onfalse></stage><stage stageid="85b90425-022e-4d4a-a8d4-df01851642bb" name="Work Step 1" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1b226a70-a7fa-4252-95eb-c2a4ca06602e</onsuccess><processid>00000000-0000-0000-0000-000000000000</processid></stage><stage stageid="017d91ec-4ce6-4b46-b626-44b3fe6cf982" name="Start Up" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-15" y="-375" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>be8eea51-7b50-47eb-9f53-b4ea842a11ad</onsuccess><processid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</processid></stage><stage stageid="e8f18c44-a3f2-44d5-8960-519a3e274d2d" name="Close Down" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="-405" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62d08bcf-956e-4458-8fc2-052077c3d8ff</onsuccess><processid>181229a1-e593-43bc-923c-fb7bc7c74072</processid></stage><stage stageid="681c8057-ad45-42ad-a8da-ec0e4d7e8457" name="Work" type="Block"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="15" y="-210" w="135" h="480" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3a56b5de-fbad-410b-9168-f70f7d7ffeaf" name="anchor8" type="Anchor"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1329ac1c-749c-48f3-96c2-eaca93e394b5</onsuccess></stage><stage stageid="1329ac1c-749c-48f3-96c2-eaca93e394b5" name="Reset Global Data" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="-90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc9ce7c7-81ab-4c95-a005-684b7f2d426c</onsuccess><processid>13c5ddf6-a2c1-404e-97d9-529da941599f</processid></stage><stage stageid="1ac29b7f-b894-4be4-bd33-c342c8c96673" name="Mark Item As Exception" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="240" y="300" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8725ac53-8554-4cd4-8a2e-e93a0f115616</onsuccess><processid>d37c7187-cbf7-47da-888c-269f5a3bacd6</processid></stage><stage stageid="1b226a70-a7fa-4252-95eb-c2a4ca06602e" name="Mark Item As Completed" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="225" y="75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3a56b5de-fbad-410b-9168-f70f7d7ffeaf</onsuccess><processid>94f41c5c-add7-4852-8d93-7c43a8238f77</processid></stage><stage stageid="e822267e-215a-44bd-af25-0f5f9325aa7c" name="Stop?" type="Decision"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="-255" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><decision expression="IsStopRequested() OR [Stop After Items]=0 OR LocalTime()&gt;[Stop After Time]" /><ontrue>e8f18c44-a3f2-44d5-8960-519a3e274d2d</ontrue><onfalse>0ca9e4f0-90ab-4b25-99b6-131d6dd6e2fa</onfalse></stage><stage stageid="c7419358-0cb5-48ec-ba22-b31fefee821f" name="Note4" type="Note"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Add more steps as required</narrative><display x="-45" y="75" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /></stage><stage stageid="dc9ce7c7-81ab-4c95-a005-684b7f2d426c" name="Count Items" type="Calculation"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="-180" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e822267e-215a-44bd-af25-0f5f9325aa7c</onsuccess><calculation expression="[Stop After Items]-1" stage="Stop After Items" /></stage><stage stageid="be8eea51-7b50-47eb-9f53-b4ea842a11ad" name="Get Next Item" type="Action"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="-15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Response Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Response Queue Data" /><output type="text" name="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>e99ba0af-21e3-4020-a0d7-b7fa3d32d0a9</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="0ca9e4f0-90ab-4b25-99b6-131d6dd6e2fa" name="Get Next Item" type="Action"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="195" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Response Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Response Queue Data" /><output type="text" name="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>e99ba0af-21e3-4020-a0d7-b7fa3d32d0a9</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="8725ac53-8554-4cd4-8a2e-e93a0f115616" name="anchor14" type="Anchor"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="345" y="300" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3a56b5de-fbad-410b-9168-f70f7d7ffeaf</onsuccess></stage><stage stageid="e4c70410-b703-445e-ae3e-2b2c6c1ec7ee" name="Note9" type="Note"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>No more items available</narrative><display x="90" y="-405" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e8f18c44-a3f2-44d5-8960-519a3e274d2d</onsuccess></stage><stage stageid="a6a4edc9-e1d6-4ba4-b004-575232141934" name="Stop After Time" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-195" y="-180" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>time</datatype><initialvalue>17:25:00</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="89dffae0-e7d5-4a71-a5b1-c8f7c4bcae02" name="Stop After Items" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-195" y="-150" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>number</datatype><initialvalue>9999999999</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="8fa1cbe7-f591-403d-9ac4-03514ab343d3" name="Stopping Control Settings" type="Block"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-285" y="-225" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="43df87b8-bc04-4d54-b83a-9256503ce635" name="Response Queue Name1" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Decipher Response Queue - contains details of batches which has been pushed into Decipher through Decipher Request Process template</narrative><display x="-195" y="-360" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Decipher Response Queue</initialvalue><private /><alwaysinit /></stage><stage stageid="42fd0f0f-2969-4931-a061-9e4916d0f97a" name="Process Settings" type="Block"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-285" y="-405" w="165" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="52c786d5-276c-4328-81f9-10ca27580dcc" name="Exception Data" type="MultipleCalculation"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15f042a7-40f1-49c1-8bda-1189983efdd4</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="4de56570-5ca8-4f32-96da-c75ab77b7689" name="Queue data" type="Block"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-435" y="-15" w="330" h="270" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="70d7b889-9fc3-4897-985d-ea052ee9d3b6" name="Item ID1" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-345" y="120" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27a7f7c6-f8cc-4cb1-b783-59aeefbd70b8" name="Item Status" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-195" y="45" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80274716-e59f-437e-8652-103d9585ae25" name="Item Attempts" type="Data"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="-345" y="210" w="150" h="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec19bf95-7af6-44be-b930-ee2d3fe40f8e" name="Note2" type="Note"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Batch name (assumed to be unique) is used as item key for Request and Response Queue, as input to queue will need to track it using a unique name. But internal working uses Batch id for correlating responses
</narrative><display x="-195" y="-270" w="270" h="90" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="38df2c50-74c8-4918-919f-29627c7ce3e4" name="Note6" type="Note"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><loginhibit /><narrative>This process can be implemented as a common solution which keeps running intermittently, or as a process which can be called by another process (not in a loop). Any throttling required in the future for Decipher document pushes can be implemented in this process centrally rather than in multiple places.</narrative><display x="60" y="-465" w="30" h="30" /><font family="Segoe UI" size="15" style="Regular" color="FF0000" /></stage><stage stageid="8ca6bd59-04e9-45f4-a9f4-a5e2f373ab5e" name="Response Queue Data1" type="Collection"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>To hold Decipher Response document information (response from Decipher submission). Add or modify fields as required</narrative><display x="-345" y="45" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Batch Name" type="text" /><field name="Input Document Details" type="collection"><field name="File location" type="text" /><field name="Document Id" type="text" /></field><field name="Batch Id" type="text" /><field name="Batch Type" type="text" /><field name="Batch Description" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Batch Name" type="text" value="" /><field name="Input Document Details" type="collection" /><field name="Batch Id" type="text" value="" /><field name="Batch Type" type="text" value="" /><field name="Batch Description" type="text" value="" /></row></initialvalue></stage><stage stageid="ac413526-9c7f-40b9-a50c-18e88acb298f" name="Start Up" type="SubSheetInfo"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-435" y="-165" w="150" h="90" /></stage><stage stageid="f38234d9-c7f9-4e64-88de-a78e9fb0ad30" name="Start" type="Start"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="30" y="-150" /><onsuccess>0aa8f030-29f1-4391-b09c-520a11962782</onsuccess></stage><stage stageid="8f383f9b-5c64-481c-aa65-6de38c87365f" name="End" type="End"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="30" y="345" /></stage><stage stageid="799b588b-32aa-413f-a186-04c0d19a5ec5" name="Decipher Server Endpoint" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">localhost</initialvalue><private /><alwaysinit /></stage><stage stageid="c7b4ed9a-a10b-4e62-99ac-44425d195f66" name="Decipher Server Port Number" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-390" y="-15" /><datatype>number</datatype><initialvalue>12543</initialvalue><private /><alwaysinit /></stage><stage stageid="a3c7a2c9-1d26-488f-9b61-a29e0903361e" name="Decipher Username" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d4a163f9-74a1-4ad4-b061-4a782a2eb5aa" name="Decipher Password" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-390" y="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="30b5498a-9c98-42c3-8624-5330dfe7626c" name="Connection Inputs" type="Block"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-495" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b391d040-10c0-4943-b4d5-ffeb2f42fead" name="RabbitMQ Endpoint" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="75" /><datatype>text</datatype><initialvalue xml:space="preserve">localhost</initialvalue><private /><alwaysinit /></stage><stage stageid="b5e90d79-092c-49c2-824a-1e63753a00fc" name="RabbitMQ Port Number" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-390" y="75" /><datatype>number</datatype><initialvalue>5672</initialvalue><private /><alwaysinit /></stage><stage stageid="a5357f3c-e0b3-4776-a797-dbfb5cc4200c" name="RabbitMQ Username" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="120" /><datatype>text</datatype><initialvalue xml:space="preserve">guest</initialvalue><private /><alwaysinit /></stage><stage stageid="d70b154d-980e-47d5-89c3-455bf1eeb4e7" name="RabbitMQ Password" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-390" y="120" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="0aa8f030-29f1-4391-b09c-520a11962782" name="Set Up Decipher Connection" type="Action"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="30" y="-60" /><inputs><input type="text" name="Decipher Server Endpoint" friendlyname="Decipher Server Endpoint" narrative="The Decipher Server Endpoint that this VBO will use for communication" expr="[Decipher Server Endpoint]" /><input type="number" name="Decipher Server Port Number" friendlyname="Decipher Server Port Number" narrative="The Decipher Server Port Number" expr="[Decipher Server Port Number]" /><input type="text" name="Message Queue Hostname" friendlyname="Message Queue Hostname" narrative="The Hostname for the Message Queue" expr="[RabbitMQ Endpoint]" /><input type="number" name="Message Queue Port Number" friendlyname="Message Queue Port Number" narrative="The Port number for the Message Queue" expr="[RabbitMQ Port Number]" /><input type="text" name="Message Queue Username" friendlyname="Message Queue Username" narrative="The Username to be used for authenticating to the Message Queue" expr="[RabbitMQ Username]" /><input type="password" name="Message Queue Password" friendlyname="Message Queue Password" narrative="The Password to be used for authenticating to the Message Queue" expr="[RabbitMQ Password]" /></inputs><onsuccess>c0919c9f-5a31-4330-89ac-ae133f6d15d6</onsuccess><resource object="Decipher" action="Set Up" /></stage><stage stageid="cc676772-a395-4c7d-bdf3-1f4c7da66275" name="Login to Decipher" type="Action"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="30" y="255" /><inputs><input type="text" name="Username" friendlyname="Username" narrative="The Decipher account username" expr="[Decipher Username]" /><input type="password" name="Password" friendlyname="Password" narrative="The Decipher account password" expr="[Decipher Password]" /></inputs><onsuccess>8f383f9b-5c64-481c-aa65-6de38c87365f</onsuccess><resource object="Decipher" action="Login" /></stage><stage stageid="52a43639-fa65-4a57-9179-3e4db7c92296" name="Note4" type="Note"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><narrative>Enterprise License holders should always use Blue Prism Credentials Here - For both Decipher and RabbitMQ</narrative><display x="-210" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>29b942a0-dbcf-4d0b-93ce-5dea947aee54</onsuccess></stage><stage stageid="29b942a0-dbcf-4d0b-93ce-5dea947aee54" name="Generate Credential Name" type="Calculation"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-210" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cd6d96e-648e-413c-86a7-3c40b988a483</onsuccess><calculation expression="Replace(GetResourceName(),&quot;_debug&quot;,&quot;&quot;) &amp; &quot; Decipher Name&quot;" stage="Decipher Credential Name" /></stage><stage stageid="6cd6d96e-648e-413c-86a7-3c40b988a483" name="Get Decipher Credential" type="Action"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="-210" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Credentials Name" narrative="The name of the credentials to get" expr="[Decipher Credential Name]" /></inputs><outputs><output type="text" name="Username" narrative="The user name" stage="Decipher Credential Username" /><output type="password" name="Password" narrative="The password" stage="Decipher Credential Password" /><output type="date" name="Expiry Date" friendlyname="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" friendlyname="Status" narrative="The status" stage="" /></outputs><onsuccess>cc676772-a395-4c7d-bdf3-1f4c7da66275</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage><stage stageid="dd42345a-cbd9-4e3a-8828-363533182044" name="Login Decipher Block" type="Block"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-45" y="210" w="270" h="105" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a999abed-f301-4e89-b2fd-7874c7a0b97f" name="Set up Decipher Block and SQL Server" type="Block"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-45" y="-120" w="270" h="210" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3110d0c0-a0e8-4046-bca1-8f5ac8e2a706" name="Resume" type="Resume"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="390" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0437341d-6034-46c5-acc0-7d4c34634f89</onsuccess></stage><stage stageid="0437341d-6034-46c5-acc0-7d4c34634f89" name="System Unavailable Exception" type="Exception"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="495" y="-75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Unavailable Exception" detail="&quot;Unable to launch &lt;PUT APPLICATION NAME HERE&gt;&quot;" /></stage><stage stageid="2cc5c04c-078c-4d0d-aea6-caf8f6658b17" name="Recover" type="Recover"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="180" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>db3e3d51-27e3-4886-81bc-4ab1ad9541cc</onsuccess></stage><stage stageid="db3e3d51-27e3-4886-81bc-4ab1ad9541cc" name="Exception Data" type="MultipleCalculation"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="300" y="-75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3110d0c0-a0e8-4046-bca1-8f5ac8e2a706</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="569ee5c1-78d3-48b8-829e-b1e65e55c0fb" name="Count" type="Calculation"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="300" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d36d66b8-0113-4495-a595-b4ae194ed379</onsuccess><calculation expression="[Retry Count]+1" stage="Retry Count" /></stage><stage stageid="af12ced4-8a1c-4263-8769-be4dbf1e6062" name="Retry?" type="Decision"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="300" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Retry Count]&lt;[Retry Limit] AND (Lower(ExceptionType())=&quot;system exception&quot; OR Lower(ExceptionType())=&quot;internal&quot;)" /><ontrue>569ee5c1-78d3-48b8-829e-b1e65e55c0fb</ontrue><onfalse>6ec430be-6de2-4874-99fa-68b09e0ba774</onfalse></stage><stage stageid="6ec430be-6de2-4874-99fa-68b09e0ba774" name="Throw" type="Exception"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="510" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="683a68d9-79c4-4b27-8c7d-a88aed66d5d4" name="Note4" type="Note"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><narrative>Login System Exceptions will not be retried</narrative><display x="300" y="390" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>af12ced4-8a1c-4263-8769-be4dbf1e6062</onsuccess></stage><stage stageid="1637d903-3126-4791-8b6d-a98103f1b599" name="Note4" type="Note"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><narrative>This action should throw a Login System Exception if it thinks the credentials entered were incorrect</narrative><display x="-165" y="390" w="150" h="90" /><font family="Tahoma" size="10" style="Bold" color="FF00FF" /><onsuccess>cc676772-a395-4c7d-bdf3-1f4c7da66275</onsuccess></stage><stage stageid="0727c09b-4781-41b8-864a-02a73b0d3aaf" name="Retry Limit" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="-420" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="1d52cd7e-68b4-4287-9013-8929c2150e55" name="Retry Count" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="-420" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6332354b-46d4-4788-ab66-d42d6dbdd117" name="Decipher Credential Username" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-600" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67a53e8e-c3b7-4ac8-afde-6701df309283" name="Decipher Credential Password" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-600" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="625d15a9-75fb-44c6-ac19-6ab8f18320e0" name="Decipher Credentials" type="Block"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-690" y="-30" w="180" h="150" /><font family="Tahoma" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="e742e0bf-58ce-4cab-a5a9-ec8dadda680e" name="Decipher Credential Name" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-600" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="168cc6d6-fc1a-4976-8e0e-867f5c789cb9" name="Anchor1" type="Anchor"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="30" y="165" w="10" h="10" /><onsuccess>cc676772-a395-4c7d-bdf3-1f4c7da66275</onsuccess></stage><stage stageid="85b42c9a-a096-4ad4-93ef-d4307fd575c6" name="Note3" type="Note"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><narrative>Navigate back ready for step 1d  -maybe additional steps required</narrative><display x="180" y="165" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>168cc6d6-fc1a-4976-8e0e-867f5c789cb9</onsuccess></stage><stage stageid="f1a0beb6-ebda-42ff-9757-9521b99c98fe" name="Recover" type="Recover"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="180" y="285" /><onsuccess>af12ced4-8a1c-4263-8769-be4dbf1e6062</onsuccess></stage><stage stageid="d36d66b8-0113-4495-a595-b4ae194ed379" name="Resume" type="Resume"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit /><display x="300" y="165" /><onsuccess>85b42c9a-a096-4ad4-93ef-d4307fd575c6</onsuccess></stage><stage stageid="58f9acdc-dede-4616-8e9d-eafad27f65e7" name="Close Down" type="SubSheetInfo"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4fd473a3-f97f-4132-8e54-76c20161ddac" name="Start" type="Start"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><display x="15" y="-105" /><onsuccess>af4e51d0-792c-4f37-9a91-adc12c7a0207</onsuccess></stage><stage stageid="5287a71f-5b5b-48df-ae73-20ea9c216baf" name="End" type="End"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><display x="15" y="180" /></stage><stage stageid="4eef16c6-5ba8-4f7b-bd49-64dfd3e6edf9" name="Get Decipher Metadata" type="SubSheetInfo"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><narrative>We need more fields from Decipher output for any use case like Batch Name, batches created IsException etc. These are currently not present in Decipher API's, hence getting them from DB. If Decipher API's are extended in the future, we can modify branch for Metadata Captured = false</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="91fe9c56-cc5b-49d6-b9de-b3a785636d21" name="Start" type="Start"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="0" y="-195" /><inputs><input type="text" name="Batch ID" stage="Batch Id" /><input type="flag" name="Is Meta Required" stage="Is Meta Required" /></inputs><onsuccess>a69a026d-afe8-476f-b336-b6cddd05181f</onsuccess></stage><stage stageid="74e8c53d-0737-4d26-919e-0c5550363f54" name="End" type="End"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-60" y="405" /></stage><stage stageid="f0ad120f-c979-4ceb-8a5c-b5ec1218c3f1" name="Block for Stats Capture" type="Block"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-150" w="315" h="510" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="44628e68-cdce-49fd-913e-359292d94f87" name="Get Batch Name and Doc ids" type="Action"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="-120" /><inputs><input type="text" name="SQL" friendlyname="SQL" narrative="The SQL query to use to perform this action" expr="Replace([Batch Details SQL], &quot;@Batch Id@&quot;, Upper([Batch Id])) " /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" friendlyname="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="collection" name="Results" friendlyname="Results" narrative="The collection of results from the query" stage="DecipherBatchDetails" /></outputs><onsuccess>20810d2f-3fa3-47a4-a24f-4ad064660062</onsuccess><resource object="Data - SQL Server" action="Get Collection" /></stage><stage stageid="a69a026d-afe8-476f-b336-b6cddd05181f" name="If Meta has to be Captured" type="Decision"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="0" y="-120" /><decision expression="[Is Meta Required]" /><ontrue>44628e68-cdce-49fd-913e-359292d94f87</ontrue><onfalse>50d94346-b944-45ff-94e8-3f081f3702f3</onfalse></stage><stage stageid="117898c1-aea5-4c5a-beed-89fc48974760" name="Is Meta Required" type="Data"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-240" y="90" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="50d94346-b944-45ff-94e8-3f081f3702f3" name="Anchor2" type="Anchor"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-120" w="10" h="10" /><onsuccess>74e8c53d-0737-4d26-919e-0c5550363f54</onsuccess></stage><stage stageid="c08820d6-0d29-4888-820a-d47248882a53" name="Block1" type="Block"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="-285" y="-45" w="165" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6f8be997-1ce9-4629-8cf3-723264371fc4" name="Get Batch Details" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="-165" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>58d67cc1-8aee-4bff-adb2-abba21bbb080</onsuccess><processid>00000000-0000-0000-0000-000000000000</processid></stage><stage stageid="58d67cc1-8aee-4bff-adb2-abba21bbb080" name="Get Decipher Metadata" type="SubSheet"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><display x="90" y="-75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Batch ID" friendlyname="Batch ID" expr="[Batch Id]" /><input type="collection" name="Files" friendlyname="Files" expr="[Response Queue Data.Document Collection Details]" /><input type="flag" name="Is Meta Required" friendlyname="Is Meta Required" expr="True" /></inputs><onsuccess>85b90425-022e-4d4a-a8d4-df01851642bb</onsuccess><processid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</processid></stage><stage stageid="3ad6afbe-6a21-4ac3-b049-ec8bfec313d9" name="End4" type="End"><loginhibit onsuccess="true" /><display x="-165" y="-45" /></stage><stage stageid="7a21c722-cbae-46a9-9fa2-8f7d5edeaa7b" name="Example Main Page - Poll Decipher for Batch completion" type="SubSheetInfo"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>To be used when Decipher needs to be polled for batches which have been completed. Batch name for data pulled is checked in the response queue as item key, if data found queue item is updated and completed, if data not found a new item is created in the queue with a tag - DecipherGeneratedBatch.</narrative><display x="-420" y="-165" w="210" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="410a80f6-6ab3-4d6e-a991-042a710dd8d9" name="Note7" type="Note"><subsheetid>eb1a76a7-b3e3-4414-93e2-1674115c985e</subsheetid><narrative>Will be added when Decipher supports data extraction for indvidual batch ids</narrative><display x="-30" y="-615" w="690" h="270" /><font family="Segoe UI" size="15" style="Regular" color="FF0000" /></stage><stage stageid="4b1a0963-cef4-4f89-8d30-e65b88c0d1f5" name="Start" type="Start"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="RepetitiveDecipherPollingYN" narrative="Check for enabling Decipher Polling in a loop " stage="RepetitiveDecipherPolling" /></inputs><onsuccess>4a534e78-cafa-4355-861d-32cc4d91aee6</onsuccess></stage><stage stageid="4a534e78-cafa-4355-861d-32cc4d91aee6" name="Start Up" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ae297baa-cd0a-45d2-8a96-dd6c84495db3</onsuccess><processid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</processid></stage><stage stageid="ffc5533a-2e2a-4ae7-bc95-7e1305e64784" name="Stop After Time" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="390" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>time</datatype><initialvalue>17:25:00</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="e7c88019-2bee-413a-b3bb-d2943491302e" name="Stop After Items" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="390" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><datatype>number</datatype><initialvalue>9999999999</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="17f1467e-7ff5-4be5-ad5e-1835fd50272c" name="Stopping Control Settings" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="300" y="-120" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="a4fdec35-8bda-438f-a6ce-9153003387c8" name="Response Queue Name" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Decipher Response Queue - contains details of batches which has been pushed into Decipher through Decipher Request Process template</narrative><display x="-285" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Decipher Response Queue</initialvalue><alwaysinit /></stage><stage stageid="a10217ac-e4af-45d1-98c7-a3b1f4d40902" name="Process Settings" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-525" y="-60" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2bc15a1f-12be-4bb1-9a06-8f4435a074dd" name="Note2" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Batch name (assumed to be unique) is used as item key for Request and Response Queue, as input to queue will need to track it using a unique name. But internal working uses Batch id for reponses from Decipher</narrative><display x="-90" y="0" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="ad0b1272-1f54-4823-ab45-575771803bf6" name="Read Me" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><narrative>Read Me
This process can be implemented as a common solution which keeps running intermittently, or as a process which can be called by another process (not in a loop). Any common functionality, like for example, throttling required in the future for Decipher document pulls can be implemented in this process centrally rather than in multiple places.
In case of internal Batches created in Decipher due to processing exceptions (internal Decipher), the responses will be added as new items in Decipher Response queue with a DecipherInternalBatch tag with the same Batch name (part of Item Key). As Exception scenarios may include valid cases where documents are split and not processed, users will need to add reconcilation and processing logic post picking up the item from Decipher Response Queue.

Main Batch will contain details of the input files coming from Decipher Request queue, All other Exception batches will have consolidated document Details (AllGeneratedBatches) as present in time, at the current point in time when this process runs.</narrative><display x="225" y="-255" w="990" h="210" /><font family="Segoe UI" size="15" style="Bold" color="FF0000" /></stage><stage stageid="c0919c9f-5a31-4330-89ac-ae133f6d15d6" name="Data - SQL Server::Set Connection" type="Action"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="30" y="60" /><inputs><input type="text" name="Server" friendlyname="Server" narrative="The name of the server and, if necessary, instance name of the SQL Server instance to connect to" expr="[Server]" /><input type="text" name="Database" friendlyname="Database" narrative="The name of the database to connect to" expr="[Database]" /><input type="text" name="User" friendlyname="User" narrative="If appropriate, the login name to use to connect to SQL Server. If left empty, windows authentication using the current user will be used instead of SQL Server authentication" expr="[UserId]" /><input type="password" name="Password" friendlyname="Password" narrative="If appropriate, the password to use with the above login name to access SQL Server. Unused for windows authentication" expr="[Password]" /></inputs><onsuccess>168cc6d6-fc1a-4976-8e0e-867f5c789cb9</onsuccess><resource object="Data - SQL Server" action="Set Connection" /></stage><stage stageid="a9d634e4-6e7c-48f9-a427-3922481b67cc" name="Note1" type="Note"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><narrative>Use Credential manager for these values
User should only have read only access to Decipher tables, basically rights to run the SQL in Get Decipher Metadata page</narrative><display x="435" y="60" w="240" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>c0919c9f-5a31-4330-89ac-ae133f6d15d6</onsuccess></stage><stage stageid="c1a174d7-730e-4a5c-bf5e-ad2d054b0ba7" name="Decipher DB Params" type="Block"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-645" y="135" w="135" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="477151c6-fe51-4150-915c-4e88081bae14" name="Server" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-615" y="165" /><datatype>text</datatype><initialvalue xml:space="preserve">.</initialvalue><private /><alwaysinit /></stage><stage stageid="68181c28-969d-4a1c-a1ea-fb59932dee4c" name="Database" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="165" /><datatype>text</datatype><initialvalue xml:space="preserve">DecipherServerDB</initialvalue><private /><alwaysinit /></stage><stage stageid="ff92eadc-1fca-43f4-856b-2d9dc373f1ed" name="UserId" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-615" y="210" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="53802b66-a068-48c5-a957-b081887a5dec" name="Password" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="210" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="cac83589-2d28-4057-913b-b3663f734982" name="Success" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-615" y="255" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="271d9bad-95f5-492f-8892-f5fe1cf0beb8" name="Message" type="Data"><subsheetid>18fec9b5-24ef-4a71-853c-e2b88dbe6d7e</subsheetid><display x="-555" y="255" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ce6b0f09-a3d3-46d1-89dc-9fcc3f90a3af" name="RepetitiveDecipherPolling" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-435" y="-15" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee7c4d26-9be3-4160-8fb4-df616339701d" name="RepetitiveDecipherPollingWaitTime" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Wait time in Seconds for Decipher Batch check</narrative><display x="-435" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>60</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="19b8fd54-82f1-48b6-9a1f-4cb41f187580" name="Batch Name" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-465" y="150" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4dd38f94-d28b-4703-a465-2299ca76d0ee" name="Batch Type" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-390" y="150" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="a4223793-8c8a-4232-9e91-8f12825657ec" name="Batch Id" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-465" y="195" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="5cd608c1-7fb2-4d9f-8f86-c2eceaae9a77" name="Batch Details" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-525" y="105" w="195" h="240" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fe40278-35b9-4e3b-8e6d-043deac2b284" name="Get Available Batch data from Decipher" type="SubSheetInfo"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><narrative>Get Completed Batch data from Decipher</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="011a2039-a570-4335-bba1-d1cbf9757efa" name="Start" type="Start"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><display x="90" y="-135" /><onsuccess>2b7c874e-1ef0-4bc8-af7f-7cd5e1e2b8ad</onsuccess></stage><stage stageid="1db1f13b-1e80-4387-a1e8-63929dc82938" name="End" type="End"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><display x="90" y="45" /></stage><stage stageid="2b7c874e-1ef0-4bc8-af7f-7cd5e1e2b8ad" name="Get Next Completed Batch" type="Action"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><display x="90" y="-60" /><inputs><input type="text" name="Queue Suffix" friendlyname="Queue Suffix" narrative="The queue suffix to retrieve the next batch from" expr="[Queue Suffix]" /></inputs><outputs><output type="text" name="Batch ID" friendlyname="Batch ID" narrative="The ID of the batch retrieved" stage="Batch Id" /><output type="collection" name="Documents" friendlyname="Documents" narrative="The IDs of the documents in the batch" stage="Documents" /><output type="flag" name="Batch Available" friendlyname="Batch Available" narrative="True if a batch was retrieved; otherwise, false" stage="Batch Available" /></outputs><onsuccess>1db1f13b-1e80-4387-a1e8-63929dc82938</onsuccess><resource object="Decipher" action="Get Next Completed Batch" /></stage><stage stageid="ae297baa-cd0a-45d2-8a96-dd6c84495db3" name="Get Available Batch data from Decipher" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>45a3556e-1330-49cb-ba67-f003d3bd5f56</onsuccess><processid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</processid></stage><stage stageid="cc61eebc-eacb-4f08-8a92-9fd9599ad218" name="Is Polling Enabled" type="Decision"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="240" y="255" w="90" h="60" /><decision expression="[RepetitiveDecipherPolling]" /><ontrue>d40a9407-3e54-4b01-a354-e873bbcff818</ontrue><onfalse>53a12e39-28e7-4484-a188-2a5e67de5bc1</onfalse></stage><stage stageid="7db1bda3-9f5b-472e-ab1b-e1bc5bd63fc1" name="Documents" type="Collection"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-390" y="195" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="d8e7146c-cd69-4c8d-aadc-f2e1d4e40068" name="Document Data" type="Collection"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-465" y="240" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="44ff3326-7be7-41a9-95c1-1342d76b69c7" name="Queue Suffix" type="Data"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="15" w="150" h="60" /><datatype>text</datatype><initialvalue xml:space="preserve">DecipherRabbitMQqueue</initialvalue><private /><alwaysinit /></stage><stage stageid="dd60e407-61ab-48f0-8701-c4f22a639e45" name="Batch Details" type="Block"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><display x="-270" y="-30" w="180" h="180" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="66a6f0e8-2dd7-4fc0-ae40-a4e6e82534fb" name="Get Decipher Metadata" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="345" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Batch ID" friendlyname="Batch ID" expr="[Batch Id]" /><input type="collection" name="Files" friendlyname="Files" expr="[Documents]" /><input type="flag" name="Is Meta Required" friendlyname="Is Meta Required" expr="[Is Meta Required]" /></inputs><onsuccess>86c9fbbd-86f1-4e4e-bc7c-e11ed7d07ce0</onsuccess><processid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</processid></stage><stage stageid="45a3556e-1330-49cb-ba67-f003d3bd5f56" name="Is Batch Available?" type="Decision"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="255" w="90" h="60" /><decision expression="[Batch Available]" /><ontrue>66a6f0e8-2dd7-4fc0-ae40-a4e6e82534fb</ontrue><onfalse>cc61eebc-eacb-4f08-8a92-9fd9599ad218</onfalse></stage><stage stageid="d40a9407-3e54-4b01-a354-e873bbcff818" name="Sleep" type="Action"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit onsuccess="true" /><display x="240" y="165" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[RepetitiveDecipherPollingWaitTime]" /></inputs><onsuccess>a7e57863-520a-4e48-b063-c73a32d40349</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="a7e57863-520a-4e48-b063-c73a32d40349" name="Stop?" type="Decision"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="240" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><decision expression="IsStopRequested() OR [Stop After Items]=0 OR LocalTime()&gt;[Stop After Time]" /><ontrue>53a12e39-28e7-4484-a188-2a5e67de5bc1</ontrue><onfalse>ae297baa-cd0a-45d2-8a96-dd6c84495db3</onfalse></stage><stage stageid="7b577c95-b600-4d8c-91fb-0d406115a512" name="End5" type="End"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit onsuccess="true" /><display x="540" y="255" /></stage><stage stageid="53a12e39-28e7-4484-a188-2a5e67de5bc1" name="Close Down" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="390" y="255" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7b577c95-b600-4d8c-91fb-0d406115a512</onsuccess><processid>181229a1-e593-43bc-923c-fb7bc7c74072</processid></stage><stage stageid="b9b37ef6-1c10-4836-9f6d-9057ed71ff87" name="DecipherBatchDetails" type="Collection"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-240" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4afa011b-fb17-4dd1-84dd-dbb2e5cc3a8f" name="Success" type="Data"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-165" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9aa45363-6ef8-4456-84ad-0762e4e5dbec" name="Message" type="Data"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-165" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="067a76c8-26fb-4dab-af47-b821c57da82e" name="Response Queue Batch Data Fetch" type="SubSheetInfo"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>Get Next item and add details if available, else create an item for condition where Item Key not present - Decipher Internal Batch created for exceptions</narrative><display x="-75" y="-75" w="150" h="90" /></stage><stage stageid="c0223567-55e9-4104-9078-afa01b5c6054" name="Start" type="Start"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="165" y="-135" /><onsuccess>31fde015-e7c3-455f-8442-ded4ac0324e3</onsuccess></stage><stage stageid="f59e485b-12d6-482e-9b53-0fd24c008a5c" name="End" type="End"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="165" y="585" /></stage><stage stageid="31fde015-e7c3-455f-8442-ded4ac0324e3" name="Get Next Item" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="165" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Response Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="[Batch Name]" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Response Queue Data" /><output type="text" name="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>4f703340-cc6c-4797-b76c-e26957f6480b</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="7496b381-8ae0-43b0-92c6-ab144372452f" name="Queue data" type="Block"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-270" y="15" w="330" h="330" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d5f0db28-4b4b-4525-9b75-3789c9552061" name="Item ID" type="Data"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-180" y="135" w="150" h="60" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="f1f93dba-3f1b-4312-94bb-5ac71bc25df2" name="Item Status" type="Data"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-30" y="60" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f6c5d62-c18e-441b-aaf2-5680e4f9ad3e" name="Item Attempts" type="Data"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-30" y="135" w="150" h="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86c9fbbd-86f1-4e4e-bc7c-e11ed7d07ce0" name="Get Data from Response Queue" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="420" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f7597118-1f88-4259-8fb0-38648545aa21</onsuccess><processid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</processid></stage><stage stageid="cb714d9d-3258-4ca8-ab99-f12322151277" name="Note8" type="Note"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><narrative>Batch fetch api does not contain details of batch name and status of all documents, rather only batchid and docids which have been processed. We will need to go into database to get Batch name (to fetch reponse queue item using key), as well as to get the status of any documents which have been marked as exception in decipher. 
So Document id's (Documents collection) fetched is overwritten downstream when Meta Required is true, but rather data from database is used as data from Decipher for Document ids.

Note: Any Batch Id Data can only be fetched once, post which it gets deleted from the RabittMQ, so any retries on this page needs to check if new data has been fetched , and store it if yes, else retry would result in data loss as the existing data would be lost</narrative><display x="90" y="-240" w="570" h="150" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="17b4ff99-360e-4380-8730-ede03cabc535" name="Is Meta Required" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-465" y="285" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c57c0cc7-3c87-41c2-9a51-073073cf8f15" name="Get Batch name" type="Calculation"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><narrative>Assuming one batch has one batch name</narrative><display x="75" y="300" /><onsuccess>f2de8a98-2240-4663-b30a-3574ad50d4f2</onsuccess><calculation expression="[Current Batch Details.Batch Name]" stage="Batch Name" /></stage><stage stageid="f7597118-1f88-4259-8fb0-38648545aa21" name="Get Decipher Document Data" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="525" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bc6b0b28-3d1d-4ad7-a47c-fba791b197c6</onsuccess><processid>c7bb9afd-20a0-46b9-a44c-012005ff8568</processid></stage><stage stageid="54159ad1-ef15-4fde-bdf6-733d3dc7d9f7" name="Anchor7" type="Anchor"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit onsuccess="true" /><display x="615" y="720" w="10" h="10" /><onsuccess>330fc401-de79-4c9a-ade9-2fc7ab02beca</onsuccess></stage><stage stageid="2bf03a83-ed09-4390-ae9b-3731ec444dbb" name="Anchor8" type="Anchor"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit onsuccess="true" /><display x="615" y="90" w="10" h="10" /><onsuccess>a7e57863-520a-4e48-b063-c73a32d40349</onsuccess></stage><stage stageid="d355584f-142a-4866-b15d-761141d2c758" name="Note11" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>For cases when verifier actions result in a new Decipher Batch merge is required to avoid data loss</narrative><display x="240" y="540" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="330fc401-de79-4c9a-ade9-2fc7ab02beca" name="Reset Global Data" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="615" y="450" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>71c3477b-9c45-4041-8e14-518d8e2f6ea8</onsuccess><processid>13c5ddf6-a2c1-404e-97d9-529da941599f</processid></stage><stage stageid="71c3477b-9c45-4041-8e14-518d8e2f6ea8" name="Count Items" type="Calculation"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="615" y="360" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2bf03a83-ed09-4390-ae9b-3731ec444dbb</onsuccess><calculation expression="[Stop After Items]-1" stage="Stop After Items" /></stage><stage stageid="47dd4ebc-3d6f-475a-9950-0a8adbb30881" name="Recover" type="Recover"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-45" y="720" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2c5c6116-a7f0-4b89-808a-29f5a1ebe37b</onsuccess></stage><stage stageid="8b86f3c9-9fd2-4de9-a2a0-ded5244981ca" name="Resume" type="Resume"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-180" y="840" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f88a26c1-d2e1-4531-8642-56a40970ca5f</onsuccess></stage><stage stageid="50509297-9387-476c-98c0-44f483f8eabe" name="Mark Item As Exception" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="345" y="840" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a47ae2c5-70a9-4f6a-8460-95251b3531af</onsuccess><processid>d37c7187-cbf7-47da-888c-269f5a3bacd6</processid></stage><stage stageid="2c5c6116-a7f0-4b89-808a-29f5a1ebe37b" name="Exception Data" type="MultipleCalculation"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-180" y="720" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b86f3c9-9fd2-4de9-a2a0-ded5244981ca</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="bc6b0b28-3d1d-4ad7-a47c-fba791b197c6" name="Update Item in Response Queue" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="615" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3aa71eab-72f1-439a-8701-c3ad3f30d55f</onsuccess><processid>559020ce-dc3e-44cd-8e2d-4c19deba90aa</processid></stage><stage stageid="2fd8efa2-31bc-43ad-807a-bbea39887919" name="Get Decipher Document Data" type="SubSheetInfo"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><narrative>Get document data from decipher for each document id</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="41fbdf3d-7d14-43af-91b9-bed2451ae08c" name="Response Queue Data" type="Collection"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>To hold Decipher Response document information (response from Decipher submission). Add or modify fields as required</narrative><display x="-180" y="60" w="150" h="60" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="a12b390c-b026-4c55-b92d-efdcf787dacd" name="Batch Available" type="Data"><subsheetid>5ed061eb-86ba-47e5-a30b-9f9f088ef54e</subsheetid><display x="-180" y="105" w="150" h="60" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="1e86015f-8071-466a-ad43-0fe7d98b6ead" name="Update Item in Response Queue" type="SubSheetInfo"><subsheetid>559020ce-dc3e-44cd-8e2d-4c19deba90aa</subsheetid><narrative>Item in response queue will be updated using item key if present,</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="906a630a-042b-4400-9cc4-2437f92328b2" name="Start" type="Start"><subsheetid>559020ce-dc3e-44cd-8e2d-4c19deba90aa</subsheetid><display x="30" y="-165" /><onsuccess>0a9a7d1e-c2f9-4a1c-bcdf-31301feede69</onsuccess></stage><stage stageid="c3e7db1d-9d8b-4524-a02b-db54b6b70027" name="End" type="End"><subsheetid>559020ce-dc3e-44cd-8e2d-4c19deba90aa</subsheetid><display x="30" y="30" /></stage><stage stageid="0a9a7d1e-c2f9-4a1c-bcdf-31301feede69" name="Update Existing Item Data" type="Action"><subsheetid>559020ce-dc3e-44cd-8e2d-4c19deba90aa</subsheetid><loginhibit onsuccess="true" /><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="30" y="-75" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[Item ID]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[Response Queue Data]" /></inputs><onsuccess>c3e7db1d-9d8b-4524-a02b-db54b6b70027</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="3aa71eab-72f1-439a-8701-c3ad3f30d55f" name="Work Step 1" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="90" y="720" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0f295d1b-6d31-421b-b183-ece47392cb18</onsuccess><processid>69bae3c4-54a3-48f6-acf7-864f8893645a</processid></stage><stage stageid="fe11ec4a-bb34-4148-a088-c6a476721e10" name="Work Step 1" type="SubSheetInfo"><subsheetid>69bae3c4-54a3-48f6-acf7-864f8893645a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="738efcee-2e77-44c2-ab3c-89536b6dd9ea" name="Start" type="Start"><subsheetid>69bae3c4-54a3-48f6-acf7-864f8893645a</subsheetid><display x="15" y="-105" /><onsuccess>c4f18f0a-3b55-473b-ba91-d76e73bec27d</onsuccess></stage><stage stageid="c4f18f0a-3b55-473b-ba91-d76e73bec27d" name="End" type="End"><subsheetid>69bae3c4-54a3-48f6-acf7-864f8893645a</subsheetid><display x="15" y="90" /></stage><stage stageid="a47ae2c5-70a9-4f6a-8460-95251b3531af" name="Anchor5" type="Anchor"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit onsuccess="true" /><display x="615" y="840" w="10" h="10" /><onsuccess>54159ad1-ef15-4fde-bdf6-733d3dc7d9f7</onsuccess></stage><stage stageid="c23a6cbc-e217-465f-a206-34045970270b" name="Work Block" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-105" y="675" w="285" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="94d4ad13-1586-46f6-a872-0ab7bae0c396" name="Decipher Enrich data Block" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Response Queue may not have data at this point</narrative><display x="-45" y="480" w="195" h="180" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f69da989-0e70-486d-87e0-2e6b5dbc98a4" name="Count" type="Calculation"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-225" y="630" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8ca78db9-70d8-4f62-8aa9-f20ea210c2b7</onsuccess><calculation expression="[Retry Count]+1" stage="Retry Count" /></stage><stage stageid="332715a0-b79a-45b3-8937-2139a504b455" name="Retry?" type="Decision"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-105" y="630" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Retry Count]&lt;[Retry Limit] AND (Lower(ExceptionType())=&quot;system exception&quot; OR Lower(ExceptionType())=&quot;internal&quot;)" /><ontrue>f69da989-0e70-486d-87e0-2e6b5dbc98a4</ontrue><onfalse>ac865edb-2e16-4a18-a177-67ce52213533</onfalse></stage><stage stageid="ac865edb-2e16-4a18-a177-67ce52213533" name="Throw" type="Exception"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-105" y="585" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="4c9c3356-0051-4ab3-8eeb-11892962fa48" name="Note3" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><narrative>Navigate back -maybe additional steps required</narrative><display x="-225" y="525" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>f7597118-1f88-4259-8fb0-38648545aa21</onsuccess></stage><stage stageid="285c3a7d-d3cd-4ee2-a86d-e1a965f9104d" name="Recover" type="Recover"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="0" y="630" /><onsuccess>332715a0-b79a-45b3-8937-2139a504b455</onsuccess></stage><stage stageid="8ca78db9-70d8-4f62-8aa9-f20ea210c2b7" name="Resume" type="Resume"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-225" y="585" /><onsuccess>4c9c3356-0051-4ab3-8eeb-11892962fa48</onsuccess></stage><stage stageid="f88a26c1-d2e1-4531-8642-56a40970ca5f" name="Note12" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>We have either old or new queue data present for item id, so any error in this block can be updated in the queue</narrative><display x="60" y="840" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>50509297-9387-476c-98c0-44f483f8eabe</onsuccess></stage><stage stageid="fff81974-75e7-4cca-a850-8b85cd7eba7a" name="Retry Limit" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-285" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="945ced02-7dcb-4ce6-b02d-7e13d69289ba" name="Retry Count" type="Data"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="-375" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="90dfb327-8745-422d-9702-57ddb999f4f1" name="Create New Item for new Batch in Queue" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="300" y="495" /><inputs><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Response Queue Data]" /><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Response Queue Name]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[DecipherGeneratedBatchTag]" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="&quot;inprogress&quot;" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Item IDs" /></outputs><onsuccess>cb713d34-d0d7-4724-996e-5469669053a8</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="cb713d34-d0d7-4724-996e-5469669053a8" name="Get Item for Further Processing" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="435" y="495" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue" expr="[Response Queue Name]" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="[Response Queue Data.Batch Name]" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Response Queue Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="Item Status" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="Item Attempts" /></outputs><onsuccess>404c9a5c-51ba-4f58-a655-31f6b1a21799</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="50aa9948-73a6-45c9-beb3-1412639ed48a" name="Item IDs" type="Collection"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-180" y="210" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" /></collectioninfo></stage><stage stageid="dc91eca8-1c5d-4d1a-bb8f-295f26f9382a" name="Note10" type="Note"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>Only 1 item id will be present for 1 batch.

If item key is present in queue, in that case its normal processing.
If item key is not present in queue, it should be an internal Decipher Batch Generated due to document changes by Decipher/Verifier. This new Batch is added and locked, to maintain regular processing steps downstream. But file locations for the new batch may not be available depending the changes and might need to be reconciled manually</narrative><display x="450" y="-30" w="450" h="120" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="63d704e2-de51-4cee-b1c8-00af4a50a3f1" name="Is item Present and Main batch " type="Decision"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><narrative>I not item present an item needs to be added for new batch tracking</narrative><display x="165" y="75" /><decision expression="[Item ID] &lt;&gt; &quot;&quot; AND [Documents.BatchSource] = &quot;MainBatch&quot;" /><ontrue>44c94d70-a86d-4f4f-8a85-dde24d0ae659</ontrue><onfalse>5c7fcb3f-63c8-4d6c-8451-8c78ce6b749b</onfalse></stage><stage stageid="4caa29c1-0f8d-4ed3-be34-7d46ca3d5ab6" name="Add row to Queue collection" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="300" y="195" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Response Queue Data&quot;" /></inputs><onsuccess>8509a1bd-59cd-416b-a360-d7c74ffcb304</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="43310db4-c8ba-4906-8e38-f6371dd4e56c" name="Append Document Data collection to Queue" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="420" y="345" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data.Output Document Details]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;Document Data&quot;" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data.Output Document Details" /></outputs><onsuccess>5c352340-a99b-414b-93aa-aeed95c209e7</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Collection)" /></stage><stage stageid="bac5669e-44db-46b4-94d8-6985065d859c" name="Add row to Document Details" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="420" y="270" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Response Queue Data.Output Document Details&quot;" /></inputs><onsuccess>93e83639-ded8-424e-8573-42069900e3bc</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="8509a1bd-59cd-416b-a360-d7c74ffcb304" name="Append Batch Name to Queue" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="420" y="195" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;Batch Name&quot;" /><input type="text" name="Value" friendlyname="Value" narrative="The value to be put in the new field." expr="&quot;DecipherInternalBatch-&quot;&amp;FormatDateTime(Now(), &quot;ddMMMyyyyhhMss&quot;) &amp; &quot;-&quot; &amp; [Documents.Batch Name]" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data" /></outputs><onsuccess>fb6aede2-16ab-465d-8cfd-474f0a8d4e26</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Text)" /></stage><stage stageid="fb6aede2-16ab-465d-8cfd-474f0a8d4e26" name="Append Batch Id to Queue" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="300" y="270" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;Batch Id&quot;" /><input type="text" name="Value" friendlyname="Value" narrative="The value to be put in the new field." expr="[Documents.Batch Id]" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data" /></outputs><onsuccess>bac5669e-44db-46b4-94d8-6985065d859c</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Text)" /></stage><stage stageid="d06a9b22-6a4b-4ec6-a396-6b25a533a0ce" name="DecipherGeneratedBatchTag" type="Data"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-45" y="210" w="150" h="60" /><datatype>text</datatype><initialvalue xml:space="preserve">DecipherGeneratedBatch</initialvalue><private /><alwaysinit /></stage><stage stageid="7960a4d6-32c2-4e1e-9363-ef41ce302917" name="Notify Termination" type="SubSheetInfo"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><display x="-165" y="-165" w="150" h="90" /></stage><stage stageid="f09dcdc2-6077-411e-a464-6ecab5494580" name="Start" type="Start"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>806ba7aa-630a-41fc-88a0-ec3923613ac5</onsuccess></stage><stage stageid="be5ed87d-8b98-4663-94c6-3d4a5de99ffb" name="End" type="End"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="15" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c473fa6c-6773-498c-a97d-70184b08e296" name="Note2" type="Note"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><narrative>** Edit as required</narrative><display x="165" y="60" w="150" h="30" /><font family="Tahoma" size="12" style="Bold" color="FF00FF" /><onsuccess>9d0451c9-bd6a-482d-bbf5-246cece3fcdb</onsuccess></stage><stage stageid="1432fa57-d8a4-4bb3-8edf-057eb06fd57a" name="Send Email" type="SubSheet"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="15" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" friendlyname="To" expr="[Notify Termination To]" /><input type="text" name="CC" friendlyname="CC" expr="[Notify Termination CC]" /><input type="text" name="Subject" friendlyname="Subject" expr="[Notify Termination Subject]" /><input type="text" name="Message" friendlyname="Message" expr="[Notify Termination Message]" /><input type="text" name="Attachments" friendlyname="Attachments" expr="" /></inputs><onsuccess>be5ed87d-8b98-4663-94c6-3d4a5de99ffb</onsuccess><processid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</processid></stage><stage stageid="743fe40e-e2e9-41d1-90b8-1e4796d8240d" name="Notify Termination To" type="Data"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2c094f26-6cf3-4bc8-943d-55680dd0d3d7" name="Notify Termination Subject" type="Data"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef7380ce-2385-4bd4-8850-4653470e5f6b" name="Notify Termination Message" type="Data"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d7c1da4-e954-489b-8333-f986634bdf68" name="Notify Termination CC" type="Data"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bad9e401-97ed-4d3a-be47-37fb5915f961" name="Message" type="Calculation"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1432fa57-d8a4-4bb3-8edf-057eb06fd57a</onsuccess><calculation expression="&quot;The &quot;&amp;[Process Name]&amp;&quot; process running on &quot;&amp;GetResourceName()&amp;&quot; has terminated. The following exception occurred.&quot;&amp;Chr(10)&#xA;&amp;Chr(10)&amp;&quot;Exception Type: &quot;&amp;ExceptionType()&#xA;&amp;Chr(10)&amp;&quot;Exception Detail: &quot;&amp;ExceptionDetail()" stage="Notify Termination Message" /></stage><stage stageid="9d0451c9-bd6a-482d-bbf5-246cece3fcdb" name="Subject" type="Calculation"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bad9e401-97ed-4d3a-be47-37fb5915f961</onsuccess><calculation expression="&quot;Blue Prism Termination - &quot;&amp;[Process Name]" stage="Notify Termination Subject" /></stage><stage stageid="6b14604d-9d97-4d58-ba31-c25dd05cc24a" name="Note2" type="Note"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><loginhibit /><narrative>** Edit as required</narrative><display x="165" y="105" w="150" h="30" /><font family="Tahoma" size="12" style="Bold" color="FF00FF" /><onsuccess>bad9e401-97ed-4d3a-be47-37fb5915f961</onsuccess></stage><stage stageid="806ba7aa-630a-41fc-88a0-ec3923613ac5" name="Notify?" type="Decision"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><display x="15" y="-60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Notify Termination]" /><ontrue>9d0451c9-bd6a-482d-bbf5-246cece3fcdb</ontrue><onfalse>2babe92f-4b3a-4707-8518-1cfecbc3ff4e</onfalse></stage><stage stageid="1614ca56-cc56-42b0-b7de-b85217b71fe9" name="Notify Termination" type="Data"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><display x="-195" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue></stage><stage stageid="2babe92f-4b3a-4707-8518-1cfecbc3ff4e" name="End6" type="End"><subsheetid>60060155-cd10-4b29-8652-4a55ba9f9001</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a15d3131-6c21-4834-b163-936fbdcebc26" name="Send Email" type="SubSheetInfo"><subsheetid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</subsheetid><display x="-15" y="-45" w="150" h="90" /></stage><stage stageid="3200540d-7193-4b60-83a1-2bf78bebb007" name="Start" type="Start"><subsheetid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</subsheetid><loginhibit /><display x="150" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" stage="Email Item Data.To" /><input type="text" name="CC" stage="Email Item Data.CC" /><input type="text" name="Subject" stage="Email Item Data.Subject" /><input type="text" name="Message" stage="Email Item Data.Message" /><input type="text" name="Attachments" stage="Email Item Data.Attachments" /></inputs><onsuccess>c3c0853e-0553-472b-88de-80cf81299c74</onsuccess></stage><stage stageid="c3c0853e-0553-472b-88de-80cf81299c74" name="End" type="End"><subsheetid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</subsheetid><loginhibit /><display x="150" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed2c422d-a0e6-4147-8625-498ad85ba8e2" name="Email Item Data" type="Collection"><subsheetid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</subsheetid><loginhibit /><narrative>Used to hold email message details</narrative><display x="0" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="To" type="text" /><field name="CC" type="text" /><field name="Subject" type="text" /><field name="Message" type="text" /><field name="Attachments" type="text" /><field name="Item Key" type="text" /></collectioninfo><initialvalue><row><field name="To" type="text" value="" /><field name="CC" type="text" value="" /><field name="Subject" type="text" value="" /><field name="Message" type="text" value="" /><field name="Attachments" type="text" value="" /><field name="Item Key" type="text" value="" /></row></initialvalue></stage><stage stageid="c0295f81-376a-4926-8a7f-791ca53f4f11" name="Notify Termination" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="420" y="450" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>be894cab-d3a9-4fcc-afc4-20396222b4a4</onsuccess><processid>60060155-cd10-4b29-8652-4a55ba9f9001</processid></stage><stage stageid="be894cab-d3a9-4fcc-afc4-20396222b4a4" name="Re-Throw" type="Exception"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="420" y="360" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="2de84ded-f8cf-46eb-abd3-47332b2b6627" name="Recover" type="Recover"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="420" y="525" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c0295f81-376a-4926-8a7f-791ca53f4f11</onsuccess></stage><stage stageid="0f295d1b-6d31-421b-b183-ece47392cb18" name="Mark Item As Completed" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="375" y="720" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54159ad1-ef15-4fde-bdf6-733d3dc7d9f7</onsuccess><processid>94f41c5c-add7-4852-8d93-7c43a8238f77</processid></stage><stage stageid="4f703340-cc6c-4797-b76c-e26957f6480b" name="Add Output Document Details to Queue collection" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="165" y="0" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;Output Document Details&quot;" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data" /></outputs><onsuccess>63d704e2-de51-4cee-b1c8-00af4a50a3f1</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Collection)" /></stage><stage stageid="44c94d70-a86d-4f4f-8a85-dde24d0ae659" name="Copy Decipher Documents to Output Document Details" type="Calculation"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="165" y="195" /><onsuccess>d299dc6f-5f0e-4177-9623-39a07a809428</onsuccess><calculation expression="[Documents]" stage="Response Queue Data.Output Document Details" /></stage><stage stageid="93e83639-ded8-424e-8573-42069900e3bc" name="Copy Decipher Document to Output Document Details" type="Calculation"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="300" y="345" /><onsuccess>43310db4-c8ba-4906-8e38-f6371dd4e56c</onsuccess><calculation expression="[Documents]" stage="Response Queue Data.Output Document Details" /></stage><stage stageid="d299dc6f-5f0e-4177-9623-39a07a809428" name="Append Document Data collection to Queue" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="165" y="330" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data.Output Document Details]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;Document Data&quot;" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data.Output Document Details" /></outputs><onsuccess>ca057628-6879-4d6f-8c3b-4c7796784480</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Collection)" /></stage><stage stageid="ce2bb97f-77c6-4d50-85d5-de9bd924aeed" name="All Generated Batches" type="Collection"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-390" y="255" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="d4f5ee7d-a1ef-46c2-afb8-3dc13cc041bd" name="Get Current Batch" type="LoopStart"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="165" y="15" /><onsuccess>eeac2861-5d81-43da-a25f-0c89aed603c6</onsuccess><groupid>685575e5-4821-4b67-ab85-a3c97b691485</groupid><looptype>ForEach</looptype><loopdata>DecipherBatchDetails</loopdata></stage><stage stageid="24f30c0a-1085-4c69-8cb7-5de08941b7c5" name="Get Current Batch" type="LoopEnd"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="225" /><onsuccess>e8efb07b-0e2d-4839-92c2-7b67b862f6ed</onsuccess><groupid>685575e5-4821-4b67-ab85-a3c97b691485</groupid></stage><stage stageid="eeac2861-5d81-43da-a25f-0c89aed603c6" name="Match Batch Id" type="Decision"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="75" y="45" /><decision expression="[DecipherBatchDetails.Batch Id] = Upper([Batch Id])" /><ontrue>05add8cd-72ab-425d-9824-82ff4f40b3a8</ontrue><onfalse>9433b356-fb8a-4a79-a194-a92f70581029</onfalse></stage><stage stageid="1fb1b815-5519-43b7-8617-381ddbbcc12c" name="Current Batch Details" type="Collection"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9433b356-fb8a-4a79-a194-a92f70581029" name="Anchor3" type="Anchor"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="165" y="45" w="10" h="10" /><onsuccess>9de8202f-8751-46ba-a005-933488cec1e8</onsuccess></stage><stage stageid="9de8202f-8751-46ba-a005-933488cec1e8" name="Anchor4" type="Anchor"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="165" y="180" w="10" h="10" /><onsuccess>62e46be5-22fd-486e-a477-92f62aa0439d</onsuccess></stage><stage stageid="e8efb07b-0e2d-4839-92c2-7b67b862f6ed" name="Override Decipher API data" type="MultipleCalculation"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="165" y="270" /><onsuccess>c57c0cc7-3c87-41c2-9a51-073073cf8f15</onsuccess><steps><calculation expression="[Current Batch Details]" stage="Documents" /><calculation expression="[DecipherBatchDetails]" stage="All Generated Batches" /></steps></stage><stage stageid="20810d2f-3fa3-47a4-a24f-4ad064660062" name="Query Success?" type="Decision"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="165" y="-75" /><decision expression="[Success]" /><ontrue>289abab1-07a0-4c63-afb0-ffa23527c0ab</ontrue><onfalse>8bc48baf-01bd-4150-9735-b879bf2bb743</onfalse></stage><stage stageid="8bc48baf-01bd-4150-9735-b879bf2bb743" name="System Exception" type="Exception"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="375" y="-75" /><exception localized="yes" type="System Exception" detail="&quot;Error Message from SQL Query - Get Decipher Metadat page :&quot; &amp; [Message]" /></stage><stage stageid="e2fa439d-6a79-44c7-a5c9-de1f0a68acad" name="TempColl" type="Collection"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><display x="-240" y="135" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f3e62fbd-0b33-4bf1-a700-6d1a4a9d3e3b" name="RowCount" type="Data"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="-165" y="135" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="05add8cd-72ab-425d-9824-82ff4f40b3a8" name="Copy Row to temp" type="Action"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="90" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;DecipherBatchDetails&quot;" /><input type="number" name="Start Row" friendlyname="Start Row" narrative="The index of the first row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="[RowCount]" /><input type="number" name="End Row" friendlyname="End Row" narrative="The index of the last row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="[RowCount]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" narrative="A collection which contains the rows copied from the input collection" stage="TempColl" /></outputs><onsuccess>bf8bac5e-c125-4a23-b846-f668f8704610</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Copy Rows" /></stage><stage stageid="bf8bac5e-c125-4a23-b846-f668f8704610" name="Append Rows to Current Batch" type="Action"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="135" /><inputs><input type="collection" name="Main Collection" friendlyname="Main Collection" narrative="The collection to append to." expr="[Current Batch Details]" /><input type="collection" name="Collection to Append" friendlyname="Collection to Append" narrative="The collection to append." expr="[TempColl]" /></inputs><outputs><output type="collection" name="Combined Collection" friendlyname="Combined Collection" narrative="The combined collection." stage="Current Batch Details" /></outputs><onsuccess>62e46be5-22fd-486e-a477-92f62aa0439d</onsuccess><resource object="Utility - Collection Manipulation" action="Append Rows to Collection" /></stage><stage stageid="289abab1-07a0-4c63-afb0-ffa23527c0ab" name="Add Row to temp" type="Action"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="-30" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;TempColl&quot;" /></inputs><onsuccess>d4f5ee7d-a1ef-46c2-afb8-3dc13cc041bd</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="62e46be5-22fd-486e-a477-92f62aa0439d" name="increment RowCount" type="Calculation"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="180" /><onsuccess>24f30c0a-1085-4c69-8cb7-5de08941b7c5</onsuccess><calculation expression="[RowCount] + 1 " stage="RowCount" /></stage><stage stageid="f2de8a98-2240-4663-b30a-3574ad50d4f2" name="Anchor6" type="Anchor"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="75" y="405" w="10" h="10" /><onsuccess>74e8c53d-0737-4d26-919e-0c5550363f54</onsuccess></stage><stage stageid="ca057628-6879-4d6f-8c3b-4c7796784480" name="Add All Generated Batches to Queue collection" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="165" y="420" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;All Generated Batches&quot;" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data" /></outputs><onsuccess>51e91c86-26f1-4616-a759-938cc9d47e86</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Collection)" /></stage><stage stageid="51e91c86-26f1-4616-a759-938cc9d47e86" name="Copy All Generated Batches" type="Calculation"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="165" y="510" /><onsuccess>f59e485b-12d6-482e-9b53-0fd24c008a5c</onsuccess><calculation expression="[All Generated Batches]" stage="Response Queue Data.All Generated Batches" /></stage><stage stageid="5c352340-a99b-414b-93aa-aeed95c209e7" name="Add All Generated Batches to Queue collection" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="300" y="420" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[Response Queue Data]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;All Generated Batches&quot;" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="Response Queue Data" /></outputs><onsuccess>cf4a21f4-ab58-40f5-b5e6-1f7588dcd2f7</onsuccess><resource object="Utility - Collection Manipulation Extended" action="Append Field (Collection)" /></stage><stage stageid="cf4a21f4-ab58-40f5-b5e6-1f7588dcd2f7" name="Copy All Generated Batches" type="Calculation"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="420" y="420" /><onsuccess>90dfb327-8745-422d-9702-57ddb999f4f1</onsuccess><calculation expression="[All Generated Batches]" stage="Response Queue Data.All Generated Batches" /></stage><stage stageid="56716f13-f23d-4a0e-98b2-4f76170f2766" name="Decipher Enrich data Block" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Response Queue may not have data at this point</narrative><display x="-45" y="300" w="195" h="75" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="19a772d9-87be-49a6-8db0-214cab7b441e" name="Decipher Get data Block" type="Block"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Response Queue may not have data at this point</narrative><display x="-45" y="45" w="195" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5c3545a0-7b7b-4cd7-b68f-b31130036aed" name="Recover1" type="Recover"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="0" y="90" /><onsuccess>38e5b912-dba0-4d52-8d08-d9dd5f2cde78</onsuccess></stage><stage stageid="09ed3629-aad6-41de-bdf5-c431565e291c" name="Recover2" type="Recover"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><loginhibit /><display x="0" y="345" /><onsuccess>38e5b912-dba0-4d52-8d08-d9dd5f2cde78</onsuccess></stage><stage stageid="38e5b912-dba0-4d52-8d08-d9dd5f2cde78" name="Note13" type="Note"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><narrative>Call Startup and Retry after checking error in case error is Decipher or SQL DB not connected</narrative><display x="0" y="210" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>4a57d993-93d0-4bc8-8b24-9194afa6f3a1</onsuccess></stage><stage stageid="728ec1fb-da38-417e-afee-c5255383321e" name="System Exception" type="Exception"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-225" y="210" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="5c7fcb3f-63c8-4d6c-8451-8c78ce6b749b" name="Exception Batch cam first release item" type="Decision"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="300" y="75" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>4cbed30f-9976-442d-9b08-e749653def89</ontrue><onfalse>4caa29c1-0f8d-4ed3-be34-7d46ca3d5ab6</onfalse></stage><stage stageid="4cbed30f-9976-442d-9b08-e749653def89" name="Unlock Item" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><narrative>Unlocks a currently locked work queue item</narrative><display x="420" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the work queue item which should be unlocked" expr="[Item ID]" /></inputs><outputs><output type="flag" name="Unlocked" friendlyname="Unlocked" narrative="Whether the item was unlocked as a result of this action or not. If the item had finished being worked elsewhere before this action had run, this will be 'False'" stage="Unlocked" /></outputs><onsuccess>a048d6d9-8f76-489f-b478-c7043a26673c</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Unlock Item" /></stage><stage stageid="17c97018-9ba2-42c1-870e-5ec92565432a" name="Unlocked" type="Data"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><display x="-180" y="285" w="150" h="60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a048d6d9-8f76-489f-b478-c7043a26673c" name="Delete All rows" type="Action"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="420" y="120" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Response Queue Data&quot;" /></inputs><onsuccess>4caa29c1-0f8d-4ed3-be34-7d46ca3d5ab6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove All Rows" /></stage><stage stageid="404c9a5c-51ba-4f58-a655-31f6b1a21799" name="Anchor9" type="Anchor"><subsheetid>01e23a3f-3c92-4a6f-a10d-3438c8a40e72</subsheetid><loginhibit onsuccess="true" /><display x="435" y="585" w="10" h="10" /><onsuccess>f59e485b-12d6-482e-9b53-0fd24c008a5c</onsuccess></stage><stage stageid="decb71be-7766-4342-8972-29d544b71c14" name="Note14" type="Note"><subsheetid>f19a7376-9b66-4352-bd6b-40b3de0d36b7</subsheetid><narrative>Add email logic as required</narrative><display x="345" y="15" w="240" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="af4e51d0-792c-4f37-9a91-adc12c7a0207" name="Data - SQL Server::Close" type="Action"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><loginhibit onsuccess="true" /><display x="15" y="0" /><outputs><output type="flag" name="Success" friendlyname="Success" narrative="Flag indicating success (True) or failure (False)" stage="" /><output type="text" name="Message" friendlyname="Message" narrative="Error message giving detail regarding why this action failed" stage="" /></outputs><onsuccess>5287a71f-5b5b-48df-ae73-20ea9c216baf</onsuccess><resource object="Data - SQL Server" action="Close" /></stage><stage stageid="117f6ab5-04d6-4614-a2b8-019bab1c8e4e" name="SQL Server" type="Block"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><display x="-60" y="-75" w="270" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="77a90baf-5e14-49dd-9501-f29445e803a4" name="Resume" type="Resume"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><loginhibit /><display x="375" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2ed48ae6-b3ba-4e6d-9868-24ecf7013688</onsuccess></stage><stage stageid="2ed48ae6-b3ba-4e6d-9868-24ecf7013688" name="System Exception" type="Exception"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><loginhibit /><display x="480" y="-30" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Unable to Close SQL Server&quot;" /></stage><stage stageid="641445a4-6f33-4173-8765-fe2655ff8c00" name="Recover" type="Recover"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><loginhibit /><display x="165" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4bc664d9-3029-497c-894d-95cfb09cd62c</onsuccess></stage><stage stageid="4bc664d9-3029-497c-894d-95cfb09cd62c" name="Exception Data" type="MultipleCalculation"><subsheetid>181229a1-e593-43bc-923c-fb7bc7c74072</subsheetid><display x="285" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>77a90baf-5e14-49dd-9501-f29445e803a4</onsuccess><steps><calculation expression="ExceptionType()" stage="Exception Type" /><calculation expression="ExceptionDetail()" stage="Exception Detail" /></steps></stage><stage stageid="4a57d993-93d0-4bc8-8b24-9194afa6f3a1" name="Close Down" type="SubSheet"><subsheetid>ebbf8442-c75c-4771-b7d0-46916daa25f0</subsheetid><display x="-120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>728ec1fb-da38-417e-afee-c5255383321e</onsuccess><processid>181229a1-e593-43bc-923c-fb7bc7c74072</processid></stage><stage stageid="debab2ca-677f-4ec4-83f0-0c567943741e" name="Start" type="Start"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><display x="105" y="-45" /><onsuccess>51c1e822-ee5a-4174-8dde-7787714428ef</onsuccess></stage><stage stageid="c47dfa4a-2ac2-4845-bc3f-641e51f46811" name="End" type="End"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><display x="15" y="345" /></stage><stage stageid="679901af-de65-4cbb-b534-8c48f96ddee7" name="Get Document Data" type="Action"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="15" y="105" /><inputs><input type="text" name="Document ID" friendlyname="Document ID" narrative="The ID of the document to get the data for" expr="[Temp Coll.Document Id]" /></inputs><outputs><output type="collection" name="Document Data" friendlyname="Document Data" narrative="The retrieved document data" stage="Document Data" /></outputs><onsuccess>1189abc6-83d9-40f3-85c6-44d226ec9981</onsuccess><resource object="Decipher" action="Get Document Data" /></stage><stage stageid="2d5bbb4b-6163-41ef-871f-28791ae8d37d" name="Loop Through Documents" type="LoopStart"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="105" y="45" /><onsuccess>37efae03-84f6-46cc-8091-8d2fc4e59983</onsuccess><groupid>72e2601f-5b73-4d5c-968b-0cf4635e48cd</groupid><looptype>ForEach</looptype><loopdata>Temp Coll</loopdata></stage><stage stageid="052e5d33-1be8-4734-b665-6a92823201c6" name="Loop Through Documents" type="LoopEnd"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="15" y="225" /><onsuccess>3781fdb8-98f4-4f88-a044-fe148476a513</onsuccess><groupid>72e2601f-5b73-4d5c-968b-0cf4635e48cd</groupid></stage><stage stageid="3781fdb8-98f4-4f88-a044-fe148476a513" name="Copy Temp Coll to Queue Data" type="Calculation"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="105" y="300" /><onsuccess>c47dfa4a-2ac2-4845-bc3f-641e51f46811</onsuccess><calculation expression="[Temp Coll]" stage="Response Queue Data.Output Document Details" /></stage><stage stageid="00645169-a82f-47f3-9e02-49f2d7378043" name="Temp Coll" type="Collection"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><display x="-195" y="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="51c1e822-ee5a-4174-8dde-7787714428ef" name="Copy Child Coll to Temp Coll for Loop" type="Calculation"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><onsuccess>2d5bbb4b-6163-41ef-871f-28791ae8d37d</onsuccess><calculation expression="[Response Queue Data.Output Document Details]" stage="Temp Coll" /></stage><stage stageid="7636c822-34aa-4b83-b012-d31971b4a4aa" name="Page Data items" type="Block"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><display x="-270" y="15" w="195" h="105" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1189abc6-83d9-40f3-85c6-44d226ec9981" name="Copy Decipher Coll to Temp Coll" type="Calculation"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="15" y="165" /><onsuccess>052e5d33-1be8-4734-b665-6a92823201c6</onsuccess><calculation expression="[Document Data]" stage="Temp Coll.Document Data" /></stage><stage stageid="37efae03-84f6-46cc-8091-8d2fc4e59983" name="Check for Exception in main batch and Deletions " type="Decision"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><display x="105" y="105" /><decision expression="(([Temp Coll.IsExceptional] = True) AND ([Temp Coll.BatchSource] = &quot;MainBatch&quot;)) OR ([Temp Coll.IsDeleted] = True)" /><ontrue>f78f1dcd-4d97-415c-bdd5-742d6a1b4b67</ontrue><onfalse>679901af-de65-4cbb-b534-8c48f96ddee7</onfalse></stage><stage stageid="f78f1dcd-4d97-415c-bdd5-742d6a1b4b67" name="Anchor10" type="Anchor"><subsheetid>c7bb9afd-20a0-46b9-a44c-012005ff8568</subsheetid><loginhibit onsuccess="true" /><display x="105" y="225" w="10" h="10" /><onsuccess>052e5d33-1be8-4734-b665-6a92823201c6</onsuccess></stage><stage stageid="c14d427e-d8be-4a8b-9f5c-4175e1cbd371" name="Batch Details SQL" type="Data"><subsheetid>ea1a9b66-8378-4b7f-b17a-72f222c8a257</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="0" /><datatype>text</datatype><initialvalue xml:space="preserve">SET NOCOUNT ON


/*
Created By : Bimal
Objective: Fetch file information for all processed batches
Parameters : BatchId ==&gt;ID of the particular batch 
*/ 

--select top 10 * from batch order by CreatedOn desc
if object_id('tempdb..#Base') is not null drop table #Base    
if object_id('tempdb..#AllBatch') is not null drop table #AllBatch    
if object_id('tempdb..#CommaSeparated') is not null drop table #CommaSeparated  


DECLARE @BatchId UNIQUEIDENTIFIER = '@Batch Id@' 

DECLARE @SourceBatchId UNIQUEIDENTIFIER  = NULL



SELECT  @SourceBatchId = B.Id
FROM Batch B WITH(NOLOCK)
INNER JOIN BatchOperation BO WITH(NOLOCK) ON BO.BatchId = B.Id AND BO.Type = 1 
INNER JOIN BatchOperationMap BOM WITH(NOLOCK) ON BOM.BatchOperationId = BO.Id 
WHERE  BOM.BatchId =  @BatchId


 
--Preparing table with all auto created batches that include High Confidence and Exception Batches
SELECT ISNULL(@SourceBatchId,@BatchId) SourceBatchId,BOM.BatchId ChildBatchId INTO #AllBatch
FROM Batch B WITH(NOLOCK)
LEFT JOIN BatchOperation BO WITH(NOLOCK) ON BO.BatchId = B.Id --AND BO.Type = 1 
LEFT JOIN BatchOperationMap BOM WITH(NOLOCK) ON BOM.BatchOperationId = BO.Id 
WHERE B.Id = ISNULL(@SourceBatchId,@BatchId)  
 
 
SELECT 
       CONVERT(VARCHAR(100) , A.BatchId) BatchId,
       A.BatchName,
       A.BatchSource,
       CONVERT(VARCHAR(100) , A.DocumentId) DocumentId,
       X.V.value('@value', 'varchar(max)') as FileName,
       DocumentType,
       IsExceptional,
       ExceptionNotes,
       IsDeleted,
       DocumentIndex,
       PageIndex,
       A.Flags,
       IFs.FileIndex,
       CASE 
              WHEN A.IsDeleted = 1 AND IFs.FileIndex IS NULL THEN 'DeletedForMerge'
              WHEN A.IsDeleted IS NULL AND A.Flags = 8 THEN 'SplitDocument' ELSE 'PrimaryDocument' 
              END DocumentSet, CONVERT(NVARCHAR(100), NULL) MergedDocuments
INTO #Base
FROM
       (SELECT 
              D.BatchId,
              B.Name BatchName,
              CONVERT(NVARCHAR(255),'MainBatch') 
              BatchSource,
              D.Id DocumentId,
              D.Type DocumentType,
              D.IsExceptional,
              D.Notes ExceptionNotes,D.
              IsDeleted,
              D.DocumentIndex,
              P.PageIndex,
              D.Flags,
              CONVERT(XML,REPLACE(P.Metadata, 'encoding="utf-8"', 'encoding="utf-16"')) MetaDataXML
       FROM 
              Batch B WITH(NOLOCK)
       INNER JOIN 
             (SELECT DISTINCT SourceBatchID FROM #AllBatch) E ON E.SourceBatchId = B.Id
       INNER JOIN 
              Document D WITH(NOLOCK) ON D.BatchId = B.Id
       LEFT JOIN 
              Page P WITH(NOLOCK) ON P.DocumentId = D.Id)A
       OUTER APPLY 
              A.MetaDataXML.nodes('page_metadata/kvp') as X(V)
       LEFT JOIN 
              InputFile IFs ON IFs.BatchId = A.BatchId AND IFs.FileName = X.V.value('@value', 'varchar(max)')
       ORDER BY FileIndex




INSERT 
       INTO #Base
SELECT 
       A.BatchId,
       A.BatchName,
       A.BatchSource,
       A.DocumentId,
       X.V.value('@value', 'varchar(max)') as FileName,
       DocumentType,
       IsExceptional,
       ExceptionNotes,
       IsDeleted,
       DocumentIndex,
       PageIndex,
       A.Flags,
       IFs.FileIndex,
       CASE 
              WHEN A.IsDeleted = 1 AND IFs.FileIndex IS NULL THEN 'DeletedForMerge'
              WHEN A.IsDeleted IS NULL AND A.Flags = 8 THEN 'SplitDocument' ELSE 'PrimaryDocument' 
              END DocumentSet, CONVERT(NVARCHAR(100), NULL) MergedDocuments
FROM
       (SELECT 
              D.BatchId,
              B.Name BatchName,
              CASE WHEN D.IsExceptional IS NULL THEN 'HighConfidenceBatch' ELSE 'ExceptionBatch' END
              BatchSource,
              D.Id DocumentId,
              D.Type DocumentType,
              D.IsExceptional,
              D.Notes ExceptionNotes,
              D.IsDeleted,
              D.DocumentIndex,
              P.PageIndex,
              D.Flags,
              CONVERT(XML,REPLACE(P.Metadata, 'encoding="utf-8"', 'encoding="utf-16"')) MetaDataXML
       FROM 
              Batch B WITH(NOLOCK)
       INNER JOIN 
              #AllBatch E ON E.ChildBatchId = B.Id
       INNER JOIN 
              Document D WITH(NOLOCK) ON D.BatchId = B.Id
       LEFT JOIN 
              Page P WITH(NOLOCK) ON P.DocumentId = D.Id)A
       OUTER APPLY 
              A.MetaDataXML.nodes('page_metadata/kvp') as X(V)
       LEFT JOIN 
              InputFile IFs ON IFs.BatchId = A.BatchId AND IFs.FileName = X.V.value('@value', 'varchar(max)')
       ORDER BY FileIndex


;WITH CTERecur
AS(
       SELECT 
              1 Iteration, 
              BatchId, 
              BatchName, 
              BatchSource, 
              DocumentId, 
              FileName,
              DocumentType,
              IsExceptional,
              ExceptionNotes, 
              IsDeleted, 
              DocumentIndex, 
              PageIndex, 
              Flags, 
              FileIndex, 
              DocumentSet,
              CONVERT(VARCHAR(MAX),ISNULL(MergedDocuments,'') )MergedDocuments
       FROM 
              #Base 
       WHERE PageIndex = 0 OR IsDeleted = 1
UNION ALL
       SELECT 
              C.Iteration + 1, 
              C.BatchId, 
              C.BatchName, 
              C.BatchSource, 
              C.DocumentId, 
              C.FileName,
              C.DocumentType,
              C.IsExceptional,
              C.ExceptionNotes, 
              C.IsDeleted, 
              C.DocumentIndex, 
              B.PageIndex, 
              C.Flags, 
              C.FileIndex, 
              C.DocumentSet,
              CASE 
                     WHEN ISNULL(C.FileName,'')&lt;&gt; ISNULL(B.FileName,'') THEN CONVERT(VARCHAR(MAX), B.FileName+ ',' +  ISNULL(C.MergedDocuments,'') ) 
                     ELSE '' END
       FROM 
              #Base B
       INNER JOIN 
              CTERecur C ON C.BatchId = B.BatchId
       AND C.DocumentId = B.DocumentId 
       AND C.DocumentIndex = B.DocumentIndex  
       AND C.PageIndex +1 = B.PageIndex )

SELECT 
       COUNT(1) 
OVER(PARTITION BY fileName, DocumentId) maxDepth, * 
INTO 
       #CommaSeparated
FROM 
       CTERecur 
            
UPDATE 
       U
SET 
       U.DocumentSet = 'MergedDocument',
       U.MergedDocuments = B.FileName
FROM 
       #CommaSeparated U
INNER JOIN 
       #CommaSeparated B ON B.BatchId = U.BatchId
AND B.DocumentId = U.DocumentId
AND B.DocumentIndex = U.DocumentIndex
AND B.PageIndex = U.PageIndex+1
AND ISNULL(B.FileName,'') &lt;&gt; ISNULL(U.FileName,'')





SELECT 
       BatchId "Batch Id", 
       BatchName "Batch Name", 
       BatchSource, 
       DocumentId "Document Id", 
       FileName,
       DocumentType,
       IsExceptional,
       ExceptionNotes, 
       IsDeleted, 
       DocumentIndex, 
       PageIndex, 
       Flags, 
       FileIndex, 
       DocumentSet,
       MergedDocuments
FROM 
       #CommaSeparated 
WHERE 
       maxDepth = Iteration
</initialvalue><private /><alwaysinit /></stage></process></process>
        <process id="3ac5a1ec-bda0-4566-874e-e1b598096f97" name="Test Decipher Request Queue Populate" xmlns="http://www.blueprism.co.uk/product/process"><process name="Test Decipher Request Queue Populate" version="1.0" bpversion="6.7.0.20116" narrative="Just a test process, to show queue item data structure and data expected by Decipher" byrefcollection="true"><view><camerax>0</camerax><cameray>138</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="50fa4901-b383-4abc-a264-92c423d8bf92" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>f8bf570c-8e40-4776-997e-b7dd81784893</onsuccess></stage><stage stageid="7446c382-302b-4444-8494-afa83b46a53f" name="End" type="End"><display x="30" y="285" /></stage><stage stageid="691eb5e5-6898-4a8e-8df3-0602f0639ca0" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f8bf570c-8e40-4776-997e-b7dd81784893" name="Get all Image Files From Path" type="Action"><loginhibit onsuccess="true" /><display x="105" y="-60" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder in which to look for files" expr="[Image Path]" /><input type="text" name="Patterns CSV" friendlyname="Patterns CSV" narrative="The comma seperated list of wildcard patterns" expr="&quot;*.jpg,*.pdf,*.jpeg,*.bmp,*.png&quot;" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" narrative="True if successful" stage="" /><output type="text" name="Message" friendlyname="Message" narrative="A message if unsuccessful" stage="" /><output type="collection" name="Files" friendlyname="Files" narrative="The collection of files found" stage="Files" /></outputs><onsuccess>3f6ffc7c-e21f-45d7-8e6d-47c29e3b6469</onsuccess><resource object="Utility - File Management" action="Get Files" /></stage><stage stageid="26833796-31bb-4501-b7c3-51fc19114f97" name="Image Path" type="Data"><loginhibit onsuccess="true" /><display x="-270" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81b0963f-4045-4f84-b2cf-dd8b8f556f98" name="Files" type="Collection"><display x="-180" y="135" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="8281bd82-9b18-4cb7-a176-744e8b017040" name="Collections::Add Row" type="Action"><loginhibit onsuccess="true" /><display x="15" y="90" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Request Queue Data.Input Document Details&quot;" /></inputs><onsuccess>d49333c4-3445-4c39-aacc-ac8915ee682c</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="945c6d93-dc8b-4e40-b036-0311123ffe3c" name="Loop Files" type="LoopStart"><loginhibit onsuccess="true" /><display x="120" y="45" /><onsuccess>8281bd82-9b18-4cb7-a176-744e8b017040</onsuccess><groupid>c6c0e44a-dd1e-4f2e-8f0d-406760bd4808</groupid><looptype>ForEach</looptype><loopdata>Files</loopdata></stage><stage stageid="1a3495d4-6b31-4401-8a95-d25de1ca815e" name="Loop Files" type="LoopEnd"><loginhibit onsuccess="true" /><display x="30" y="195" /><onsuccess>09fee469-9e4e-42ab-978b-34f2c909d7af</onsuccess><groupid>c6c0e44a-dd1e-4f2e-8f0d-406760bd4808</groupid></stage><stage stageid="d49333c4-3445-4c39-aacc-ac8915ee682c" name="Copy file Details" type="Calculation"><loginhibit onsuccess="true" /><display x="120" y="135" /><onsuccess>1a3495d4-6b31-4401-8a95-d25de1ca815e</onsuccess><calculation expression="[Image Path]&amp;[Files.Name]" stage="Request Queue Data.Input Document Details.File location" /></stage><stage stageid="09fee469-9e4e-42ab-978b-34f2c909d7af" name="Add to queue" type="Action"><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="120" y="225" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Request Queue Name]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Request Queue Data]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Item IDs" /></outputs><onsuccess>7446c382-302b-4444-8494-afa83b46a53f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="fd4e2bf0-3f7f-4a79-85f8-7c90f1c3bdb5" name="Request Queue Name" type="Data"><narrative>Decipher Request Queue - Each item should contain the file location(s) which needs to go as a single batch and/or any other required information</narrative><display x="-210" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="0000FF" /><datatype>text</datatype><initialvalue xml:space="preserve">Decipher Request Queue</initialvalue><alwaysinit /></stage><stage stageid="90c85e76-08d1-4323-b3bd-2ab9cde0c70e" name="Item IDs" type="Collection"><display x="-225" y="195" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" /></collectioninfo></stage><stage stageid="3f6ffc7c-e21f-45d7-8e6d-47c29e3b6469" name="Copy batch Details" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="15" y="0" /><onsuccess>945c6d93-dc8b-4e40-b036-0311123ffe3c</onsuccess><steps><calculation expression="&quot;&lt;BatchName&gt;-&quot;&amp;FormatDateTime(Now(), &quot;ddMMMyyyyhhMss&quot;)" stage="Request Queue Data.Batch Name" /><calculation expression="&quot;&lt;Batch Type&gt;&quot;" stage="Request Queue Data.Batch Type" /><calculation expression="&quot;&lt;Batch Description&gt;&quot;" stage="Request Queue Data.Batch Description" /></steps></stage><stage stageid="876ae685-99e0-4145-a6f1-b440b82abc87" name="Request Queue Data" type="Collection"><narrative>To hold Decipher Push document information. Add or modify fields as required</narrative><display x="-225" y="75" w="150" h="60" /><datatype>collection</datatype><alwaysinit /><collectioninfo><singlerow /><field name="Batch Name" type="text" /><field name="Input Document Details" type="collection"><field name="File location" type="text" /></field><field name="Batch Type" type="text" /><field name="Batch Description" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Batch Name" type="text" value="" /><field name="Input Document Details" type="collection" /><field name="Batch Type" type="text" value="" /><field name="Batch Description" type="text" value="" /></row></initialvalue></stage></process></process>
        <object id="29192c0f-d13c-4769-bed3-9c51217efab4" name="Data - SQL Server" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - SQL Server" version="6.7.1.21315" bpversion="6.7.0.20116" narrative="SQL Server interaction object." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>86c30a1c-12a4-44c4-9674-b287d0dfa70d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>50</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-49.5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3eacbbb6-d03e-4df7-9904-a3b1ac67c882" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88d8d9e5-f97e-40d6-b049-bb643eb06852" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="True"><name>Open</name><view><camerax>-41</camerax><cameray>-57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="109afac8-f6b2-467f-971c-c6141124b87a" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3842f7c4-4df2-4e6a-bedd-6dacf01a6db4" type="Normal" published="False"><name>Is Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="False"><name>Internal Close</name><view><camerax>-40</camerax><cameray>-90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3ee937ec-012f-445c-9b2b-ebbcb6d3614d" type="Normal" published="True"><name>Begin Transaction</name><view><camerax>50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ba712d56-697c-48af-bc96-85e49eb968fc" type="Normal" published="True"><name>Commit Transaction</name><view><camerax>43</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b6e35c6-8ec4-4fbe-b9d7-d43c48492695" type="Normal" published="True"><name>Rollback Transaction</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c07ae8a2-a04f-46f2-8919-ec4da73d5b25" type="Normal" published="True"><name>Execute</name><view><camerax>-26</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a45f6098-73e2-4639-a002-31592645bfa5" type="Normal" published="True"><name>Get Records Affected</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12d7c91f-29ac-4711-9614-7ab992dc4b1f" type="Normal" published="True"><name>Get Number</name><view><camerax>26</camerax><cameray>48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="18349d7d-79b1-4397-a8a0-490ab27f459f" type="Normal" published="True"><name>Get Text</name><view><camerax>0</camerax><cameray>24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>-50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13b6c91d-68e8-46e9-bcab-9261446dc0af" type="Normal" published="True"><name>Get CSV File</name><view><camerax>-49.5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e50a93aa-11fe-4457-a16d-0237560fff18" type="Normal" published="True"><name>Get CSV</name><view><camerax>20</camerax><cameray>-38</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.SqlClient</import><import>System.IO</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[
Private moConnection As SqlConnection
Private moTransaction As SqlTransaction

Private Sub WriteCsv(ByVal sql As String, ByVal out As TextWriter)

	' The target data set
	Dim ds As New DataSet()

	' Build and execute the command, dumping the data into the above set
    Using cmd As New SqlCommand()
        cmd.Connection = moConnection
        cmd.Transaction = moTransaction
        cmd.CommandText = sql
        
        Using da As New SqlDataAdapter()
            da.SelectCommand = cmd
            da.Fill(ds)
        End Using
	End Using

	' Go through the data, escaping and outputting to the writer
	Dim quotesRequiredChars() As Char = {","c, """"c}
	For Each tab As DataTable In ds.Tables
		' Column headers first
		Dim first As Boolean = True
		For Each col As DataColumn In tab.Columns
			If first Then first = False Else out.Write(",")
			Dim val As String = col.ColumnName
			If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
			 val = """" & val.Replace("""", """""") & """"
			out.Write(val)
		Next
		out.WriteLine()
		' Then a line for each row
		For Each row As DataRow in tab.Rows
			first = True
			For Each col As DataColumn in tab.Columns
				If first Then first = False Else out.Write(",")
				If row.IsNull(col) Then Continue For
				Dim val As String = row(col).ToString()
				If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
				 val = """" & val.Replace("""", """""") & """"
				out.Write(val)
			Next
			out.WriteLine()
		Next
		' Separate each table with a couple of blank lines
		out.WriteLine()
		out.WriteLine()                
	Next
	
	out.Flush()

End Sub

Private Function GetScalar(Of T)(ByVal sql As String, _
 ByRef success As Boolean, ByRef msg As String) As T

	' Assume Success
	success = True
	msg = ""

	Try
		Using cmd As New SqlCommand()
			cmd.Connection = moConnection
			cmd.CommandText = SQL
			cmd.Transaction = moTransaction
			Return CType(cmd.ExecuteScalar(), T)
		End Using
	Catch ex As Exception
		success = False
		msg = ex.Message
		Return Nothing
	End Try

End Function]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Server" narrative="The name of the server and, if necessary, instance name of the SQL Server instance to connect to" stage="Server" /><input type="text" name="Database" narrative="The name of the database to connect to" stage="Database" /><input type="text" name="User" narrative="If appropriate, the login name to use to connect to SQL Server. If left empty, windows authentication using the current user will be used instead of SQL Server authentication" stage="User" /><input type="password" name="Password" narrative="If appropriate, the password to use with the above login name to access SQL Server. Unused for windows authentication" stage="Password" /></inputs><onsuccess>66c19ef6-3007-4fa0-af27-b52892a9671c</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d666ce88-be59-4711-8698-025945395207" name="Server" type="Data"><loginhibit /><display x="180" y="-105" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;; user id=&quot; &amp; [User] &amp; &quot;;password=&quot; &amp; [Password]" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c7fc106-01f3-4a2a-aa7e-44c44875fb04</onsuccess><code><![CDATA[Success = True
Message = ""

If moConnection IsNot Nothing Then Return
Try
	moConnection = New SqlConnection(ConnectionString)
	moConnection.Open()

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="24f2742e-2541-4680-a355-1783c4e2f2f2" name="Execute" type="SubSheetInfo"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05448135-b8ce-4a88-9d5c-eb85fea9d352" name="Start" type="Start"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>3753873b-7231-4b1f-947e-e6b87deac3d8</onsuccess></stage><stage stageid="3810933f-d93a-482c-a0d8-20796ecd3049" name="Execute" type="Code"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Records Affected" stage="Records Affected" /></outputs><onsuccess>2631d241-e7fb-4a03-87f8-846c6443206f</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.CommandText = SQL
		cmd.Transaction = moTransaction
		Records_Affected = cmd.ExecuteNonQuery()
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="3753873b-7231-4b1f-947e-e6b87deac3d8" name="Open" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1ac9d798-c898-4a5a-8b07-f435dc0500d4</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1ac9d798-c898-4a5a-8b07-f435dc0500d4" name="Success?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>3810933f-d93a-482c-a0d8-20796ecd3049</ontrue><onfalse>dbe6faa5-9cd8-4ead-a98d-1880a84975af</onfalse></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Internal Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="clearPool" expr="[Clear Pool]" /><input type="text" name="connString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>274a1082-2d15-4bf8-84f2-043aae4e60e7</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	' If we're clearing the pool, we need a
	' connection so that we can specify the pool
	' we want to clear, so, somewhat obscenely,
	' we must create a connection if one does not
	' currently exist. Then close it immediately
	If clearPool Then
		If moConnection Is Nothing Then _
		 moConnection = New SqlConnection(connString)
		SqlConnection.ClearPool(moConnection)
	End If
	If moConnection IsNot Nothing Then
		moConnection.Close()
		moConnection.Dispose()
		moConnection = Nothing
	End If

Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="b0d71d51-0e09-4333-a7e8-e16c11d5cc2c" name="Internal Close" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2f46d078-5aeb-4c4a-a493-e807b2c7a995" name="Get Number" type="SubSheetInfo"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2d1ef6c-115c-4900-9a62-d8bac04b0b09" name="Start" type="Start"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>05b0b107-7095-4e9d-bc37-924f6b11869d</onsuccess></stage><stage stageid="3098273a-9d5f-43bd-8f67-dd5fa306c621" name="End" type="End"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Result" narrative="The numeric result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Number Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="17da1b91-9f66-4fe1-b2e3-ff423f3f827a" name="Execute Return Number" type="Code"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Result" stage="Number Result" /></outputs><onsuccess>12f14b00-5eb3-4995-afa2-e3eeeadcb5c0</onsuccess><code><![CDATA[
Result = GetScalar(Of Decimal)( _
 SQL, Success, Message)
]]></code></stage><stage stageid="05b0b107-7095-4e9d-bc37-924f6b11869d" name="Open" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4f04e547-353a-4b31-9d76-06f4a406e438</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="4f04e547-353a-4b31-9d76-06f4a406e438" name="Success?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>17da1b91-9f66-4fe1-b2e3-ff423f3f827a</ontrue><onfalse>0da291c6-e906-4852-b112-79384aafeb77</onfalse></stage><stage stageid="06bce91a-1f23-4c23-acdf-19564c453382" name="Number Result" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /></stage><stage stageid="1e9d4de5-9638-4bec-a23c-dda3f743abd2" name="Get Records Affected" type="SubSheetInfo"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bc1e722-9f5a-4ca8-becb-07c73ba5427b" name="Start" type="Start"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b</onsuccess></stage><stage stageid="5c3b4cc9-288d-4fae-b9d3-dca1f01d452c" name="End" type="End"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Records Affected" narrative="The number of records which matched the constraints specified in the SQL provided" stage="Records Affected" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="98ced6bf-c219-4b6f-8788-428ae730dffa" name="Records Affected" type="Data"><loginhibit /><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b" name="Execute" type="SubSheet"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>5c3b4cc9-288d-4fae-b9d3-dca1f01d452c</onsuccess><processid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</processid></stage><stage stageid="b302f1fb-5a49-4ea5-a4f3-1dadc0ab9051" name="Get Text" type="SubSheetInfo"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1841a582-8544-4daa-ace7-1e0e40837056" name="Start" type="Start"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>eb060128-54bc-417e-9d48-71beda3e0d4d</onsuccess></stage><stage stageid="281eca77-1f39-4ace-8815-a8145727a1e3" name="End" type="End"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The text result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Text Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9f94c434-d4c4-43a6-9393-df126ab0c0ca" name="Execute Return Text" type="Code"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Result" stage="Text Result" /></outputs><onsuccess>d689a9ea-0ae1-4208-b0ca-ece39ddd838f</onsuccess><code><![CDATA[
Result = GetScalar(Of String)( _
 SQL, Success, Message)
]]></code></stage><stage stageid="eb060128-54bc-417e-9d48-71beda3e0d4d" name="Open" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9c17dfa7-6435-4b40-a7db-533bfe76902f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9c17dfa7-6435-4b40-a7db-533bfe76902f" name="Success?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9f94c434-d4c4-43a6-9393-df126ab0c0ca</ontrue><onfalse>8e6271bb-9473-4b6c-b90d-6832537a8075</onfalse></stage><stage stageid="8fa93518-b432-4252-bf80-0a9c96171faa" name="Text Result" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Internal Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="8eebcae5-eab4-4d0d-98ac-60bb9a4f645c" name="Begin Transaction" type="SubSheetInfo"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="110c04fd-0f65-422a-ad21-bdb7db8a4a96" name="Start" type="Start"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="A transaction will be started on the currently open connection" /></postconditions><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6a763136-0514-4c6d-9dff-0a0c4a1d10e7</onsuccess></stage><stage stageid="eac4efa0-7168-4dee-a333-0923f422d458" name="Begin Transaction" type="Code"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a0610c45-e0f3-48ce-86be-2d9fe00d5faf</onsuccess><code><![CDATA[' Assume Success
Success = True
Message = ""

Try
	moTransaction = moConnection.BeginTransaction()
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="faff14a4-e148-47ec-8e4d-fc4e4bc1519d" name="Commit Transaction" type="SubSheetInfo"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-285" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dcca40c4-f5b7-4875-b4b4-1c8c50a4be99" name="Start" type="Start"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>175695ba-0b55-4490-b99a-7c5fa1e95899</onsuccess></stage><stage stageid="01c9256c-c4e8-47d0-8bce-cbb4f916399d" name="Commit Transaction" type="Code"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f26aaae6-36b1-4739-9465-1e208144a8bf</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	moTransaction.Commit()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e2cc64c2-12bd-4614-bca3-0650718ccfee" name="Rollback Transaction" type="SubSheetInfo"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-225" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="245c9f37-0f51-4fd3-aaa9-480630d4ac3f" name="Start" type="Start"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>093c958e-ad24-4cb8-bfd6-e9f7dba49311</onsuccess></stage><stage stageid="921f479a-2714-4314-b394-c5c941b281e8" name="Rollback Transaction" type="Code"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7c11fab5-28c4-48fd-b752-cbeac0598534</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	moTransaction.Rollback()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="2631d241-e7fb-4a03-87f8-846c6443206f" name="In Transaction?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>ac70463c-d9f4-44cc-8427-004224405a91</ontrue><onfalse>b0d71d51-0e09-4333-a7e8-e16c11d5cc2c</onfalse></stage><stage stageid="f3d61e3c-3094-4c38-9370-3d142d7448c1" name="In Transaction" type="Data"><loginhibit /><display x="180" y="210" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="0441a51b-0a7c-49e6-8305-4a877c32cc8a" name="In Transaction" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess><calculation expression="True" stage="In Transaction" /></stage><stage stageid="f26aaae6-36b1-4739-9465-1e208144a8bf" name="Not In Transaction" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="7c11fab5-28c4-48fd-b752-cbeac0598534" name="Not In Transaction" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="28719a2d-9d55-4414-8a91-4f3c8ce10cba" name="anchor1" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63e4c694-de67-4b39-a04c-5af3186af635</onsuccess></stage><stage stageid="269b8cc6-856b-426a-ba48-b362a98fc752" name="Internal Close" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="12f14b00-5eb3-4995-afa2-e3eeeadcb5c0" name="In Transaction?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8173e4d5-0932-4184-b3e8-01a761341966</ontrue><onfalse>269b8cc6-856b-426a-ba48-b362a98fc752</onfalse></stage><stage stageid="ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2" name="Internal Close" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="d689a9ea-0ae1-4208-b0ca-ece39ddd838f" name="In Transaction?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</ontrue><onfalse>ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2</onfalse></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="collection" name="Results" narrative="The collection of results from the query" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.Transaction = moTransaction
		cmd.CommandText = SQL

		Using adapter As New SqlDataAdapter()
			adapter.SelectCommand = cmd
			Dim ds As New DataSet()
			adapter.Fill(ds)
			Results = ds.Tables(0)
		End Using
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c0c847f-0d0a-4f0d-9c66-25a64b4c477f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1c0c847f-0d0a-4f0d-9c66-25a64b4c477f" name="Success?" type="Decision"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>897f736f-bc15-4938-9d97-b4c1065dd5e1</ontrue><onfalse>6247786f-c914-40c2-9acb-156178f5b62d</onfalse></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6247786f-c914-40c2-9acb-156178f5b62d" name="anchor2" type="Anchor"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess></stage><stage stageid="99f0a166-b905-44ab-ba9d-1fa79b71f6f6" name="Success" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="60" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e981674b-56d4-4624-8c36-d156009e2a52" name="Message" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81f3fe8-65f8-4b08-928d-1e9b3a2d8db1" name="Success" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="728d45f7-0717-4872-ab22-b9ae8a142957" name="Message" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67c3cea7-7915-4e88-9e86-a1355e251b7d" name="Success" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="345" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="71de5830-7d23-4ba9-8354-30f54dacdff4" name="Message" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="345" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d5b51384-618c-4c4a-8510-baa7b99b6e20" name="Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="150" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="29a89d90-a1e6-4a7d-8586-d40cb4c63a97" name="Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="235b42fd-91d3-4351-bef7-4e7407a29ffe" name="Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="150" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="92878142-4175-4d93-90d4-7ea4dd84f1da" name="Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b50d625f-a5cd-464b-bc26-3a94288c485e" name="Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8eeb44dd-6e76-4f9d-9988-c3638cc5916c" name="Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1938177-269a-461e-b3fa-7cb2714659a8" name="Success" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="079adbce-1d95-4720-b83f-0567741a0749" name="Message" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ac84956-cd26-456e-a622-6b3426601f4a" name="Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c40edd8e-a34c-49ad-ad39-9025a0f9b946" name="Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34a8e2f0-1a6b-4bdc-b2d2-46fed237de50" name="Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f2ebc91f-7722-42d3-907c-6bf37b0cd1e7" name="Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20e595a2-0799-4731-b244-c3cf6be8d791" name="Success" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="97efd2f3-8f58-454f-b7ef-db9e6bef8aea" name="Message" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95a4ec5c-e0ae-43f8-958e-c44907def3f0" name="Get CSV File" type="SubSheetInfo"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="518048a9-d28c-48bd-889f-30dab7f502e0" name="Start" type="Start"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="text" name="File" narrative="The full path of the file to which the CSV result should be written" stage="File" /></inputs><onsuccess>8d11deee-1ae6-42be-8726-53fb6cc7e117</onsuccess></stage><stage stageid="f82dbcac-aaf6-4e85-ada7-e7f28d96bb97" name="End" type="End"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9af3a6f4-53d9-4e14-9e1e-9c161160fec6" name="Get File" type="Code"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="text" name="File" expr="[File]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StreamWriter(File, False)
		WriteCsv(SQL, sw)
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="8d11deee-1ae6-42be-8726-53fb6cc7e117" name="Open" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be5bca8d-64c2-4521-a293-b1a736a543bf</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="be5bca8d-64c2-4521-a293-b1a736a543bf" name="Success?" type="Decision"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9af3a6f4-53d9-4e14-9e1e-9c161160fec6</ontrue><onfalse>8ee4a00c-f248-4c89-8c4b-4b86cb50ad50</onfalse></stage><stage stageid="8ee4a00c-f248-4c89-8c4b-4b86cb50ad50" name="anchor2" type="Anchor"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess></stage><stage stageid="47d47b05-34f0-49f6-b703-f594ecee8108" name="Success" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c26f4e3a-832a-4e80-a4b5-cf864ee7abb4" name="Message" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb45052-f59c-4af2-866e-d7973096bc2a" name="File" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d3515fc-4af8-451d-96e6-cc2d4c6808c7" name="Get CSV" type="SubSheetInfo"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="70f8039e-4af2-4364-b7d2-483c6d3260a4" name="Start" type="Start"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>e1bfc556-cb0c-49cf-8cfd-2767e9516e59</onsuccess></stage><stage stageid="029dc82b-e289-4579-8a43-d8b9c93158be" name="End" type="End"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="text" name="CSV" narrative="The CSV output from the query" stage="CSV" /></outputs></stage><stage stageid="584fab2b-6e03-4169-8b6f-2032ad3893b3" name="Get CSV" type="Code"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="CSV" stage="CSV" /></outputs><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StringWriter()
		WriteCsv(SQL, sw)
		CSV = sw.ToString()
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e1bfc556-cb0c-49cf-8cfd-2767e9516e59" name="Open" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0288c100-557c-4271-8753-82f7651c876c</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="0288c100-557c-4271-8753-82f7651c876c" name="Success?" type="Decision"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>584fab2b-6e03-4169-8b6f-2032ad3893b3</ontrue><onfalse>1303eb98-48c5-438c-aa5a-54fe90868c4f</onfalse></stage><stage stageid="1303eb98-48c5-438c-aa5a-54fe90868c4f" name="anchor2" type="Anchor"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess></stage><stage stageid="233b888b-7601-4969-8205-7513d73f088d" name="Success" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5723f6bf-aa06-451d-a08a-e92cdfdf9013" name="Message" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1458d90-c2cf-4c78-879a-d30165d35480" name="CSV" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="User Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the user is not set than this must be LAN connection</narrative><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[User]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;;Trusted_Connection=Yes&quot;" stage="Connection String" /></stage><stage stageid="68cc3f0e-e762-450c-921f-2cfbccedfead" name="Close Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="195" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5b2f24bf-84b2-4292-8cb3-df7286ec6cee" name="Close Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8365b22c-f9dd-44ac-9bdf-968ef941b1b7" name="Close Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a546aa36-ad70-4a81-9648-1de977e52ea0" name="Close Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e75dc2f8-ea07-48f4-b2a7-245ca2da63bd" name="Close Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4049cd6d-bffc-4414-abba-d9c2c426354a" name="Close Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c16520e0-e8d3-41c0-ae96-6254e954bc1a" name="In A Transaction?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>e52851c8-abcd-46d9-b76a-921773c5cbb4</ontrue><onfalse>f185afb3-9c52-4c13-81d3-55a11480cf64</onfalse></stage><stage stageid="e52851c8-abcd-46d9-b76a-921773c5cbb4" name="Rollback Transaction" type="SubSheet"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess><processid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</processid></stage><stage stageid="f185afb3-9c52-4c13-81d3-55a11480cf64" name="anchor3" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="-105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>384bb280-cd20-4a3c-b8b0-9a97e61f7010</onsuccess></stage><stage stageid="384bb280-cd20-4a3c-b8b0-9a97e61f7010" name="anchor4" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="15" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="20f109d0-a273-44a5-b964-b45248511186" name="Is Open" type="SubSheetInfo"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc3b1970-2275-44bb-8cfd-176166531993" name="Start" type="Start"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>42ae3b51-badc-419e-9609-b0ce24dc7fe3</onsuccess></stage><stage stageid="8992da0e-f17e-401d-81a4-cf0dbeaf3af1" name="End" type="End"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="IsOpen" /></outputs></stage><stage stageid="42ae3b51-badc-419e-9609-b0ce24dc7fe3" name="Check Connection" type="Code"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="IsOpen" stage="IsOpen" /></outputs><onsuccess>8992da0e-f17e-401d-81a4-cf0dbeaf3af1</onsuccess><code><![CDATA[IsOpen = ( _
  moConnection IsNot Nothing AndAlso _
  moConnection.State = ConnectionState.Open _
)]]></code></stage><stage stageid="aafe4270-a6b3-4607-878e-86975da9c5cf" name="IsOpen" type="Data"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a7585ee-e2b5-4c76-893e-f1c483a97130" name="Is Open?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Is Open]" /><ontrue>a06c1db3-79bd-492a-8c88-aca6b858c053</ontrue><onfalse>9eb59433-0a23-4cdd-bd25-7ae10e31947e</onfalse></stage><stage stageid="330a716e-6d2d-495c-9921-2660dfeb6210" name="Is Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="Is Open" /></outputs><onsuccess>0a7585ee-e2b5-4c76-893e-f1c483a97130</onsuccess><processid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</processid></stage><stage stageid="2a427672-1805-4178-8c75-5c94c4b82f09" name="Is Open" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a06c1db3-79bd-492a-8c88-aca6b858c053" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="-45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6ff75f66-de9a-4114-98e6-f985272a313b</onsuccess></stage><stage stageid="6ff75f66-de9a-4114-98e6-f985272a313b" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eac4efa0-7168-4dee-a333-0923f422d458</onsuccess></stage><stage stageid="9eb59433-0a23-4cdd-bd25-7ae10e31947e" name="Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9a9f6e74-7cd8-4580-af73-041602ccba94</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9a9f6e74-7cd8-4580-af73-041602ccba94" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>eac4efa0-7168-4dee-a333-0923f422d458</ontrue><onfalse>62fbd57b-30bc-4365-9fcb-62860030332f</onfalse></stage><stage stageid="62fbd57b-30bc-4365-9fcb-62860030332f" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>52f9aedd-8666-495d-a007-ef3c02028ee7</onsuccess></stage><stage stageid="c0d90f91-927f-45e0-84a0-0d6b4e823f6c" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="135" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess></stage><stage stageid="175695ba-0b55-4490-b99a-7c5fa1e95899" name="In Transaction?" type="Decision"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>01c9256c-c4e8-47d0-8bce-cbb4f916399d</ontrue><onfalse>7b32c515-605e-41e1-ae0c-9ad7c7ee6dab</onfalse></stage><stage stageid="7b32c515-605e-41e1-ae0c-9ad7c7ee6dab" name="Error Message" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c20b6f48-8689-4164-9435-7d9f6f5f2aa7</onsuccess><calculation expression="&quot;There is no open transaction to commit&quot;" stage="Message" /></stage><stage stageid="c20b6f48-8689-4164-9435-7d9f6f5f2aa7" name="anchor7" type="Anchor"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess></stage><stage stageid="093c958e-ad24-4cb8-bfd6-e9f7dba49311" name="In Transaction?" type="Decision"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>921f479a-2714-4314-b394-c5c941b281e8</ontrue><onfalse>d5c94e05-a642-4107-b7b6-15ce461428e7</onfalse></stage><stage stageid="d5c94e05-a642-4107-b7b6-15ce461428e7" name="Error Message" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ae90029d-81d2-4ae3-b27a-f7a302533401</onsuccess><calculation expression="&quot;There is no open transaction to rollback&quot;" stage="Message" /></stage><stage stageid="6cc92a8f-1561-462a-8eaf-bbd32e32a936" name="Internal Close" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="10757947-9682-4dcb-b789-93777cb333b1" name="Close Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="150" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b41ab6-a52b-45ff-874e-ffece3292e4b" name="Close Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="150" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae90029d-81d2-4ae3-b27a-f7a302533401" name="anchor7" type="Anchor"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess></stage><stage stageid="876d7128-a56d-4c53-8fde-3713a1c173f5" name="Internal Close" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>375d6173-3de9-4f72-bee6-b4ff132e1287</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2e2a27c5-d63d-44b0-b693-e673844e664e" name="Close Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e5cc1d8-b2a7-45b7-a8eb-7dbedcfb4f2b" name="Close Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="135" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e652ce3f-f9fc-414a-9006-2616854cb925" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" stage="Clear Pool" /></inputs><onsuccess>8c118cde-3b9a-4ed9-861d-f48b007e1200</onsuccess></stage><stage stageid="382d3006-4861-4bfe-a57e-3f65fbce6c2c" name="Clear Pool" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="96ed6cdf-d202-4b37-b3e4-ae598756fb96" name="Close" type="SubSheetInfo"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30b5ba60-22d3-4fe6-9e92-9269372d1a6c" name="Start" type="Start"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>25dfab67-8902-4f2a-8a18-a776aead1331</onsuccess></stage><stage stageid="25dfab67-8902-4f2a-8a18-a776aead1331" name="Internal Close" type="SubSheet"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>042dd86c-3c68-4015-83b1-dcf5b036fc90</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="6c042b25-556f-4563-9663-c41aecc77a31" name="Success" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d7e2ef-771a-4001-922b-fd1f3881328f" name="Message" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="75" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a763136-0514-4c6d-9dff-0a0c4a1d10e7" name="In Transaction?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>32130444-6454-4780-80fd-2b005ed696a4</ontrue><onfalse>330a716e-6d2d-495c-9921-2660dfeb6210</onfalse></stage><stage stageid="32130444-6454-4780-80fd-2b005ed696a4" name="Transaction Already Open Error" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62fbd57b-30bc-4365-9fcb-62860030332f</onsuccess><calculation expression="&quot;A transaction is already open in this connection&quot;" stage="Message" /></stage><stage stageid="c8303f15-a646-4677-8a63-2f0904ef1815" name="Close Success" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="17c8449f-6f6b-4cba-a705-ce95ef3e49e0" name="Close Message" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba273a3e-4b65-4f6b-8ec6-6676a2bede70" name="Configure" type="SubSheetInfo"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b1167043-5e4b-4cbf-bfdc-347fcdc34981" name="End" type="End"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce5d2c13-15b8-4abc-99e1-0c32e44cc795" name="Raise exception on any failure" type="Data"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="23fa0822-2b63-4407-87f4-9b37ce869e58" name="Start" type="Start"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>b1167043-5e4b-4cbf-bfdc-347fcdc34981</onsuccess></stage><stage stageid="0b2ebe92-b578-4aa3-b255-b75a73c135d8" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0ef42cb2-e5a9-47c2-9845-2471b9f41643" name="Start" type="Start"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>9a7620f2-75fe-4415-a778-45b839268e52</onsuccess></stage><stage stageid="5e8228c7-ac43-4b93-986b-e5fb23a3e572" name="End" type="End"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9a7620f2-75fe-4415-a778-45b839268e52" name="Should Raise Exception?" type="Decision"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>c161d6a7-6f02-4f29-8c41-2d93471ae952</ontrue><onfalse>5e8228c7-ac43-4b93-986b-e5fb23a3e572</onfalse></stage><stage stageid="c161d6a7-6f02-4f29-8c41-2d93471ae952" name="FAIL" type="Exception"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="30" y="-90" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="1c7fc106-01f3-4a2a-aa7e-44c44875fb04" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="5705d9af-28ea-4c05-832b-4f40d34a3511" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>dd554ab9-61de-4d37-bee5-c25e1a5c74f1</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="a0610c45-e0f3-48ce-86be-2d9fe00d5faf" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>0441a51b-0a7c-49e6-8305-4a877c32cc8a</ontrue><onfalse>52f9aedd-8666-495d-a007-ef3c02028ee7</onfalse></stage><stage stageid="52f9aedd-8666-495d-a007-ef3c02028ee7" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c0d90f91-927f-45e0-84a0-0d6b4e823f6c</onsuccess></stage><stage stageid="63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>9ccac2c0-2efd-4399-8d02-c71ac4d7e812</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="375d6173-3de9-4f72-bee6-b4ff132e1287" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>b17027f1-8559-430b-9f36-724b3097e487</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="dbe6faa5-9cd8-4ead-a98d-1880a84975af" name="anchor8" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess></stage><stage stageid="ac70463c-d9f4-44cc-8427-004224405a91" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7906b7ac-88bd-4971-991d-46bf74ab7207</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="63e4c694-de67-4b39-a04c-5af3186af635" name="anchor9" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ac70463c-d9f4-44cc-8427-004224405a91</onsuccess></stage><stage stageid="8173e4d5-0932-4184-b3e8-01a761341966" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3098273a-9d5f-43bd-8f67-dd5fa306c621</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="0da291c6-e906-4852-b112-79384aafeb77" name="anchor10" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess></stage><stage stageid="047bee83-bd7d-43b1-aeb3-6f4183c42c63" name="anchor11" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b565deea-e08d-4195-b081-ab4f2eaad4ad</onsuccess></stage><stage stageid="b565deea-e08d-4195-b081-ab4f2eaad4ad" name="anchor12" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8173e4d5-0932-4184-b3e8-01a761341966</onsuccess></stage><stage stageid="8e6271bb-9473-4b6c-b90d-6832537a8075" name="anchor13" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess></stage><stage stageid="61bf908d-c640-41f1-921e-fbac0bc44b57" name="anchor14" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63cca0a5-90a1-4eb5-9daa-65633aa5c6d3</onsuccess></stage><stage stageid="63cca0a5-90a1-4eb5-9daa-65633aa5c6d3" name="anchor15" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</onsuccess></stage><stage stageid="8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>281eca77-1f39-4ace-8815-a8145727a1e3</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="ab15b6c7-3e1d-417a-9750-8ca92fb7924e" name="Note1" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Note that we don't throw an exception here even if a failure is encountered - this is probably being called as part of a wider action, and the caller has the context with which to decide where the exception should be raised.</narrative><display x="-195" y="75" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="7dc1a88f-716e-4f2b-80dd-dd6306d6db07" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>f82dbcac-aaf6-4e85-ada7-e7f28d96bb97</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="69fcc128-f010-4628-a2ca-291756ca05b9" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>029dc82b-e289-4579-8a43-d8b9c93158be</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="470e696c-742e-49d7-9421-f2a1544972f9" name="Success" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4576bffa-323c-45f4-9233-9905d56e85ee" name="Error Message" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95b31d93-f94b-416b-84da-6fe8337d8feb" name="Closing" type="Data"><loginhibit /><narrative>Flag indicating that the connection wrapped by this VBO is currently in the process of closing</narrative><display x="180" y="255" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e85c42a3-de4b-461c-8b38-c5f6f44cd4ce" name="Closing:=True" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c16520e0-e8d3-41c0-ae96-6254e954bc1a</onsuccess><calculation expression="True" stage="Closing" /></stage><stage stageid="8c118cde-3b9a-4ed9-861d-f48b007e1200" name="Already Closing?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Closing]" /><ontrue>34659a52-f242-427f-988d-763542f1f33f</ontrue><onfalse>e85c42a3-de4b-461c-8b38-c5f6f44cd4ce</onfalse></stage><stage stageid="34659a52-f242-427f-988d-763542f1f33f" name="Note2" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Ensure that we're not being called by 'Rollback' which was called by this action - infinite loops are bad.</narrative><display x="150" y="-195" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>adf47186-7a7b-4396-b1cb-e994400f72c9</onsuccess></stage><stage stageid="adf47186-7a7b-4396-b1cb-e994400f72c9" name="anchor16" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="150" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="274a1082-2d15-4bf8-84f2-043aae4e60e7" name="Closing:=False" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess><calculation expression="False" stage="Closing" /></stage><stage stageid="56def720-71ec-4d7b-9e58-17b4f23dc6fc" name=" " type="Block"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-60" y="-75" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="aa70afba-b9df-48a6-a0c2-beb7fa5cdc82" name="Ignore" type="Recover"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>92889732-12eb-4041-ac27-8a9a20af1cf5</onsuccess></stage><stage stageid="92889732-12eb-4041-ac27-8a9a20af1cf5" name=" " type="Resume"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ca5361-bb0f-4f18-9c74-7d5d09f239dd" name="SQL" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3616b67e-fe87-422b-b9ea-6180525fddc3" name="SQL" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="46a7daee-e5e4-441f-92fc-39a696518e79" name="SQL" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d6948f-3783-4b3f-afa7-bef3378cafc3" name="SQL" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae6e30b2-099e-4fd8-9481-75eeccea424a" name="SQL" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540222b0-7793-476e-a330-59f84b93108c" name="SQL" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66c19ef6-3007-4fa0-af27-b52892a9671c" name="Connection String already set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Connection String] &lt;&gt; &quot;&quot;" /><ontrue>5d9aed4f-c61b-40dc-9104-e0720a324d22</ontrue><onfalse>cb1901f1-02a7-4e86-8618-cef7a98b283f</onfalse></stage><stage stageid="90d7c944-c618-41dd-bfe2-5da022f3353a" name="Internal Close" type="SubSheet"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>cb1901f1-02a7-4e86-8618-cef7a98b283f</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="5d9aed4f-c61b-40dc-9104-e0720a324d22" name="Note3" type="Note"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Close and clear the connection pool</narrative><display x="150" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>90d7c944-c618-41dd-bfe2-5da022f3353a</onsuccess></stage><stage stageid="fbf49160-dd35-4922-a2f3-6b17985bfb74" name="Close Success" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81af5a5-7d4a-4f5d-b914-0b008c1273ec" name="Close Message" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb1901f1-02a7-4e86-8618-cef7a98b283f" name="anchor17" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f4ca0da-93ad-492e-af65-ff637c54b37a</onsuccess></stage><stage stageid="042dd86c-3c68-4015-83b1-dcf5b036fc90" name="End" type="End"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="8fcd4c90-9846-476a-a7f4-05a7edc6e62b" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="dd554ab9-61de-4d37-bee5-c25e1a5c74f1" name="End" type="End"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9ccac2c0-2efd-4399-8d02-c71ac4d7e812" name="End" type="End"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="b17027f1-8559-430b-9f36-724b3097e487" name="End" type="End"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="7906b7ac-88bd-4971-991d-46bf74ab7207" name="End" type="End"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage></process></object>
        <object id="8bcc376a-0921-4521-a469-9058197cef1d" name="Decipher" xmlns="http://www.blueprism.co.uk/product/process"><process name="Decipher" version="1.0" bpversion="6.7.0.20116" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>019b9852-e010-43f9-b83d-37b10c47f94c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e5768b66-df0d-4fb0-9ec5-15a5cece1bdb" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c7708976-9751-4268-91ce-03b57e31cdaa" type="Normal" published="True"><name>Get Batch Metadata</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="360beb0f-12f9-48a0-981b-c030a6605bb6" type="Normal" published="True"><name>Set Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b9abcf65-9322-4c23-a136-34928801fbb8" type="Normal" published="True"><name>Login</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b" type="Normal" published="True"><name>Get Document Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9360b5f9-ba33-4e45-985e-2d57169b6f4e" type="Normal" published="True"><name>Create Batch</name><view><camerax>-193</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ff46900a-cd75-466d-bf7c-769c2f1330e4" type="Normal" published="True"><name>Create Classification Training Batch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a4d02fd1-b7b0-4186-9a9e-902c30c72735" type="Normal" published="True"><name>Add File to Batch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6eb31d9-d29b-410c-b361-3c8f59687f07" type="Normal" published="True"><name>Submit Batch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b35f2338-2852-491e-a9f6-ea9d0b680dfc" type="Normal" published="True"><name>Get Next Completed Batch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6e2963e-3ea4-4443-bed5-b58645b4ba0f" type="Normal" published="True"><name>Add Batch Metadata</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="786de555-827a-4eac-b816-ebf156a2174e" type="Normal" published="True"><name>Has Batches To Verify</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fce2561e-664d-47e9-9d43-d43280e6170e" type="Normal" published="True"><name>Remove Batch Metadata</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="c7113f07-0a04-4afe-a7fc-43fc748221b7" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>ce014b92-dac1-4edf-b4b9-52fbcf15b012</onsuccess></stage><stage stageid="ce014b92-dac1-4edf-b4b9-52fbcf15b012" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="8f4fd430-ba53-4a12-87f1-8a5363be06b8" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.IO.dll</reference><reference>BluePrism.Decipher.VBO.Interop.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>BluePrism.Decipher.VBO.Interop</import><import>System.IO</import><import>BluePrism.Decipher.VBO.Interop.Utilities</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[DecipherConnection Connection;

public enum ValidFileTypes
{
	bmp,
	jpg,
	jpeg,
	jpe,
	png,
	tif,
	tiff,
	pdf
}

public bool GetHasValidFileType(string userFileType)
{
	var validFileTypes = Enum.GetNames(typeof(ValidFileTypes));
	foreach(var fileType in validFileTypes)
	{
		if(string.Equals(userFileType, fileType, StringComparison.OrdinalIgnoreCase))
			return true;
	}
	
	return false;
}]]></code></stage><stage stageid="5a415833-08e3-4017-92d4-589a86cf5556" name="Clean Up" type="SubSheetInfo"><subsheetid>e5768b66-df0d-4fb0-9ec5-15a5cece1bdb</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2d260e04-8aa4-40bf-ab41-c960e8c37c1b" name="Start" type="Start"><subsheetid>e5768b66-df0d-4fb0-9ec5-15a5cece1bdb</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d0431526-a70f-47c9-8005-d7adb0c7490a</onsuccess></stage><stage stageid="d0431526-a70f-47c9-8005-d7adb0c7490a" name="End" type="End"><subsheetid>e5768b66-df0d-4fb0-9ec5-15a5cece1bdb</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="9aadff32-1d99-4c67-ad36-18d678d3036d" name="Note1" type="Note"><subsheetid>e5768b66-df0d-4fb0-9ec5-15a5cece1bdb</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="77619194-65ff-4543-bbf9-1b5338e3b853" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="b915697a-214f-4897-80f0-02ff74744814" name="Set Up" type="SubSheetInfo"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><narrative>Prepares the Decipher VBO to communicate with Decipher</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="890b26ab-8074-47e1-a280-2c94cf4782e5" name="Start" type="Start"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Decipher Server Endpoint" narrative="The Decipher Server Endpoint that this VBO will use for communication" stage="DecipherServerEndpoint" /><input type="number" name="Decipher Server Port Number" narrative="The Decipher Server Port Number" stage="DecipherServerPortNumber" /><input type="text" name="Message Queue Hostname" narrative="The Hostname for the Message Queue" stage="MqHostname" /><input type="number" name="Message Queue Port Number" narrative="The Port number for the Message Queue" stage="MqPort" /><input type="text" name="Message Queue Username" narrative="The Username to be used for authenticating to the Message Queue" stage="MqUsername" /><input type="password" name="Message Queue Password" narrative="The Password to be used for authenticating to the Message Queue" stage="MqPassword" /><input type="flag" name="obfuscateFileName" narrative="Whether files names have to be masked" stage="obfuscateFileName" /></inputs><onsuccess>cc02272f-9589-48bd-b486-39eb60726d57</onsuccess></stage><stage stageid="7c4156fd-4118-4d79-9388-f0954902f91e" name="End" type="End"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="cc02272f-9589-48bd-b486-39eb60726d57" name="ValidateInputs" type="Code"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="text" name="DecipherServerEndpoint" expr="[DecipherServerEndpoint]" /><input type="number" name="DecipherServerPortNumber" expr="[DecipherServerPortNumber]" /><input type="text" name="MqHostname" expr="[MqHostname]" /><input type="number" name="MqPort" expr="[MqPort]" /><input type="text" name="MqUsername" expr="[MqUsername]" /><input type="password" name="MqPassword" expr="[MqPassword]" /><input type="flag" name="obfuscateFileName" expr="[obfuscateFileName]" /></inputs><onsuccess>7c4156fd-4118-4d79-9388-f0954902f91e</onsuccess><code><![CDATA[if(String.IsNullOrEmpty(DecipherServerEndpoint)){
	throw new ArgumentException("DecipherServerEndpoint has not been supplied");
}

if ((int) DecipherServerPortNumber == default(int)){
	throw new ArgumentException("DecipherServerPortNumber has not been supplied");
}

if (string.IsNullOrWhiteSpace(MqHostname)) {
	throw new ArgumentException("Message Queue Hostname has not been supplied");
}

if ((int) MqPort == default(int)){
	throw new ArgumentException("Message Queue Port Number has not been supplied");
}

if (string.IsNullOrWhiteSpace(MqUsername)) {
	throw new ArgumentException("Message Queue Username has not been supplied");
}

if (string.IsNullOrWhiteSpace(MqPassword)) {
	throw new ArgumentException("Message Queue Password has not been supplied");
}

var messageQueueConfig = new MessageQueueConfiguration(MqHostname, (int) MqPort, MqUsername, SecureStringHelper.ToSecureString(MqPassword));

Connection = new DecipherConnection(DecipherServerEndpoint, (int) DecipherServerPortNumber, messageQueueConfig, new SessionFactory(), obfuscateFileName);]]></code></stage><stage stageid="906e84e3-5921-452c-94cd-8e306810c9a1" name="Add File to Batch" type="SubSheetInfo"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><narrative>Adds a file to a batch which has not yet been submitted for processing</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4d713257-d8ae-4399-b73e-fe4f931e6bb2" name="Start" type="Start"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Batch ID" narrative="The ID of the batch to add the file to" stage="Batch ID" /><input type="text" name="File Path" narrative="The path to the file to add" stage="File Path" /></inputs><onsuccess>b4fbf4a4-b933-45d4-adf5-512fe2e1f100</onsuccess></stage><stage stageid="c0150704-1156-42e2-9e80-24a0d47b7bd7" name="End" type="End"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="0b8de472-69a5-465c-a906-6a977b409230" name="Batch ID" type="Data"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1894731-6082-4896-bcec-c7662ae03676" name="File Path" type="Data"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6678055-5c54-4734-a669-469b9ff65fb0" name="Login" type="SubSheetInfo"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><narrative>Logs in the robot with the provided credentials</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d88894fd-b471-457e-bea7-f5b3f275c6aa" name="Start" type="Start"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Username" narrative="The Decipher account username" stage="Username" /><input type="password" name="Password" narrative="The Decipher account password" stage="Password" /></inputs><onsuccess>beb00c2b-dd4b-48de-8567-7147ac3d7b7c</onsuccess></stage><stage stageid="1081a0dd-0663-4247-b38e-799e84afd158" name="End" type="End"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4fa73773-de07-43ac-8636-a61a80b9e951" name="Username" type="Data"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d992140e-c1f3-4aef-a936-e7c2475e91a1" name="Password" type="Data"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><display x="150" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="beb00c2b-dd4b-48de-8567-7147ac3d7b7c" name="Login" type="Code"><subsheetid>b9abcf65-9322-4c23-a136-34928801fbb8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="password" name="Password" expr="[Password]" /></inputs><onsuccess>1081a0dd-0663-4247-b38e-799e84afd158</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

if(string.IsNullOrWhiteSpace(Username)) {
	throw new ArgumentException("Please enter in a username");
}

if(string.IsNullOrWhiteSpace(Password)) {
	throw new ArgumentException("Please enter in a password");
}

Connection.Login(Username, SecureStringHelper.ToSecureString(Password));]]></code></stage><stage stageid="b4fbf4a4-b933-45d4-adf5-512fe2e1f100" name="Add File to Batch" type="Code"><subsheetid>a4d02fd1-b7b0-4186-9a9e-902c30c72735</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="BatchId" expr="[Batch ID]" /><input type="text" name="FilePath" expr="[File Path]" /></inputs><onsuccess>c0150704-1156-42e2-9e80-24a0d47b7bd7</onsuccess><code><![CDATA[if(Connection == null){
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");
}

if(string.IsNullOrWhiteSpace(BatchId)) {
	throw new ArgumentException("Please enter a Batch ID");
}

if(string.IsNullOrWhiteSpace(FilePath)) {
	throw new ArgumentException("Please enter a file path of the image for the batch");
}

try {
	var fileType = Path.GetExtension(FilePath).TrimStart('.');
	var hasValidFileType = GetHasValidFileType(fileType);
	if(!hasValidFileType)
		throw new Exception("Please check that that the file is a valid image file.");
	
	Connection.AddFileToBatch(Guid.Parse(BatchId), FilePath, new FileHandler(), new PathHandler());
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable add file to batch: " + ex.Message, ex);
}]]></code></stage><stage stageid="53f1015e-4ec7-4252-ab9e-ec56e428de57" name="Create Batch" type="SubSheetInfo"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><narrative>Creates a new document batch ready for documents to be uploaded to</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="18115599-d2a0-4a47-9d86-e3b5e535a9e9" name="Start" type="Start"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Name" narrative="The batch name" stage="Name" /><input type="text" name="Description" narrative="The batch description" stage="Description" /><input type="text" name="Batch Type Name" narrative="The name of the batch type to use for this batch" stage="Batch Type Name" /><input type="text" name="Queue Suffix" narrative="The identifier for the queue to notify on batch completion" stage="Return Queue Suffix" /><input type="flag" name="Split Document Into Single Pages" narrative="Flag to enable splitting documents within a batch to single page documents" stage="Split To Single Pages" /></inputs><onsuccess>c718dc36-3fc8-4d46-a21a-7bc96ecc876c</onsuccess></stage><stage stageid="da822323-bfc5-4dea-bdda-17c3b1c68648" name="End" type="End"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Batch ID" narrative="The ID of the created batch" stage="Batch ID" /></outputs></stage><stage stageid="c718dc36-3fc8-4d46-a21a-7bc96ecc876c" name="Create Batch" type="Code"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Name" expr="[Name]" /><input type="text" name="Description" expr="[Description]" /><input type="text" name="BatchTypeName" expr="[Batch Type Name]" /><input type="text" name="ReturnQueueSuffix" expr="[Return Queue Suffix]" /><input type="flag" name="SplitDocumentsIntoSinglePages" expr="[Split To Single Pages]" /></inputs><outputs><output type="text" name="BatchId" stage="Batch ID" /></outputs><onsuccess>da822323-bfc5-4dea-bdda-17c3b1c68648</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

try {
	BatchId = Connection.CreateStandardBatch(BatchTypeName, Name, Description, ReturnQueueSuffix, new RabbitMqQueueFactory(), new RabbitMqConnectionFactory(), SplitDocumentsIntoSinglePages).ToString();
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to create batch: " + ex.Message, ex);
}]]></code></stage><stage stageid="17619a07-8a56-4a12-8808-bdaf13b90255" name="Name" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><narrative>The name for the batch</narrative><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76d44ad0-ec0e-4d45-976f-9661b47ae06b" name="Description" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><narrative>A description for the batch</narrative><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7541e141-65b5-4a7b-bf22-87e5e0beac8d" name="Batch Type Name" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><narrative>The name of the batch type to use for this batch</narrative><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de0e1d9a-889d-4aa8-adfb-490d7e7cf8c6" name="Batch ID" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8918d51f-67b7-4251-a76a-127a5d4a075a" name="DecipherServerEndpoint" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fefba86c-96cc-40fe-b76d-2ff6b26d3d7d" name="DecipherServerPortNumber" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="150" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27a7f1ab-8abb-4b73-b1c0-d779fc7000d8" name="Get Next Completed Batch" type="SubSheetInfo"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><narrative>Gets the next completed batch if one is available</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="502c9eee-a6f6-4aac-948c-0453b78181ad" name="Start" type="Start"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Queue Suffix" narrative="The queue suffix to retrieve the next batch from" stage="Queue Name" /></inputs><onsuccess>c83bb81e-9932-4ecc-8618-508e786879c4</onsuccess></stage><stage stageid="3cf54349-10b4-469d-8475-64ac84be182f" name="End" type="End"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Batch ID" narrative="The ID of the batch retrieved" stage="Batch ID" /><output type="collection" name="Documents" narrative="The IDs of the documents in the batch" stage="Documents" /><output type="flag" name="Batch Available" narrative="True if a batch was retrieved; otherwise, false" stage="Batch Available" /></outputs></stage><stage stageid="5f3c2627-dfcf-4008-a626-cf89e63aaa3f" name="Queue Name" type="Data"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83bb81e-9932-4ecc-8618-508e786879c4" name="Get Next Completed Batch" type="Code"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="QueueName" expr="[Queue Name]" /></inputs><outputs><output type="flag" name="BatchAvailable" stage="Batch Available" /><output type="text" name="BatchId" stage="Batch ID" /><output type="collection" name="Documents" stage="Documents" /></outputs><onsuccess>3cf54349-10b4-469d-8475-64ac84be182f</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

try {
	var nextBatch = Connection.GetNextCompletedBatch(QueueName, new RabbitMqConnectionFactory());

	if(nextBatch != null)
	{
		BatchAvailable = true;
		BatchId = nextBatch.BatchId.ToString();
		Documents = nextBatch.DocumentIds;
	}
	else
	{
		BatchId = null;
		Documents = null;
		BatchAvailable = false;
	}
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to get next completed batch: " + ex.Message, ex);
}]]></code></stage><stage stageid="406c9922-c9a7-4f8a-9ae6-3fe4c6dfe23d" name="Batch ID" type="Data"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><display x="150" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c14bef1b-b9ff-4fa1-9af1-748fdd089315" name="Submit Batch" type="SubSheetInfo"><subsheetid>b6eb31d9-d29b-410c-b361-3c8f59687f07</subsheetid><narrative>Submit batch to Decipher for processing</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1d2e2f14-0fa9-4202-94d5-f22f49b293f2" name="Start" type="Start"><subsheetid>b6eb31d9-d29b-410c-b361-3c8f59687f07</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Batch ID" narrative="The batch identifier" stage="Batch ID" /></inputs><onsuccess>cf819c4a-5703-4f47-b309-ce8f7d8e7dc0</onsuccess></stage><stage stageid="70916964-8592-4d95-bbc9-7098f8177f7c" name="End" type="End"><subsheetid>b6eb31d9-d29b-410c-b361-3c8f59687f07</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="cf819c4a-5703-4f47-b309-ce8f7d8e7dc0" name="Submit Batch" type="Code"><subsheetid>b6eb31d9-d29b-410c-b361-3c8f59687f07</subsheetid><loginhibit /><narrative>Code to execute submitting a batch to Decipher for processing</narrative><display x="15" y="-15" /><inputs><input type="text" name="BatchId" expr="[Batch ID]" /></inputs><onsuccess>70916964-8592-4d95-bbc9-7098f8177f7c</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

if(string.IsNullOrWhiteSpace(BatchId)) {
	throw new ArgumentException("Please enter a Batch ID");
}

try {
	Connection.SubmitBatch(Guid.Parse(BatchId));
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to submit batch: " + ex.Message, ex);
}]]></code></stage><stage stageid="01799eb1-0ee6-42fe-9145-cf154c051a95" name="Batch ID" type="Data"><subsheetid>b6eb31d9-d29b-410c-b361-3c8f59687f07</subsheetid><narrative>The batch identifier</narrative><display x="120" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f188b159-0ccf-4985-856f-b0050305c88b" name="Documents" type="Collection"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><display x="210" y="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ade75b32-31fc-46f9-a1ee-7ed709f6bb49" name="Batch Available" type="Data"><subsheetid>b35f2338-2852-491e-a9f6-ea9d0b680dfc</subsheetid><display x="90" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd6c7b06-a18b-4ddc-b67e-1251cea755b9" name="Return Queue Suffix" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><loginhibit /><narrative>The identifier for the queue to notify on batch completion</narrative><display x="270" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="63be8954-4764-4e04-b139-db3c8e589f1f" name="Get Document Data" type="SubSheetInfo"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><narrative>Retrieves document data for a document that has been processed</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d1c550f5-ca68-4ec8-b79e-2263b14f4714" name="Start" type="Start"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Document ID" narrative="The ID of the document to get the data for" stage="Document ID" /></inputs><onsuccess>6a60aa3c-cc7b-48a0-a91b-b8e2d3a92fc0</onsuccess></stage><stage stageid="311f82d1-74cf-445e-a38c-13ca497e0787" name="End" type="End"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Document Data" narrative="The retrieved document data" stage="DocumentData" /></outputs></stage><stage stageid="6a60aa3c-cc7b-48a0-a91b-b8e2d3a92fc0" name="Get Document Data" type="Code"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="DocumentId" expr="[Document ID]" /></inputs><outputs><output type="collection" name="DocumentData" stage="DocumentData" /></outputs><onsuccess>311f82d1-74cf-445e-a38c-13ca497e0787</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

try {
	DocumentData = Connection.GetDocumentData(Guid.Parse(DocumentId));
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to get document data: " + ex.Message, ex);
}
]]></code></stage><stage stageid="4cc67bca-a094-4704-a682-dc4457ce618d" name="Document ID" type="Data"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="23e14d14-7b24-456b-8ffa-95eea510467d" name="DocumentData" type="Collection"><subsheetid>0f0dbbcf-96a8-4575-bf6c-05f39ac3f91b</subsheetid><display x="90" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17e1b534-d26f-4752-a7ff-a49879cabdec" name="Has Batches To Verify" type="SubSheetInfo"><subsheetid>786de555-827a-4eac-b816-ebf156a2174e</subsheetid><narrative>Determines whether there are batches to verify within Decipher. Returns True if there is at least one batch to verify.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="57c062b5-a7ba-4cde-aeb1-ecaca69bd1e1" name="Start" type="Start"><subsheetid>786de555-827a-4eac-b816-ebf156a2174e</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>6d1559fa-649b-455b-8282-a95c7329ab79</onsuccess></stage><stage stageid="b53a4ff8-e27b-459e-bbc3-47f7b7ecff26" name="End" type="End"><subsheetid>786de555-827a-4eac-b816-ebf156a2174e</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Result" narrative="A boolean value to indicate if there are any batches that need verifying" stage="Result" /></outputs></stage><stage stageid="6d1559fa-649b-455b-8282-a95c7329ab79" name="Has Batches To Verify" type="Code"><subsheetid>786de555-827a-4eac-b816-ebf156a2174e</subsheetid><loginhibit /><narrative>Determines whether there are batches to verify within Decipher. Returns True if there is at least one batch to verify.</narrative><display x="15" y="-15" /><outputs><output type="flag" name="Result" stage="Result" /></outputs><onsuccess>b53a4ff8-e27b-459e-bbc3-47f7b7ecff26</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

try {
	Result = Connection.HasBatchesToVerify();
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to check if any batches need verifying: " + ex.Message, ex);
}]]></code></stage><stage stageid="a611d5dc-7ea5-4f30-bf8e-0970a0fa947b" name="Result" type="Data"><subsheetid>786de555-827a-4eac-b816-ebf156a2174e</subsheetid><narrative>Result to indicate if there are any batches that need verifying or not</narrative><display x="90" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4935c34e-b457-4509-91a5-dc56bf9d59c3" name="Add Batch Metadata" type="SubSheetInfo"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><narrative>Adds metadata to the batch. This adds to any existing metadata that already exists on the batch.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ac768e03-cd20-40b7-9fd9-a4a06502fb2d" name="Start" type="Start"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Batch ID" narrative="The ID of the batch to add the metadata to." stage="Batch ID" /><input type="collection" name="Metadata" narrative=" Metadata should be in the form of &quot;key&quot; then &quot;value&quot; in the collection. This is a collection of key value pairs with unique keys." stage="Metadata" /></inputs><onsuccess>d7696736-c75a-4af7-8b1d-a88cb51bf7dd</onsuccess></stage><stage stageid="9c53f1e1-f2e4-44f5-91d0-52b6a8cc220d" name="End" type="End"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="9be785e1-2bbf-4a4f-a88e-718c0f2fa8eb" name="Batch ID" type="Data"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><display x="120" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2236e16-3fa0-49fe-a302-d5daaa3d71fb" name="Metadata" type="Collection"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><display x="120" y="-60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d7696736-c75a-4af7-8b1d-a88cb51bf7dd" name="AddBatchMetadata" type="Code"><subsheetid>a6e2963e-3ea4-4443-bed5-b58645b4ba0f</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="BatchId" expr="[Batch ID]" /><input type="collection" name="Metadata" expr="[Metadata]" /></inputs><onsuccess>9c53f1e1-f2e4-44f5-91d0-52b6a8cc220d</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

if(string.IsNullOrWhiteSpace(BatchId)) {
	throw new ArgumentException("Please enter a Batch ID");
}

try {
	Connection.AddBatchMetadata(Guid.Parse(BatchId), Metadata);
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to add batch metadata: " + ex.Message, ex);
}]]></code></stage><stage stageid="ba2789fb-53b6-4208-b4e0-01ad5b4e3f27" name="Get Batch Metadata" type="SubSheetInfo"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><narrative>Gets the batch metadata</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="acba512b-4746-43ed-be92-56079d1a28ff" name="Start" type="Start"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Batch ID" narrative="The ID of the batch to get the metadata from." stage="Batch ID" /></inputs><onsuccess>bdf95ef0-0024-4c56-b938-f94a39b3e51b</onsuccess></stage><stage stageid="74393ced-0c16-4583-9dcf-af7966fb0117" name="End" type="End"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Metadata" narrative="The batch's metadata" stage="Metadata" /></outputs></stage><stage stageid="6c3abfaf-02ea-41bc-bf89-0916e86d31ab" name="Batch ID" type="Data"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdf95ef0-0024-4c56-b938-f94a39b3e51b" name="Get batch metadata" type="Code"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="BatchId" expr="[Batch ID]" /></inputs><outputs><output type="collection" name="Metadata" stage="Metadata" /></outputs><onsuccess>74393ced-0c16-4583-9dcf-af7966fb0117</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

if(string.IsNullOrWhiteSpace(BatchId)) {
	throw new ArgumentException("Please enter a Batch ID");
}

try {
	Metadata = Connection.GetBatchMetadata(Guid.Parse(BatchId));
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to get batch metadata: " + ex.Message, ex);
}]]></code></stage><stage stageid="2f495ce1-82c0-4d72-960e-05c0b0e3dcc3" name="Metadata" type="Collection"><subsheetid>c7708976-9751-4268-91ce-03b57e31cdaa</subsheetid><loginhibit /><display x="105" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9e793047-6812-4d9d-883f-39efb8e904dd" name="Remove Batch Metadata" type="SubSheetInfo"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><narrative>Removes batch metadata.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1ed50895-490f-4f4c-8eea-9214614ab275" name="Start" type="Start"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Batch ID" narrative="The Batch ID" stage="Batch ID" /><input type="collection" name="Keys" narrative="The keys to remove from the metadata" stage="Keys" /></inputs><onsuccess>61c2f847-15e3-45cc-b2f0-28c157331210</onsuccess></stage><stage stageid="d04ab4cd-5e67-4f40-b0de-68bd18a6e86e" name="End" type="End"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="671877bb-f9fa-4792-a61d-559dbd649769" name="Batch ID" type="Data"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d27562d8-d569-46ab-9b8d-f7f812189f2e" name="Keys" type="Collection"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><display x="120" y="-45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61c2f847-15e3-45cc-b2f0-28c157331210" name="Remove Batch Metadata" type="Code"><subsheetid>fce2561e-664d-47e9-9d43-d43280e6170e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="BatchId" expr="[Batch ID]" /><input type="collection" name="Keys" expr="[Keys]" /></inputs><onsuccess>d04ab4cd-5e67-4f40-b0de-68bd18a6e86e</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

if(string.IsNullOrWhiteSpace(BatchId)) {
	throw new ArgumentException("Please enter a Batch ID");
}

try {
	Connection.RemoveBatchMetadata(Guid.Parse(BatchId), Keys);
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to remove batch metadata: " + ex.Message, ex);
}]]></code></stage><stage stageid="74538ede-ee48-46fd-b7be-1855b811d830" name="MqPort" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="150" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c42c1982-ec75-418a-9d1f-b7d4c5dc79ab" name="MqUsername" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="210" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a2c29762-8c57-4051-9efb-48ed2011516d" name="MqPassword" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="270" y="-60" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="0c68e82e-ce54-449c-a12a-4e75975ada2a" name="MqHostname" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="90" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b72f90f3-e274-40a1-b3d7-b82b91ae967a" name="Create Classification Training Batch" type="SubSheetInfo"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><narrative>Creates a new classification training batch to allow document classification training</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="746f7f04-f6fa-46e2-9943-57abd8a0c08b" name="Start" type="Start"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Name" narrative="The batch name" stage="Name" /><input type="text" name="Description" narrative="The batch description" stage="Description" /><input type="text" name="Batch Type Name" narrative="The name of the batch type to use for this batch" stage="Batch Type Name" /><input type="text" name="Document Type Name" narrative="The name of the document type to use for this batch" stage="Document Type Name" /></inputs><onsuccess>4da68664-958e-4e55-835f-73c525c76bb5</onsuccess></stage><stage stageid="9508494b-d35f-4b46-b2a5-5dae5ac90b33" name="End" type="End"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Batch ID" narrative="The ID of the created batch" stage="Batch ID" /></outputs></stage><stage stageid="4da68664-958e-4e55-835f-73c525c76bb5" name="Create Classification Training Batch" type="Code"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Name" expr="[Name]" /><input type="text" name="Description" expr="[Description]" /><input type="text" name="BatchTypeName" expr="[Batch Type Name]" /><input type="text" name="DocumentTypeName" expr="[Document Type Name]" /></inputs><outputs><output type="text" name="BatchId" stage="Batch ID" /></outputs><onsuccess>9508494b-d35f-4b46-b2a5-5dae5ac90b33</onsuccess><code><![CDATA[if(Connection == null)
	throw new Exception("You must initialise Decipher by calling the Set Up action before calling this action");

try {
	BatchId = Connection.CreateClassificationTrainingBatch(BatchTypeName, Name, Description, DocumentTypeName).ToString();
}
catch (AuthenticationRequiredException) {
	throw new Exception("Please authenticate using the Login action first");
}
catch (Exception ex) {
	throw new Exception("Unable to create classification training batch: " + ex.Message, ex);
}]]></code></stage><stage stageid="674ff81e-8c0c-4663-970f-84a3df184d7a" name="Name" type="Data"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6cc7427-24b4-4cdb-b960-7d6fa25002f4" name="Description" type="Data"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad87bae4-a682-4e29-b22a-7f4e5788172d" name="Batch Type Name" type="Data"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04a057a8-ef0f-4043-a226-5f28334e8c02" name="Batch ID" type="Data"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c3f81d8-4a26-4d70-bc73-389806fd76a2" name="Document Type Name" type="Data"><subsheetid>ff46900a-cd75-466d-bf7c-769c2f1330e4</subsheetid><display x="270" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec8aefce-b13a-4ac1-883c-6d17521d81c4" name="Split To Single Pages" type="Data"><subsheetid>9360b5f9-ba33-4e45-985e-2d57169b6f4e</subsheetid><display x="330" y="-105" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f8e0c9e8-1a9b-4e47-911f-10274c5ac3db" name="obfuscateFileName" type="Data"><subsheetid>360beb0f-12f9-48a0-981b-c030a6605bb6</subsheetid><display x="330" y="-60" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="6f9680f1-616c-4884-b58c-42ed51446377" name="Utility - Collection Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation" version="6.7.1.21315" bpversion="6.7.0.20116" narrative="Utility functions for manipulating collections." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="53950e2c-2499-41fc-aed2-207a6c7431fd" type="Normal" published="False"><name>Utility Functions Test</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-93</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Function CloneColumn(col As DataColumn) As DataColumn
	Dim tp = col.GetType()
	Return TryCast(
		tp.GetMethod("Clone", BindingFlags.Instance Or BindingFlags.NonPublic).
			Invoke(col, Nothing),
		DataColumn
	)
End Function

Function GetStringValue(row As DataRow, fieldName As String) As String
	Dim col As DataColumn = row.Table.Columns(fieldName)
	Dim val = row(fieldName)
	Select Case True
		Case IsDateColumn(col)
			Return CDate(val).ToString("d") 
		Case IsTimeColumn(col)
			Return CDate(val).ToString("T")
		Case IsDateTimeColumn(col)
			Return CDate(val).ToString("G")
		Case Else
			Return CStr(val)
	End Select
End Function

Function GetBPType(col As DataColumn) As String
	If col Is Nothing Then Return Nothing
	If Not col.ExtendedProperties.ContainsKey("bptype") Then Return Nothing
	Return col.ExtendedProperties("bptype").ToString()
End Function

Function IsDateColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "date")
End Function

Function IsTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "time")
End Function

Function IsDateTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "datetime")
End Function

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case DotNetType Is GetType(System.Data.DataTable)
         return "collection"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="135" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="15198914-f283-4549-a823-c7b71d71d160" name="Utility Functions Test" type="SubSheetInfo"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6b30836d-2593-48c6-a021-b6b3e92ad88a" name="Start" type="Start"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5830837-58db-473d-b7dc-4651a10f79c6</onsuccess></stage><stage stageid="5a5bf1e7-2072-4226-96ba-ab3d0a656589" name="End" type="End"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5830837-58db-473d-b7dc-4651a10f79c6" name="Get Collection Fields" type="SubSheet"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Defined Collection 1]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Collection Fields" /></outputs><onsuccess>5a5bf1e7-2072-4226-96ba-ab3d0a656589</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e8e6edcb-f2fe-4582-9037-5ddb4ca15572" name="Collection Fields" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="105" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="980dd5f0-a047-4672-9a7a-18632a5826a0" name="Defined Collection 1" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="My Text Field" type="text" /><field name="My Number Field" type="number" /><field name="My DateTime Field" type="datetime" /><field name="My TimeSpan Field" type="timespan" /><field name="My Flag Field" type="flag" /><field name="My Image Field" type="image" /></collectioninfo><initialvalue><row><field name="My Text Field" type="text" value="Test Text" /><field name="My Number Field" type="number" value="5" /><field name="My DateTime Field" type="datetime" value="2009-07-23 01:46:26Z" /><field name="My TimeSpan Field" type="timespan" value="0.00:03:42" /><field name="My Flag Field" type="flag" value="True" /><field name="My Image Field" type="image" value="" /></row><row><field name="My Text Field" type="text" value="asdf" /><field name="My Number Field" type="number" value="10" /><field name="My DateTime Field" type="datetime" value="" /><field name="My TimeSpan Field" type="timespan" value="0.00:00:00" /><field name="My Flag Field" type="flag" value="False" /><field name="My Image Field" type="image" value="" /></row></initialvalue></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = GetStringValue(Coll.Rows(RowIndex), FieldName)]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="330" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="390" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="285" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="135" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="240" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="105" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="240" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = CollectionIn.Clone()

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><display x="135" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="150" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><display x="-60" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="375" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="240" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="180" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="210" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="360" y="120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><display x="-255" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-330" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows

  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    Return
  End If

Next]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[Try
	BP_Collection_Out = BP_Collection_In
	BP_Collection_Out.Columns.Remove(Column_Name)
	Success = True
Catch e as Exception
	Error_Message = e.ToString()
	Success = False
End Try
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="210" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><display x="-180" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><display x="-195" y="-105" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><display x="-180" y="-210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="0" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted.  The field that is referred to as the key field in the collection must be a text data type as well." stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
CCD_Table_In.AcceptChanges()

	For Each row As DataRow in CCD_Table_In.Rows
			If String.IsNullOrEmpty(row(Key_Field).ToString().Trim()) Then
				row.Delete()
			End If
	Next

CCD_Table_In.AcceptChanges()

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False
End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><display x="-165" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="number" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(CloneColumn(c))
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = c2t.Clone()

c3 = c3t.Clone()

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		End If
		If c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="285" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="345" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="135" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="255" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = Source_Collection.Clone()

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="-180" y="45" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="120" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="90" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="-90" y="75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = GetStringValue(r, c.ColumnName)
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><display x="-135" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="255" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="15" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage></process></object>
        <object id="127e8d19-1def-4d50-89f7-9861635713c2" name="Utility - Collection Manipulation Extended" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation Extended" version="6.8.0.23415" bpversion="6.7.0.20116" narrative="Utility functions for manipulating collections." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="53950e2c-2499-41fc-aed2-207a6c7431fd" type="Normal" published="False"><name>Utility Functions Test</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-93</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b4ac9a93-fdf3-41bd-a6e1-4686da384696" type="Normal" published="True"><name>Append Field (Collection)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Function CloneColumn(col As DataColumn) As DataColumn
	Dim tp = col.GetType()
	Return TryCast(
		tp.GetMethod("Clone", BindingFlags.Instance Or BindingFlags.NonPublic).
			Invoke(col, Nothing),
		DataColumn
	)
End Function

Function GetStringValue(row As DataRow, fieldName As String) As String
	Dim col As DataColumn = row.Table.Columns(fieldName)
	Dim val = row(fieldName)
	Select Case True
		Case IsDateColumn(col)
			Return CDate(val).ToString("d") 
		Case IsTimeColumn(col)
			Return CDate(val).ToString("T")
		Case IsDateTimeColumn(col)
			Return CDate(val).ToString("G")
		Case Else
			Return CStr(val)
	End Select
End Function

Function GetBPType(col As DataColumn) As String
	If col Is Nothing Then Return Nothing
	If Not col.ExtendedProperties.ContainsKey("bptype") Then Return Nothing
	Return col.ExtendedProperties("bptype").ToString()
End Function

Function IsDateColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "date")
End Function

Function IsTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "time")
End Function

Function IsDateTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "datetime")
End Function

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case DotNetType Is GetType(System.Data.DataTable)
         return "collection"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="135" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="15198914-f283-4549-a823-c7b71d71d160" name="Utility Functions Test" type="SubSheetInfo"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6b30836d-2593-48c6-a021-b6b3e92ad88a" name="Start" type="Start"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5830837-58db-473d-b7dc-4651a10f79c6</onsuccess></stage><stage stageid="5a5bf1e7-2072-4226-96ba-ab3d0a656589" name="End" type="End"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5830837-58db-473d-b7dc-4651a10f79c6" name="Get Collection Fields" type="SubSheet"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Defined Collection 1]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Collection Fields" /></outputs><onsuccess>5a5bf1e7-2072-4226-96ba-ab3d0a656589</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e8e6edcb-f2fe-4582-9037-5ddb4ca15572" name="Collection Fields" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="105" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="980dd5f0-a047-4672-9a7a-18632a5826a0" name="Defined Collection 1" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="My Text Field" type="text" /><field name="My Number Field" type="number" /><field name="My DateTime Field" type="datetime" /><field name="My TimeSpan Field" type="timespan" /><field name="My Flag Field" type="flag" /><field name="My Image Field" type="image" /></collectioninfo><initialvalue><row><field name="My Text Field" type="text" value="Test Text" /><field name="My Number Field" type="number" value="5" /><field name="My DateTime Field" type="datetime" value="2009-07-23 01:46:26Z" /><field name="My TimeSpan Field" type="timespan" value="0.00:03:42" /><field name="My Flag Field" type="flag" value="True" /><field name="My Image Field" type="image" value="" /></row><row><field name="My Text Field" type="text" value="asdf" /><field name="My Number Field" type="number" value="10" /><field name="My DateTime Field" type="datetime" value="" /><field name="My TimeSpan Field" type="timespan" value="0.00:00:00" /><field name="My Flag Field" type="flag" value="False" /><field name="My Image Field" type="image" value="" /></row></initialvalue></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = GetStringValue(Coll.Rows(RowIndex), FieldName)]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="330" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="390" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="285" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="135" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="240" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="105" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="240" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = CollectionIn.Clone()

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><display x="135" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="150" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><display x="-60" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="375" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="240" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="180" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="210" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="360" y="120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><display x="-255" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-330" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows

  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    Return
  End If

Next]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[Try
	BP_Collection_Out = BP_Collection_In
	BP_Collection_Out.Columns.Remove(Column_Name)
	Success = True
Catch e as Exception
	Error_Message = e.ToString()
	Success = False
End Try
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="210" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><display x="-180" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><display x="-195" y="-105" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><display x="-180" y="-210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="0" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted.  The field that is referred to as the key field in the collection must be a text data type as well." stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
CCD_Table_In.AcceptChanges()

	For Each row As DataRow in CCD_Table_In.Rows
			If String.IsNullOrEmpty(row(Key_Field).ToString().Trim()) Then
				row.Delete()
			End If
	Next

CCD_Table_In.AcceptChanges()

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False
End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><display x="-165" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="number" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(CloneColumn(c))
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = c2t.Clone()

c3 = c3t.Clone()

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		End If
		If c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="285" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="345" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="135" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="255" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = Source_Collection.Clone()

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="-180" y="45" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="120" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="90" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="-90" y="75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = GetStringValue(r, c.ColumnName)
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><display x="-135" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="255" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="15" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage><stage stageid="23fac109-2354-4f84-abb2-afe1e75f2d3a" name="Append Field (Collection)" type="SubSheetInfo"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="258ff796-9a6e-4791-bd37-aaa2a2dca36a" name="Start" type="Start"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="135" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /></inputs><onsuccess>fa1dda37-b42b-4978-a89a-18661791c6f7</onsuccess></stage><stage stageid="7c1ead78-7915-4713-b8d1-0871d923a5d4" name="End" type="End"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><loginhibit /><display x="135" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="fa1dda37-b42b-4978-a89a-18661791c6f7" name="Code1" type="Code"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><loginhibit /><display x="135" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>7c1ead78-7915-4713-b8d1-0871d923a5d4</onsuccess><code><![CDATA[

Dim addedcollection As DataTable  
addedcollection = new DataTable

If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, addedcollection.GetType())
End If

New_Collection = Collection
]]></code></stage><stage stageid="3d9701d1-845e-4079-b644-383cb80d2707" name="Collection Out" type="Collection"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><display x="-75" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="54b8d150-1061-4a2f-af13-328747c0cafe" name="Field Name" type="Data"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><display x="-75" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f726b91b-8433-41f4-b63f-b17ab41504ce" name="Collection In" type="Collection"><subsheetid>b4ac9a93-fdf3-41bd-a6e1-4686da384696</subsheetid><display x="-75" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></object>
        <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" name="Utility - File Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management" version="6.6.0.15260" bpversion="6.7.0.20116" narrative="Utility methods for interacting with the file System." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.8.0.23415" bpversion="6.7.0.20116" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[
try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(Process_Name)
 exists = true
 exit sub
next

catch e as exception
end try

exists = false]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[try

if wildcard then
	title = title.replace("*", ".*")
	title = title.replace("?", "\w")
end if

exists = false
for each p as system.diagnostics.process in system.diagnostics.process.getprocesses()
	if wildcard then
		if system.text.regularexpressions.regex.ismatch(p.mainwindowtitle, title) then
			exists = true
			exit sub
		end if
	else
		if p.mainwindowtitle.tolower = title.tolower then
			exists = true
			exit sub
		end if
	end if
next

catch e as exception

end try
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cd594031-696a-419e-a6c2-36688addfb0f" name="Titles CSV" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-30" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage></process></object>
        <work-queue id="2" name="Decipher Request Queue" key-field="Batch Name" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <work-queue id="3" name="Decipher Response Queue" key-field="Batch Name" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <environment-variable id="RepetitiveDecipherPollingWaitTime" name="RepetitiveDecipherPollingWaitTime" type="number" value="60" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Wait time in Seconds for Decipher Batch check</description>
        </environment-variable>
        <process-group id="2da5afb2-425b-4eba-a4ab-7fcb9ae3e798" name="Decipher Templates" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="1f1e6456-1438-4c8c-8340-fbe9428bcc39" />
                <process id="eed4c952-74eb-4f1c-aa64-eb7ab0b06082" />
                <process id="3ac5a1ec-bda0-4566-874e-e1b598096f97" />
            </members>
        </process-group>
        <object-group id="6146b9a7-aae7-4363-8b83-12f95a015ba3" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="29192c0f-d13c-4769-bed3-9c51217efab4" />
                <object id="8bcc376a-0921-4521-a469-9058197cef1d" />
                <object id="6f9680f1-616c-4884-b58c-42ed51446377" />
                <object id="127e8d19-1def-4d50-89f7-9861635713c2" />
                <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>
